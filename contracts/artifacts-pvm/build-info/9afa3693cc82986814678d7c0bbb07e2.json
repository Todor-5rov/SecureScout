{"id":"9afa3693cc82986814678d7c0bbb07e2","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"contracts/UserRegistry.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ncontract AgentRegistryOLD {\n    struct AgentProfile {\n        address agent;\n        string platform;\n        uint256 price;\n        string location;\n        string avatar;\n        string description;\n    }\n\n    mapping(address => AgentProfile) public agents;\n    address[] public agentList;\n\n    event Registered(address indexed agent);\n    event AgentProfileUpdated(address indexed agent, AgentProfile profile);\n\n    function registerAsAgent(\n        string memory platform,\n        uint256 price,\n        string memory location,\n        string memory avatar,\n        string memory description\n    ) external {\n        require(agents[msg.sender].agent == address(0), \"Already registered\");\n        AgentProfile memory profile = AgentProfile(\n            msg.sender, platform, price, location, avatar, description\n        );\n        agents[msg.sender] = profile;\n        agentList.push(msg.sender);\n        emit Registered(msg.sender);\n        emit AgentProfileUpdated(msg.sender, profile);\n    }\n\n    function updateAgentProfile(\n        string memory platform,\n        uint256 price,\n        string memory location,\n        string memory avatar,\n        string memory description\n    ) external {\n        require(agents[msg.sender].agent != address(0), \"Not an agent\");\n        AgentProfile storage profile = agents[msg.sender];\n        profile.platform = platform;\n        profile.price = price;\n        profile.location = location;\n        profile.avatar = avatar;\n        profile.description = description;\n        emit AgentProfileUpdated(msg.sender, profile);\n    }\n\n    function getAgentProfile(address agent) external view returns (AgentProfile memory) {\n        return agents[agent];\n    }\n}\n\ncontract ConsumerRegistry {\n    struct ConsumerProfile {\n        address consumer;\n        string name;\n        string avatar;\n    }\n\n    mapping(address => ConsumerProfile) public consumers;\n    address[] public consumerList;\n\n    event Registered(address indexed consumer);\n    event ConsumerProfileUpdated(address indexed consumer, ConsumerProfile profile);\n\n    function registerAsConsumer(string memory name, string memory avatar) external {\n        require(consumers[msg.sender].consumer == address(0), \"Already registered\");\n        ConsumerProfile memory profile = ConsumerProfile(msg.sender, name, avatar);\n        consumers[msg.sender] = profile;\n        consumerList.push(msg.sender);\n        emit Registered(msg.sender);\n        emit ConsumerProfileUpdated(msg.sender, profile);\n    }\n\n    function updateConsumerProfile(string memory name, string memory avatar) external {\n        require(consumers[msg.sender].consumer != address(0), \"Not a consumer\");\n        ConsumerProfile storage profile = consumers[msg.sender];\n        profile.name = name;\n        profile.avatar = avatar;\n        emit ConsumerProfileUpdated(msg.sender, profile);\n    }\n\n    function getConsumerProfile(address consumer) external view returns (ConsumerProfile memory) {\n        return consumers[consumer];\n    }\n} "}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi"]}},"resolc":{"version":"latest","compilerSource":"npm","settings":{"optimizer":{}}}}},"output":{"errors":[],"version":"0.8.28","long_version":"0.8.28+commit.7893614a.Emscripten.clang","revive_version":"0.2.0+commit.e94432e.llvm-18.1.8","sources":{"contracts/UserRegistry.sol":{"id":0,"ast":{"absolutePath":"contracts/UserRegistry.sol","exportedSymbols":{"AgentRegistryOLD":[185],"ConsumerRegistry":[330]},"id":331,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"AgentRegistryOLD","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":185,"linearizedBaseContracts":[185],"name":"AgentRegistryOLD","nameLocation":"67:16:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AgentRegistryOLD.AgentProfile","id":14,"members":[{"constant":false,"id":3,"mutability":"mutable","name":"agent","nameLocation":"128:5:0","nodeType":"VariableDeclaration","scope":14,"src":"120:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2,"name":"address","nodeType":"ElementaryTypeName","src":"120:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5,"mutability":"mutable","name":"platform","nameLocation":"150:8:0","nodeType":"VariableDeclaration","scope":14,"src":"143:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4,"name":"string","nodeType":"ElementaryTypeName","src":"143:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"price","nameLocation":"176:5:0","nodeType":"VariableDeclaration","scope":14,"src":"168:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"168:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"location","nameLocation":"198:8:0","nodeType":"VariableDeclaration","scope":14,"src":"191:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8,"name":"string","nodeType":"ElementaryTypeName","src":"191:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11,"mutability":"mutable","name":"avatar","nameLocation":"223:6:0","nodeType":"VariableDeclaration","scope":14,"src":"216:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":10,"name":"string","nodeType":"ElementaryTypeName","src":"216:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13,"mutability":"mutable","name":"description","nameLocation":"246:11:0","nodeType":"VariableDeclaration","scope":14,"src":"239:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12,"name":"string","nodeType":"ElementaryTypeName","src":"239:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"AgentProfile","nameLocation":"97:12:0","nodeType":"StructDefinition","scope":185,"src":"90:174:0","visibility":"public"},{"constant":false,"functionSelector":"fd66091e","id":19,"mutability":"mutable","name":"agents","nameLocation":"310:6:0","nodeType":"VariableDeclaration","scope":185,"src":"270:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AgentProfile_$14_storage_$","typeString":"mapping(address => struct AgentRegistryOLD.AgentProfile)"},"typeName":{"id":18,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"278:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"270:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AgentProfile_$14_storage_$","typeString":"mapping(address => struct AgentRegistryOLD.AgentProfile)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":17,"nodeType":"UserDefinedTypeName","pathNode":{"id":16,"name":"AgentProfile","nameLocations":["289:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"289:12:0"},"referencedDeclaration":14,"src":"289:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_AgentProfile_$14_storage_ptr","typeString":"struct AgentRegistryOLD.AgentProfile"}}},"visibility":"public"},{"constant":false,"functionSelector":"2f80c54f","id":22,"mutability":"mutable","name":"agentList","nameLocation":"339:9:0","nodeType":"VariableDeclaration","scope":185,"src":"322:26:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":20,"name":"address","nodeType":"ElementaryTypeName","src":"322:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":21,"nodeType":"ArrayTypeName","src":"322:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"anonymous":false,"eventSelector":"2d3734a8e47ac8316e500ac231c90a6e1848ca2285f40d07eaa52005e4b3a0e9","id":26,"name":"Registered","nameLocation":"361:10:0","nodeType":"EventDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"indexed":true,"mutability":"mutable","name":"agent","nameLocation":"388:5:0","nodeType":"VariableDeclaration","scope":26,"src":"372:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"372:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"371:23:0"},"src":"355:40:0"},{"anonymous":false,"eventSelector":"0a36134b198b616c86ff9567c35741c18574046ea76e7fcf155c88bdd1deaace","id":33,"name":"AgentProfileUpdated","nameLocation":"406:19:0","nodeType":"EventDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"indexed":true,"mutability":"mutable","name":"agent","nameLocation":"442:5:0","nodeType":"VariableDeclaration","scope":33,"src":"426:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31,"indexed":false,"mutability":"mutable","name":"profile","nameLocation":"462:7:0","nodeType":"VariableDeclaration","scope":33,"src":"449:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AgentProfile_$14_memory_ptr","typeString":"struct AgentRegistryOLD.AgentProfile"},"typeName":{"id":30,"nodeType":"UserDefinedTypeName","pathNode":{"id":29,"name":"AgentProfile","nameLocations":["449:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"449:12:0"},"referencedDeclaration":14,"src":"449:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_AgentProfile_$14_storage_ptr","typeString":"struct AgentRegistryOLD.AgentProfile"}},"visibility":"internal"}],"src":"425:45:0"},"src":"400:71:0"},{"body":{"id":98,"nodeType":"Block","src":"669:386:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":47,"name":"agents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"687:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AgentProfile_$14_storage_$","typeString":"mapping(address => struct AgentRegistryOLD.AgentProfile storage ref)"}},"id":50,"indexExpression":{"expression":{"id":48,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"694:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"698:6:0","memberName":"sender","nodeType":"MemberAccess","src":"694:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"687:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_AgentProfile_$14_storage","typeString":"struct AgentRegistryOLD.AgentProfile storage ref"}},"id":51,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"706:5:0","memberName":"agent","nodeType":"MemberAccess","referencedDeclaration":3,"src":"687:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":54,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"723:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"715:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":52,"name":"address","nodeType":"ElementaryTypeName","src":"715:7:0","typeDescriptions":{}}},"id":55,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"715:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"687:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c72656164792072656769737465726564","id":57,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"727:20:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2","typeString":"literal_string \"Already registered\""},"value":"Already registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2","typeString":"literal_string \"Already registered\""}],"id":46,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"679:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"679:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":59,"nodeType":"ExpressionStatement","src":"679:69:0"},{"assignments":[62],"declarations":[{"constant":false,"id":62,"mutability":"mutable","name":"profile","nameLocation":"778:7:0","nodeType":"VariableDeclaration","scope":98,"src":"758:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AgentProfile_$14_memory_ptr","typeString":"struct AgentRegistryOLD.AgentProfile"},"typeName":{"id":61,"nodeType":"UserDefinedTypeName","pathNode":{"id":60,"name":"AgentProfile","nameLocations":["758:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"758:12:0"},"referencedDeclaration":14,"src":"758:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_AgentProfile_$14_storage_ptr","typeString":"struct AgentRegistryOLD.AgentProfile"}},"visibility":"internal"}],"id":72,"initialValue":{"arguments":[{"expression":{"id":64,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"814:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"818:6:0","memberName":"sender","nodeType":"MemberAccess","src":"814:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":66,"name":"platform","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"826:8:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":67,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"836:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":68,"name":"location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"843:8:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":69,"name":"avatar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"853:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":70,"name":"description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"861:11:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":63,"name":"AgentProfile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"788:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AgentProfile_$14_storage_ptr_$","typeString":"type(struct AgentRegistryOLD.AgentProfile storage pointer)"}},"id":71,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:94:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AgentProfile_$14_memory_ptr","typeString":"struct AgentRegistryOLD.AgentProfile memory"}},"nodeType":"VariableDeclarationStatement","src":"758:124:0"},{"expression":{"id":78,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":73,"name":"agents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"892:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AgentProfile_$14_storage_$","typeString":"mapping(address => struct AgentRegistryOLD.AgentProfile storage ref)"}},"id":76,"indexExpression":{"expression":{"id":74,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"899:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"903:6:0","memberName":"sender","nodeType":"MemberAccess","src":"899:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"892:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_AgentProfile_$14_storage","typeString":"struct AgentRegistryOLD.AgentProfile storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":77,"name":"profile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62,"src":"913:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_AgentProfile_$14_memory_ptr","typeString":"struct AgentRegistryOLD.AgentProfile memory"}},"src":"892:28:0","typeDescriptions":{"typeIdentifier":"t_struct$_AgentProfile_$14_storage","typeString":"struct AgentRegistryOLD.AgentProfile storage ref"}},"id":79,"nodeType":"ExpressionStatement","src":"892:28:0"},{"expression":{"arguments":[{"expression":{"id":83,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"945:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"949:6:0","memberName":"sender","nodeType":"MemberAccess","src":"945:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":80,"name":"agentList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"930:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"940:4:0","memberName":"push","nodeType":"MemberAccess","src":"930:14:0","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"930:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"930:26:0"},{"eventCall":{"arguments":[{"expression":{"id":88,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"982:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"986:6:0","memberName":"sender","nodeType":"MemberAccess","src":"982:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":87,"name":"Registered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"971:10:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"971:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"EmitStatement","src":"966:27:0"},{"eventCall":{"arguments":[{"expression":{"id":93,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1028:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":94,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1032:6:0","memberName":"sender","nodeType":"MemberAccess","src":"1028:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":95,"name":"profile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62,"src":"1040:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_AgentProfile_$14_memory_ptr","typeString":"struct AgentRegistryOLD.AgentProfile memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_AgentProfile_$14_memory_ptr","typeString":"struct AgentRegistryOLD.AgentProfile memory"}],"id":92,"name":"AgentProfileUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"1008:19:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_struct$_AgentProfile_$14_memory_ptr_$returns$__$","typeString":"function (address,struct AgentRegistryOLD.AgentProfile memory)"}},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1008:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":97,"nodeType":"EmitStatement","src":"1003:45:0"}]},"functionSelector":"645fff2d","id":99,"implemented":true,"kind":"function","modifiers":[],"name":"registerAsAgent","nameLocation":"486:15:0","nodeType":"FunctionDefinition","parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"platform","nameLocation":"525:8:0","nodeType":"VariableDeclaration","scope":99,"src":"511:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":34,"name":"string","nodeType":"ElementaryTypeName","src":"511:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37,"mutability":"mutable","name":"price","nameLocation":"551:5:0","nodeType":"VariableDeclaration","scope":99,"src":"543:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36,"name":"uint256","nodeType":"ElementaryTypeName","src":"543:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39,"mutability":"mutable","name":"location","nameLocation":"580:8:0","nodeType":"VariableDeclaration","scope":99,"src":"566:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38,"name":"string","nodeType":"ElementaryTypeName","src":"566:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":41,"mutability":"mutable","name":"avatar","nameLocation":"612:6:0","nodeType":"VariableDeclaration","scope":99,"src":"598:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":40,"name":"string","nodeType":"ElementaryTypeName","src":"598:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":43,"mutability":"mutable","name":"description","nameLocation":"642:11:0","nodeType":"VariableDeclaration","scope":99,"src":"628:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":42,"name":"string","nodeType":"ElementaryTypeName","src":"628:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"501:158:0"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[],"src":"669:0:0"},"scope":185,"src":"477:578:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":170,"nodeType":"Block","src":"1256:375:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":113,"name":"agents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"1274:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AgentProfile_$14_storage_$","typeString":"mapping(address => struct AgentRegistryOLD.AgentProfile storage ref)"}},"id":116,"indexExpression":{"expression":{"id":114,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1281:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1285:6:0","memberName":"sender","nodeType":"MemberAccess","src":"1281:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1274:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_AgentProfile_$14_storage","typeString":"struct AgentRegistryOLD.AgentProfile storage ref"}},"id":117,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1293:5:0","memberName":"agent","nodeType":"MemberAccess","referencedDeclaration":3,"src":"1274:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1310:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1302:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":118,"name":"address","nodeType":"ElementaryTypeName","src":"1302:7:0","typeDescriptions":{}}},"id":121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1302:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1274:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420616e206167656e74","id":123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1314:14:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_cd9a1b18579975c1b4ecca28f9c5a8c4501761365b74ce5fce8c827bbe7abbe2","typeString":"literal_string \"Not an agent\""},"value":"Not an agent"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cd9a1b18579975c1b4ecca28f9c5a8c4501761365b74ce5fce8c827bbe7abbe2","typeString":"literal_string \"Not an agent\""}],"id":112,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1266:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1266:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":125,"nodeType":"ExpressionStatement","src":"1266:63:0"},{"assignments":[128],"declarations":[{"constant":false,"id":128,"mutability":"mutable","name":"profile","nameLocation":"1360:7:0","nodeType":"VariableDeclaration","scope":170,"src":"1339:28:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AgentProfile_$14_storage_ptr","typeString":"struct AgentRegistryOLD.AgentProfile"},"typeName":{"id":127,"nodeType":"UserDefinedTypeName","pathNode":{"id":126,"name":"AgentProfile","nameLocations":["1339:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1339:12:0"},"referencedDeclaration":14,"src":"1339:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_AgentProfile_$14_storage_ptr","typeString":"struct AgentRegistryOLD.AgentProfile"}},"visibility":"internal"}],"id":133,"initialValue":{"baseExpression":{"id":129,"name":"agents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"1370:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AgentProfile_$14_storage_$","typeString":"mapping(address => struct AgentRegistryOLD.AgentProfile storage ref)"}},"id":132,"indexExpression":{"expression":{"id":130,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1377:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1381:6:0","memberName":"sender","nodeType":"MemberAccess","src":"1377:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1370:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_AgentProfile_$14_storage","typeString":"struct AgentRegistryOLD.AgentProfile storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1339:49:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":134,"name":"profile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"1398:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_AgentProfile_$14_storage_ptr","typeString":"struct AgentRegistryOLD.AgentProfile storage pointer"}},"id":136,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1406:8:0","memberName":"platform","nodeType":"MemberAccess","referencedDeclaration":5,"src":"1398:16:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"platform","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"1417:8:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1398:27:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":139,"nodeType":"ExpressionStatement","src":"1398:27:0"},{"expression":{"id":144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":140,"name":"profile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"1435:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_AgentProfile_$14_storage_ptr","typeString":"struct AgentRegistryOLD.AgentProfile storage pointer"}},"id":142,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1443:5:0","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":7,"src":"1435:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":143,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"1451:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1435:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":145,"nodeType":"ExpressionStatement","src":"1435:21:0"},{"expression":{"id":150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":146,"name":"profile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"1466:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_AgentProfile_$14_storage_ptr","typeString":"struct AgentRegistryOLD.AgentProfile storage pointer"}},"id":148,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1474:8:0","memberName":"location","nodeType":"MemberAccess","referencedDeclaration":9,"src":"1466:16:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":149,"name":"location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"1485:8:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1466:27:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":151,"nodeType":"ExpressionStatement","src":"1466:27:0"},{"expression":{"id":156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":152,"name":"profile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"1503:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_AgentProfile_$14_storage_ptr","typeString":"struct AgentRegistryOLD.AgentProfile storage pointer"}},"id":154,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1511:6:0","memberName":"avatar","nodeType":"MemberAccess","referencedDeclaration":11,"src":"1503:14:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":155,"name":"avatar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":107,"src":"1520:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1503:23:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":157,"nodeType":"ExpressionStatement","src":"1503:23:0"},{"expression":{"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":158,"name":"profile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"1536:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_AgentProfile_$14_storage_ptr","typeString":"struct AgentRegistryOLD.AgentProfile storage pointer"}},"id":160,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1544:11:0","memberName":"description","nodeType":"MemberAccess","referencedDeclaration":13,"src":"1536:19:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":161,"name":"description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"1558:11:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1536:33:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":163,"nodeType":"ExpressionStatement","src":"1536:33:0"},{"eventCall":{"arguments":[{"expression":{"id":165,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1604:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1608:6:0","memberName":"sender","nodeType":"MemberAccess","src":"1604:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":167,"name":"profile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"1616:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_AgentProfile_$14_storage_ptr","typeString":"struct AgentRegistryOLD.AgentProfile storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_AgentProfile_$14_storage_ptr","typeString":"struct AgentRegistryOLD.AgentProfile storage pointer"}],"id":164,"name":"AgentProfileUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"1584:19:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_struct$_AgentProfile_$14_memory_ptr_$returns$__$","typeString":"function (address,struct AgentRegistryOLD.AgentProfile memory)"}},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1584:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":169,"nodeType":"EmitStatement","src":"1579:45:0"}]},"functionSelector":"7ffd924c","id":171,"implemented":true,"kind":"function","modifiers":[],"name":"updateAgentProfile","nameLocation":"1070:18:0","nodeType":"FunctionDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"platform","nameLocation":"1112:8:0","nodeType":"VariableDeclaration","scope":171,"src":"1098:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":100,"name":"string","nodeType":"ElementaryTypeName","src":"1098:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103,"mutability":"mutable","name":"price","nameLocation":"1138:5:0","nodeType":"VariableDeclaration","scope":171,"src":"1130:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102,"name":"uint256","nodeType":"ElementaryTypeName","src":"1130:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":105,"mutability":"mutable","name":"location","nameLocation":"1167:8:0","nodeType":"VariableDeclaration","scope":171,"src":"1153:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":104,"name":"string","nodeType":"ElementaryTypeName","src":"1153:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":107,"mutability":"mutable","name":"avatar","nameLocation":"1199:6:0","nodeType":"VariableDeclaration","scope":171,"src":"1185:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":106,"name":"string","nodeType":"ElementaryTypeName","src":"1185:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":109,"mutability":"mutable","name":"description","nameLocation":"1229:11:0","nodeType":"VariableDeclaration","scope":171,"src":"1215:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":108,"name":"string","nodeType":"ElementaryTypeName","src":"1215:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1088:158:0"},"returnParameters":{"id":111,"nodeType":"ParameterList","parameters":[],"src":"1256:0:0"},"scope":185,"src":"1061:570:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":183,"nodeType":"Block","src":"1721:37:0","statements":[{"expression":{"baseExpression":{"id":179,"name":"agents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"1738:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AgentProfile_$14_storage_$","typeString":"mapping(address => struct AgentRegistryOLD.AgentProfile storage ref)"}},"id":181,"indexExpression":{"id":180,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"1745:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1738:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_AgentProfile_$14_storage","typeString":"struct AgentRegistryOLD.AgentProfile storage ref"}},"functionReturnParameters":178,"id":182,"nodeType":"Return","src":"1731:20:0"}]},"functionSelector":"78dc93a4","id":184,"implemented":true,"kind":"function","modifiers":[],"name":"getAgentProfile","nameLocation":"1646:15:0","nodeType":"FunctionDefinition","parameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"agent","nameLocation":"1670:5:0","nodeType":"VariableDeclaration","scope":184,"src":"1662:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":172,"name":"address","nodeType":"ElementaryTypeName","src":"1662:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1661:15:0"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":184,"src":"1700:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AgentProfile_$14_memory_ptr","typeString":"struct AgentRegistryOLD.AgentProfile"},"typeName":{"id":176,"nodeType":"UserDefinedTypeName","pathNode":{"id":175,"name":"AgentProfile","nameLocations":["1700:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1700:12:0"},"referencedDeclaration":14,"src":"1700:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_AgentProfile_$14_storage_ptr","typeString":"struct AgentRegistryOLD.AgentProfile"}},"visibility":"internal"}],"src":"1699:21:0"},"scope":185,"src":"1637:121:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":331,"src":"58:1702:0","usedErrors":[],"usedEvents":[26,33]},{"abstract":false,"baseContracts":[],"canonicalName":"ConsumerRegistry","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":330,"linearizedBaseContracts":[330],"name":"ConsumerRegistry","nameLocation":"1771:16:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ConsumerRegistry.ConsumerProfile","id":192,"members":[{"constant":false,"id":187,"mutability":"mutable","name":"consumer","nameLocation":"1835:8:0","nodeType":"VariableDeclaration","scope":192,"src":"1827:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"1827:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":189,"mutability":"mutable","name":"name","nameLocation":"1860:4:0","nodeType":"VariableDeclaration","scope":192,"src":"1853:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":188,"name":"string","nodeType":"ElementaryTypeName","src":"1853:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"avatar","nameLocation":"1881:6:0","nodeType":"VariableDeclaration","scope":192,"src":"1874:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":190,"name":"string","nodeType":"ElementaryTypeName","src":"1874:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"ConsumerProfile","nameLocation":"1801:15:0","nodeType":"StructDefinition","scope":330,"src":"1794:100:0","visibility":"public"},{"constant":false,"functionSelector":"0bf53668","id":197,"mutability":"mutable","name":"consumers","nameLocation":"1943:9:0","nodeType":"VariableDeclaration","scope":330,"src":"1900:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ConsumerProfile_$192_storage_$","typeString":"mapping(address => struct ConsumerRegistry.ConsumerProfile)"},"typeName":{"id":196,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":193,"name":"address","nodeType":"ElementaryTypeName","src":"1908:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1900:35:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ConsumerProfile_$192_storage_$","typeString":"mapping(address => struct ConsumerRegistry.ConsumerProfile)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":195,"nodeType":"UserDefinedTypeName","pathNode":{"id":194,"name":"ConsumerProfile","nameLocations":["1919:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":192,"src":"1919:15:0"},"referencedDeclaration":192,"src":"1919:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerProfile_$192_storage_ptr","typeString":"struct ConsumerRegistry.ConsumerProfile"}}},"visibility":"public"},{"constant":false,"functionSelector":"15baa8c0","id":200,"mutability":"mutable","name":"consumerList","nameLocation":"1975:12:0","nodeType":"VariableDeclaration","scope":330,"src":"1958:29:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":198,"name":"address","nodeType":"ElementaryTypeName","src":"1958:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":199,"nodeType":"ArrayTypeName","src":"1958:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"anonymous":false,"eventSelector":"2d3734a8e47ac8316e500ac231c90a6e1848ca2285f40d07eaa52005e4b3a0e9","id":204,"name":"Registered","nameLocation":"2000:10:0","nodeType":"EventDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"indexed":true,"mutability":"mutable","name":"consumer","nameLocation":"2027:8:0","nodeType":"VariableDeclaration","scope":204,"src":"2011:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"2011:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2010:26:0"},"src":"1994:43:0"},{"anonymous":false,"eventSelector":"621f4b2580428affb3127c56e7fc436870163f961b82cc2b6d5471522b4a8ac3","id":211,"name":"ConsumerProfileUpdated","nameLocation":"2048:22:0","nodeType":"EventDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"indexed":true,"mutability":"mutable","name":"consumer","nameLocation":"2087:8:0","nodeType":"VariableDeclaration","scope":211,"src":"2071:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"2071:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":209,"indexed":false,"mutability":"mutable","name":"profile","nameLocation":"2113:7:0","nodeType":"VariableDeclaration","scope":211,"src":"2097:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerProfile_$192_memory_ptr","typeString":"struct ConsumerRegistry.ConsumerProfile"},"typeName":{"id":208,"nodeType":"UserDefinedTypeName","pathNode":{"id":207,"name":"ConsumerProfile","nameLocations":["2097:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":192,"src":"2097:15:0"},"referencedDeclaration":192,"src":"2097:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerProfile_$192_storage_ptr","typeString":"struct ConsumerRegistry.ConsumerProfile"}},"visibility":"internal"}],"src":"2070:51:0"},"src":"2042:80:0"},{"body":{"id":267,"nodeType":"Block","src":"2207:351:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":219,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"2225:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ConsumerProfile_$192_storage_$","typeString":"mapping(address => struct ConsumerRegistry.ConsumerProfile storage ref)"}},"id":222,"indexExpression":{"expression":{"id":220,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2235:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2239:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2235:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2225:21:0","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerProfile_$192_storage","typeString":"struct ConsumerRegistry.ConsumerProfile storage ref"}},"id":223,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2247:8:0","memberName":"consumer","nodeType":"MemberAccess","referencedDeclaration":187,"src":"2225:30:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2267:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2259:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":224,"name":"address","nodeType":"ElementaryTypeName","src":"2259:7:0","typeDescriptions":{}}},"id":227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2259:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2225:44:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c72656164792072656769737465726564","id":229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2271:20:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2","typeString":"literal_string \"Already registered\""},"value":"Already registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2","typeString":"literal_string \"Already registered\""}],"id":218,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2217:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2217:75:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":231,"nodeType":"ExpressionStatement","src":"2217:75:0"},{"assignments":[234],"declarations":[{"constant":false,"id":234,"mutability":"mutable","name":"profile","nameLocation":"2325:7:0","nodeType":"VariableDeclaration","scope":267,"src":"2302:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerProfile_$192_memory_ptr","typeString":"struct ConsumerRegistry.ConsumerProfile"},"typeName":{"id":233,"nodeType":"UserDefinedTypeName","pathNode":{"id":232,"name":"ConsumerProfile","nameLocations":["2302:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":192,"src":"2302:15:0"},"referencedDeclaration":192,"src":"2302:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerProfile_$192_storage_ptr","typeString":"struct ConsumerRegistry.ConsumerProfile"}},"visibility":"internal"}],"id":241,"initialValue":{"arguments":[{"expression":{"id":236,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2351:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2355:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2351:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":238,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"2363:4:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":239,"name":"avatar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"2369:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":235,"name":"ConsumerProfile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"2335:15:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ConsumerProfile_$192_storage_ptr_$","typeString":"type(struct ConsumerRegistry.ConsumerProfile storage pointer)"}},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerProfile_$192_memory_ptr","typeString":"struct ConsumerRegistry.ConsumerProfile memory"}},"nodeType":"VariableDeclarationStatement","src":"2302:74:0"},{"expression":{"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":242,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"2386:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ConsumerProfile_$192_storage_$","typeString":"mapping(address => struct ConsumerRegistry.ConsumerProfile storage ref)"}},"id":245,"indexExpression":{"expression":{"id":243,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2396:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2400:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2396:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2386:21:0","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerProfile_$192_storage","typeString":"struct ConsumerRegistry.ConsumerProfile storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":246,"name":"profile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"2410:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerProfile_$192_memory_ptr","typeString":"struct ConsumerRegistry.ConsumerProfile memory"}},"src":"2386:31:0","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerProfile_$192_storage","typeString":"struct ConsumerRegistry.ConsumerProfile storage ref"}},"id":248,"nodeType":"ExpressionStatement","src":"2386:31:0"},{"expression":{"arguments":[{"expression":{"id":252,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2445:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2449:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2445:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":249,"name":"consumerList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"2427:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2440:4:0","memberName":"push","nodeType":"MemberAccess","src":"2427:17:0","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2427:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":255,"nodeType":"ExpressionStatement","src":"2427:29:0"},{"eventCall":{"arguments":[{"expression":{"id":257,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2482:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2486:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2482:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":256,"name":"Registered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"2471:10:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2471:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":260,"nodeType":"EmitStatement","src":"2466:27:0"},{"eventCall":{"arguments":[{"expression":{"id":262,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2531:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2535:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2531:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":264,"name":"profile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"2543:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerProfile_$192_memory_ptr","typeString":"struct ConsumerRegistry.ConsumerProfile memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_ConsumerProfile_$192_memory_ptr","typeString":"struct ConsumerRegistry.ConsumerProfile memory"}],"id":261,"name":"ConsumerProfileUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"2508:22:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_struct$_ConsumerProfile_$192_memory_ptr_$returns$__$","typeString":"function (address,struct ConsumerRegistry.ConsumerProfile memory)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2508:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":266,"nodeType":"EmitStatement","src":"2503:48:0"}]},"functionSelector":"4d70a913","id":268,"implemented":true,"kind":"function","modifiers":[],"name":"registerAsConsumer","nameLocation":"2137:18:0","nodeType":"FunctionDefinition","parameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"name","nameLocation":"2170:4:0","nodeType":"VariableDeclaration","scope":268,"src":"2156:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":212,"name":"string","nodeType":"ElementaryTypeName","src":"2156:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":215,"mutability":"mutable","name":"avatar","nameLocation":"2190:6:0","nodeType":"VariableDeclaration","scope":268,"src":"2176:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":214,"name":"string","nodeType":"ElementaryTypeName","src":"2176:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2155:42:0"},"returnParameters":{"id":217,"nodeType":"ParameterList","parameters":[],"src":"2207:0:0"},"scope":330,"src":"2128:430:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":315,"nodeType":"Block","src":"2646:273:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":276,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"2664:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ConsumerProfile_$192_storage_$","typeString":"mapping(address => struct ConsumerRegistry.ConsumerProfile storage ref)"}},"id":279,"indexExpression":{"expression":{"id":277,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2674:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2678:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2674:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2664:21:0","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerProfile_$192_storage","typeString":"struct ConsumerRegistry.ConsumerProfile storage ref"}},"id":280,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2686:8:0","memberName":"consumer","nodeType":"MemberAccess","referencedDeclaration":187,"src":"2664:30:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2706:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2698:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"2698:7:0","typeDescriptions":{}}},"id":284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2698:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2664:44:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74206120636f6e73756d6572","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2710:16:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4eee134baf4a0718e6bda28144a46c9e630b1221f7760c87ae81ec9427ad3e53","typeString":"literal_string \"Not a consumer\""},"value":"Not a consumer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4eee134baf4a0718e6bda28144a46c9e630b1221f7760c87ae81ec9427ad3e53","typeString":"literal_string \"Not a consumer\""}],"id":275,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2656:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2656:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":288,"nodeType":"ExpressionStatement","src":"2656:71:0"},{"assignments":[291],"declarations":[{"constant":false,"id":291,"mutability":"mutable","name":"profile","nameLocation":"2761:7:0","nodeType":"VariableDeclaration","scope":315,"src":"2737:31:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerProfile_$192_storage_ptr","typeString":"struct ConsumerRegistry.ConsumerProfile"},"typeName":{"id":290,"nodeType":"UserDefinedTypeName","pathNode":{"id":289,"name":"ConsumerProfile","nameLocations":["2737:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":192,"src":"2737:15:0"},"referencedDeclaration":192,"src":"2737:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerProfile_$192_storage_ptr","typeString":"struct ConsumerRegistry.ConsumerProfile"}},"visibility":"internal"}],"id":296,"initialValue":{"baseExpression":{"id":292,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"2771:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ConsumerProfile_$192_storage_$","typeString":"mapping(address => struct ConsumerRegistry.ConsumerProfile storage ref)"}},"id":295,"indexExpression":{"expression":{"id":293,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2781:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2785:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2781:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2771:21:0","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerProfile_$192_storage","typeString":"struct ConsumerRegistry.ConsumerProfile storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2737:55:0"},{"expression":{"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":297,"name":"profile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"2802:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerProfile_$192_storage_ptr","typeString":"struct ConsumerRegistry.ConsumerProfile storage pointer"}},"id":299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2810:4:0","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":189,"src":"2802:12:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":300,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"2817:4:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2802:19:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":302,"nodeType":"ExpressionStatement","src":"2802:19:0"},{"expression":{"id":307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":303,"name":"profile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"2831:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerProfile_$192_storage_ptr","typeString":"struct ConsumerRegistry.ConsumerProfile storage pointer"}},"id":305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2839:6:0","memberName":"avatar","nodeType":"MemberAccess","referencedDeclaration":191,"src":"2831:14:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":306,"name":"avatar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"2848:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2831:23:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":308,"nodeType":"ExpressionStatement","src":"2831:23:0"},{"eventCall":{"arguments":[{"expression":{"id":310,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2892:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2896:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2892:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":312,"name":"profile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"2904:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerProfile_$192_storage_ptr","typeString":"struct ConsumerRegistry.ConsumerProfile storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_ConsumerProfile_$192_storage_ptr","typeString":"struct ConsumerRegistry.ConsumerProfile storage pointer"}],"id":309,"name":"ConsumerProfileUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"2869:22:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_struct$_ConsumerProfile_$192_memory_ptr_$returns$__$","typeString":"function (address,struct ConsumerRegistry.ConsumerProfile memory)"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2869:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":314,"nodeType":"EmitStatement","src":"2864:48:0"}]},"functionSelector":"a8d4ea14","id":316,"implemented":true,"kind":"function","modifiers":[],"name":"updateConsumerProfile","nameLocation":"2573:21:0","nodeType":"FunctionDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"name","nameLocation":"2609:4:0","nodeType":"VariableDeclaration","scope":316,"src":"2595:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":269,"name":"string","nodeType":"ElementaryTypeName","src":"2595:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"avatar","nameLocation":"2629:6:0","nodeType":"VariableDeclaration","scope":316,"src":"2615:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":271,"name":"string","nodeType":"ElementaryTypeName","src":"2615:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2594:42:0"},"returnParameters":{"id":274,"nodeType":"ParameterList","parameters":[],"src":"2646:0:0"},"scope":330,"src":"2564:355:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":328,"nodeType":"Block","src":"3018:43:0","statements":[{"expression":{"baseExpression":{"id":324,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"3035:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ConsumerProfile_$192_storage_$","typeString":"mapping(address => struct ConsumerRegistry.ConsumerProfile storage ref)"}},"id":326,"indexExpression":{"id":325,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"3045:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3035:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerProfile_$192_storage","typeString":"struct ConsumerRegistry.ConsumerProfile storage ref"}},"functionReturnParameters":323,"id":327,"nodeType":"Return","src":"3028:26:0"}]},"functionSelector":"13214d1e","id":329,"implemented":true,"kind":"function","modifiers":[],"name":"getConsumerProfile","nameLocation":"2934:18:0","nodeType":"FunctionDefinition","parameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"consumer","nameLocation":"2961:8:0","nodeType":"VariableDeclaration","scope":329,"src":"2953:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":317,"name":"address","nodeType":"ElementaryTypeName","src":"2953:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2952:18:0"},"returnParameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":329,"src":"2994:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerProfile_$192_memory_ptr","typeString":"struct ConsumerRegistry.ConsumerProfile"},"typeName":{"id":321,"nodeType":"UserDefinedTypeName","pathNode":{"id":320,"name":"ConsumerProfile","nameLocations":["2994:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":192,"src":"2994:15:0"},"referencedDeclaration":192,"src":"2994:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerProfile_$192_storage_ptr","typeString":"struct ConsumerRegistry.ConsumerProfile"}},"visibility":"internal"}],"src":"2993:24:0"},"scope":330,"src":"2925:136:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":331,"src":"1762:1301:0","usedErrors":[],"usedEvents":[204,211]}],"src":"32:3032:0"}}},"contracts":{"contracts/UserRegistry.sol":{"AgentRegistryOLD":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"agent","type":"address"},{"components":[{"internalType":"address","name":"agent","type":"address"},{"internalType":"string","name":"platform","type":"string"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"location","type":"string"},{"internalType":"string","name":"avatar","type":"string"},{"internalType":"string","name":"description","type":"string"}],"indexed":false,"internalType":"struct AgentRegistryOLD.AgentProfile","name":"profile","type":"tuple"}],"name":"AgentProfileUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"agent","type":"address"}],"name":"Registered","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"agentList","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"agents","outputs":[{"internalType":"address","name":"agent","type":"address"},{"internalType":"string","name":"platform","type":"string"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"location","type":"string"},{"internalType":"string","name":"avatar","type":"string"},{"internalType":"string","name":"description","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"agent","type":"address"}],"name":"getAgentProfile","outputs":[{"components":[{"internalType":"address","name":"agent","type":"address"},{"internalType":"string","name":"platform","type":"string"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"location","type":"string"},{"internalType":"string","name":"avatar","type":"string"},{"internalType":"string","name":"description","type":"string"}],"internalType":"struct AgentRegistryOLD.AgentProfile","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"platform","type":"string"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"location","type":"string"},{"internalType":"string","name":"avatar","type":"string"},{"internalType":"string","name":"description","type":"string"}],"name":"registerAsAgent","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"platform","type":"string"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"location","type":"string"},{"internalType":"string","name":"avatar","type":"string"},{"internalType":"string","name":"description","type":"string"}],"name":"updateAgentProfile","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"llvm_arguments":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Default","level_middle_end_size":"Z"},"revive_pallet_version":null,"revive_version":"0.2.0+commit.e94432e.llvm-18.1.8","solc_metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"platform\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"avatar\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct AgentRegistryOLD.AgentProfile\",\"name\":\"profile\",\"type\":\"tuple\"}],\"name\":\"AgentProfileUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"agentList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"agents\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"platform\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"avatar\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"getAgentProfile\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"platform\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"avatar\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct AgentRegistryOLD.AgentProfile\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"platform\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"avatar\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"registerAsAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"platform\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"avatar\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"updateAgentProfile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UserRegistry.sol\":\"AgentRegistryOLD\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UserRegistry.sol\":{\"keccak256\":\"0x2aaeb51a6d4f79e731270383d84b4f1ac61fc6e3b036f031f07c72427b02fd2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://788780623977005cca216a42c04f141a4c250e2bc3c6c23e6056468e4e333542\",\"dweb:/ipfs/Qmekx19CqVHu49Y1ktPuts2S6aLvAVooKo58UijjZ7w7Mx\"]}},\"version\":1}","solc_version":"0.8.28+commit.7893614a.Emscripten.clang"},"evm":{"assembly":"// RO data = 0/0 bytes\n// RW data = 88/65680 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 11414\n// Code size = 40054 bytes\n\n      : @0 (gas: 1)\n     0: jump @14 if a0 == a1\n      : @1 (gas: 9)\n     3: a3 = a1 << 0x20\n     6: a3 = a3 >> 0x20\n     9: a4 = a0 << 0x20\n    12: a4 = a4 >> 0x20\n    15: a4 = a4 + a2\n    18: a3 = a3 - a4\n    21: a4 = a2 << 0x1\n    24: a4 = -a4\n    26: jump @7 if a4 >=u a3\n      : @2 (gas: 1)\n    29: jump @11 if a0 >=u a1\n      : @3 (gas: 1)\n    32: jump @14 if a2 == 0\n      : @4 (gas: 3)\n    35: a2 = a2 + a0\n    38: a3 = a0\n    40: fallthrough\n      : @5 (gas: 6)\n    41: a4 = u8 [a1]\n    43: a1 = a1 + 0x1\n    46: a5 = a3 + 0x1\n    49: u8 [a3] = a4\n    51: a3 = a5\n    53: jump @5 if a5 != a2\n      : @6 (gas: 1)\n    56: jump @14\n      : @7 (gas: 1)\n    58: jump @14 if a2 == 0\n      : @8 (gas: 3)\n    61: a2 = a2 + a0\n    64: a3 = a0\n    66: fallthrough\n      : @9 (gas: 6)\n    67: a4 = u8 [a1]\n    69: a1 = a1 + 0x1\n    72: a5 = a3 + 0x1\n    75: u8 [a3] = a4\n    77: a3 = a5\n    79: jump @9 if a5 != a2\n      : @10 (gas: 1)\n    82: jump @14\n      : @11 (gas: 1)\n    84: jump @14 if a2 == 0\n      : @12 (gas: 2)\n    87: i32 a3 = a2 + 0xffffffffffffffff\n    90: fallthrough\n      : @13 (gas: 7)\n    91: a4 = a1 + a3\n    94: a4 = u8 [a4]\n    96: a2 = a2 + 0xffffffffffffffff\n    99: a5 = a0 + a3\n   102: u8 [a5] = a4\n   104: i32 a3 = a3 + 0xffffffffffffffff\n   107: jump @13 if a2 != 0\n      : @14 (gas: 1)\n   110: ret\n      : @15 (gas: 2)\n   112: a1 = i32 [0x20060]\n   117: jump @43 if a1 == 0\n      : @16 (gas: 4)\n   121: a0 = 0x30090\n   126: i32 a0 = a0 + 0\n   128: ecalli 8 // 'set_immutable_data'\n   130: jump @43\n      : @17 (gas: 8)\n   133: sp = sp + 0xfffffffffffffff0\n   136: u64 [sp + 0x8] = ra\n   139: u64 [sp] = s0\n   141: a2 = a1\n   143: s0 = a0\n   145: a1 = 0x20\n   148: a0 = a2\n   150: ra = 2, jump @26\n      : @18 [@dyn 1] (gas: 100)\n   155: a1 = u8 [a0 + 0x1]\n   158: a2 = u8 [a0]\n   160: a3 = u8 [a0 + 0x2]\n   163: a4 = u8 [a0 + 0x3]\n   166: a1 = a1 << 0x8\n   169: a1 = a1 | a2\n   172: a3 = a3 << 0x10\n   175: a4 = a4 << 0x18\n   178: a3 = a3 | a4\n   181: a1 = a1 | a3\n   184: a2 = u8 [a0 + 0x5]\n   187: a3 = u8 [a0 + 0x4]\n   190: a4 = u8 [a0 + 0x6]\n   193: a5 = u8 [a0 + 0x7]\n   196: a2 = a2 << 0x8\n   199: a2 = a2 | a3\n   202: a4 = a4 << 0x10\n   205: a5 = a5 << 0x18\n   208: a4 = a4 | a5\n   211: a2 = a2 | a4\n   214: a2 = a2 << 0x20\n   217: t0 = a2 | a1\n   220: a2 = u8 [a0 + 0x9]\n   223: a3 = u8 [a0 + 0x8]\n   226: a4 = u8 [a0 + 0xa]\n   229: a5 = u8 [a0 + 0xb]\n   232: a2 = a2 << 0x8\n   235: a2 = a2 | a3\n   238: a4 = a4 << 0x10\n   241: a5 = a5 << 0x18\n   244: a4 = a4 | a5\n   247: a2 = a2 | a4\n   250: a3 = u8 [a0 + 0xd]\n   253: a4 = u8 [a0 + 0xc]\n   256: a5 = u8 [a0 + 0xe]\n   259: a1 = u8 [a0 + 0xf]\n   262: a3 = a3 << 0x8\n   265: a3 = a3 | a4\n   268: a5 = a5 << 0x10\n   271: a1 = a1 << 0x18\n   274: a1 = a1 | a5\n   277: a1 = a1 | a3\n   280: a1 = a1 << 0x20\n   283: t1 = a1 | a2\n   286: a1 = u8 [a0 + 0x11]\n   289: a3 = u8 [a0 + 0x10]\n   292: a4 = u8 [a0 + 0x12]\n   295: a5 = u8 [a0 + 0x13]\n   298: a1 = a1 << 0x8\n   301: a1 = a1 | a3\n   304: a4 = a4 << 0x10\n   307: a5 = a5 << 0x18\n   310: a4 = a4 | a5\n   313: a1 = a1 | a4\n   316: a3 = u8 [a0 + 0x15]\n   319: a4 = u8 [a0 + 0x14]\n   322: a5 = u8 [a0 + 0x16]\n   325: a2 = u8 [a0 + 0x17]\n   328: a3 = a3 << 0x8\n   331: a3 = a3 | a4\n   334: a5 = a5 << 0x10\n   337: a2 = a2 << 0x18\n   340: a2 = a2 | a5\n   343: a2 = a2 | a3\n   346: a2 = a2 << 0x20\n   349: a3 = a2 | a1\n   352: a1 = u8 [a0 + 0x19]\n   355: a2 = u8 [a0 + 0x18]\n   358: a4 = u8 [a0 + 0x1a]\n   361: a5 = u8 [a0 + 0x1b]\n   364: a1 = a1 << 0x8\n   367: a1 = a1 | a2\n   370: a4 = a4 << 0x10\n   373: a5 = a5 << 0x18\n   376: a4 = a4 | a5\n   379: a1 = a1 | a4\n   382: a2 = u8 [a0 + 0x1d]\n   385: a4 = u8 [a0 + 0x1c]\n   388: a5 = u8 [a0 + 0x1e]\n   391: a0 = u8 [a0 + 0x1f]\n   394: a2 = a2 << 0x8\n   397: a2 = a2 | a4\n   400: a5 = a5 << 0x10\n   403: a0 = a0 << 0x18\n   406: a0 = a0 | a5\n   409: a0 = a0 | a2\n   412: a0 = a0 << 0x20\n   415: a0 = a0 | a1\n   418: a0 = reverse a0\n   420: a1 = reverse a3\n   422: a2 = reverse t1\n   424: a3 = reverse t0\n   426: u64 [s0 + 0x18] = a3\n   429: u64 [s0 + 0x10] = a2\n   432: u64 [s0 + 0x8] = a1\n   435: u64 [s0] = a0\n   437: ra = u64 [sp + 0x8]\n   440: s0 = u64 [sp]\n   442: sp = sp + 0x10\n   445: ret\n      : @19 (gas: 12)\n   447: sp = sp + 0xffffffffffffffd8\n   450: u64 [sp + 0x20] = ra\n   453: u64 [sp + 0x18] = s0\n   456: u64 [sp + 0x10] = s1\n   459: a2 = u64 [a1]\n   461: u64 [sp + 0x8] = a2\n   464: a2 = u64 [a1 + 0x8]\n   467: u64 [sp] = a2\n   469: s0 = u64 [a1 + 0x10]\n   472: s1 = u64 [a1 + 0x18]\n   475: a1 = 0x20\n   478: ra = 4, jump @26\n      : @20 [@dyn 2] (gas: 71)\n   483: a1 = reverse s1\n   485: a2 = reverse s0\n   487: a3 = u64 [sp]\n   489: a3 = reverse a3\n   491: a4 = u64 [sp + 0x8]\n   494: a4 = reverse a4\n   496: u8 [a0 + 0x18] = a4\n   499: u8 [a0 + 0x10] = a3\n   502: u8 [a0 + 0x8] = a2\n   505: u8 [a0] = a1\n   507: a5 = a4 >> 0x38\n   510: u8 [a0 + 0x1f] = a5\n   513: a5 = a4 >> 0x30\n   516: u8 [a0 + 0x1e] = a5\n   519: a5 = a4 >> 0x28\n   522: u8 [a0 + 0x1d] = a5\n   525: a5 = a4 >> 0x20\n   528: u8 [a0 + 0x1c] = a5\n   531: a5 = a4 >> 0x18\n   534: u8 [a0 + 0x1b] = a5\n   537: a5 = a4 >> 0x10\n   540: u8 [a0 + 0x1a] = a5\n   543: a4 = a4 >> 0x8\n   546: u8 [a0 + 0x19] = a4\n   549: a4 = a3 >> 0x38\n   552: u8 [a0 + 0x17] = a4\n   555: a4 = a3 >> 0x30\n   558: u8 [a0 + 0x16] = a4\n   561: a4 = a3 >> 0x28\n   564: u8 [a0 + 0x15] = a4\n   567: a4 = a3 >> 0x20\n   570: u8 [a0 + 0x14] = a4\n   573: a4 = a3 >> 0x18\n   576: u8 [a0 + 0x13] = a4\n   579: a4 = a3 >> 0x10\n   582: u8 [a0 + 0x12] = a4\n   585: a3 = a3 >> 0x8\n   588: u8 [a0 + 0x11] = a3\n   591: a3 = a2 >> 0x38\n   594: u8 [a0 + 0xf] = a3\n   597: a3 = a2 >> 0x30\n   600: u8 [a0 + 0xe] = a3\n   603: a3 = a2 >> 0x28\n   606: u8 [a0 + 0xd] = a3\n   609: a3 = a2 >> 0x20\n   612: u8 [a0 + 0xc] = a3\n   615: a3 = a2 >> 0x18\n   618: u8 [a0 + 0xb] = a3\n   621: a3 = a2 >> 0x10\n   624: u8 [a0 + 0xa] = a3\n   627: a2 = a2 >> 0x8\n   630: u8 [a0 + 0x9] = a2\n   633: a2 = a1 >> 0x38\n   636: u8 [a0 + 0x7] = a2\n   639: a2 = a1 >> 0x30\n   642: u8 [a0 + 0x6] = a2\n   645: a2 = a1 >> 0x28\n   648: u8 [a0 + 0x5] = a2\n   651: a2 = a1 >> 0x20\n   654: u8 [a0 + 0x4] = a2\n   657: a2 = a1 >> 0x18\n   660: u8 [a0 + 0x3] = a2\n   663: a2 = a1 >> 0x10\n   666: u8 [a0 + 0x2] = a2\n   669: a1 = a1 >> 0x8\n   672: u8 [a0 + 0x1] = a1\n   675: ra = u64 [sp + 0x20]\n   678: s0 = u64 [sp + 0x18]\n   681: s1 = u64 [sp + 0x10]\n   684: sp = sp + 0x28\n   687: ret\n      : @21 (gas: 43)\n   689: sp = sp + 0xffffffffffffffa0\n   692: u64 [sp + 0x58] = ra\n   695: u64 [sp + 0x50] = s0\n   698: u64 [sp + 0x48] = s1\n   701: s0 = sp + 0x60\n   704: sp = sp & 0xffffffffffffffe0\n   707: s1 = a0\n   709: a0 = u64 [a1 + 0x18]\n   712: a2 = u64 [a1 + 0x10]\n   715: a3 = u64 [a1 + 0x8]\n   718: a1 = u64 [a1]\n   720: a0 = reverse a0\n   722: a2 = reverse a2\n   724: a3 = reverse a3\n   726: a1 = reverse a1\n   728: u64 [sp + 0x18] = a1\n   731: u64 [sp + 0x10] = a3\n   734: u64 [sp + 0x8] = a2\n   737: u64 [sp] = a0\n   739: u64 [sp + 56] = 0\n   742: u64 [sp + 48] = 0\n   745: u64 [sp + 40] = 0\n   748: u64 [sp + 32] = 0\n   751: u32 [sp + 64] = 0x20\n   755: i32 a1 = sp + 0\n   757: i32 a3 = sp + 0x20\n   760: i32 a4 = sp + 0x40\n   763: a2 = 0xffffffffffffffff\n   766: a0 = 0\n   768: ecalli 5 // 'get_storage'\n   770: a0 = u64 [sp + 0x38]\n   773: a1 = u64 [sp + 0x30]\n   776: a2 = u64 [sp + 0x28]\n   779: a3 = u64 [sp + 0x20]\n   782: a0 = reverse a0\n   784: a1 = reverse a1\n   786: a2 = reverse a2\n   788: a3 = reverse a3\n   790: u64 [s1 + 0x18] = a3\n   793: u64 [s1 + 0x10] = a2\n   796: u64 [s1 + 0x8] = a1\n   799: u64 [s1] = a0\n   801: t0 = 6, jump @1210\n      : @22 [@dyn 3] (gas: 1)\n   807: ret\n      : @23 (gas: 40)\n   809: sp = sp + 0xffffffffffffffa0\n   812: u64 [sp + 0x58] = ra\n   815: u64 [sp + 0x50] = s0\n   818: s0 = sp + 0x60\n   821: sp = sp & 0xffffffffffffffe0\n   824: t0 = u64 [a0]\n   826: a3 = u64 [a0 + 0x8]\n   829: a4 = u64 [a0 + 0x10]\n   832: a0 = u64 [a0 + 0x18]\n   835: t1 = u64 [a1]\n   837: a2 = u64 [a1 + 0x8]\n   840: a5 = u64 [a1 + 0x10]\n   843: a1 = u64 [a1 + 0x18]\n   846: t2 = reverse a0\n   848: a4 = reverse a4\n   850: a3 = reverse a3\n   852: a0 = reverse t0\n   854: t0 = reverse a1\n   856: a5 = reverse a5\n   858: a2 = reverse a2\n   860: a1 = reverse t1\n   862: u64 [sp + 0x18] = a0\n   865: u64 [sp + 0x10] = a3\n   868: u64 [sp + 0x8] = a4\n   871: u64 [sp] = t2\n   873: u64 [sp + 0x38] = a1\n   876: u64 [sp + 0x30] = a2\n   879: u64 [sp + 0x28] = a5\n   882: u64 [sp + 0x20] = t0\n   885: i32 a1 = sp + 0\n   887: i32 a3 = sp + 0x20\n   890: a2 = 0xffffffffffffffff\n   893: a4 = 0x20\n   896: a0 = 0\n   898: ecalli 9 // 'set_storage'\n   900: sp = s0 + 0xffffffffffffffa0\n   903: ra = u64 [sp + 0x58]\n   906: s0 = u64 [sp + 0x50]\n   909: sp = sp + 0x60\n   912: ret\n      : @24 (gas: 24)\n   914: sp = sp + 0xffffffffffffff60\n   918: u64 [sp + 0x98] = ra\n   922: u64 [sp + 0x90] = s0\n   926: u64 [sp + 0x88] = s1\n   930: s0 = sp + 0xa0\n   934: sp = sp & 0xffffffffffffffe0\n   937: a4 = u64 [a3]\n   939: u64 [sp + 0x38] = a4\n   942: a4 = u64 [a3 + 0x8]\n   945: u64 [sp + 0x30] = a4\n   948: a4 = u64 [a3 + 0x10]\n   951: u64 [sp + 0x28] = a4\n   954: a3 = u64 [a3 + 0x18]\n   957: u64 [sp + 0x20] = a3\n   960: a3 = u64 [a2]\n   962: u64 [sp + 0x18] = a3\n   965: a3 = u64 [a2 + 0x8]\n   968: u64 [sp + 0x10] = a3\n   971: a3 = u64 [a2 + 0x10]\n   974: u64 [sp + 0x8] = a3\n   977: a2 = u64 [a2 + 0x18]\n   980: u64 [sp] = a2\n   982: s1 = a1\n   984: ra = 8, jump @26\n      : @25 [@dyn 4] (gas: 35)\n   988: a1 = u64 [sp]\n   990: a1 = reverse a1\n   992: a2 = u64 [sp + 0x8]\n   995: a2 = reverse a2\n   997: a3 = u64 [sp + 0x10]\n  1000: a3 = reverse a3\n  1002: a4 = u64 [sp + 0x18]\n  1005: a4 = reverse a4\n  1007: u64 [sp + 0x58] = a4\n  1010: u64 [sp + 0x50] = a3\n  1013: u64 [sp + 0x48] = a2\n  1016: u64 [sp + 0x40] = a1\n  1019: a1 = u64 [sp + 0x20]\n  1022: a1 = reverse a1\n  1024: a2 = u64 [sp + 0x28]\n  1027: a2 = reverse a2\n  1029: a3 = u64 [sp + 0x30]\n  1032: a3 = reverse a3\n  1034: a4 = u64 [sp + 0x38]\n  1037: a4 = reverse a4\n  1039: u64 [sp + 0x78] = a4\n  1042: u64 [sp + 0x70] = a3\n  1045: u64 [sp + 0x68] = a2\n  1048: u64 [sp + 0x60] = a1\n  1051: i32 a2 = a0 + 0\n  1053: i32 a3 = s1 + 0\n  1055: i32 a0 = sp + 0x40\n  1058: a1 = 0x2\n  1061: ecalli 4 // 'deposit_event'\n  1063: sp = s0 + 0xffffffffffffff60\n  1067: ra = u64 [sp + 0x98]\n  1071: s0 = u64 [sp + 0x90]\n  1075: s1 = u64 [sp + 0x88]\n  1079: sp = sp + 0xa0\n  1083: ret\n      : @26 (gas: 2)\n  1085: i32 a2 = a0 >> 0x10\n  1088: jump @31 if a2 != 0\n      : @27 (gas: 4)\n  1091: a1 = a1 + a0\n  1094: i32 a1 = a1 + 0x1f\n  1097: a1 = a1 & 0xffffffffffffffe0\n  1100: jump @31 if a1 >u 65536\n      : @28 (gas: 3)\n  1106: a2 = 0x2005c\n  1111: a3 = i32 [0x2005c]\n  1116: jump @30 if a3 >=u a1\n      : @29 (gas: 2)\n  1119: u32 [0x2005c] = a1\n  1124: fallthrough\n      : @30 (gas: 4)\n  1125: a1 = 0x20070\n  1130: i32 a0 = a0 + 0\n  1132: a0 = a0 + a1\n  1135: ret\n      : @31 (gas: 1)\n  1137: trap\n      : @32 (gas: 6)\n  1138: sp = sp + 0xfffffffffffffff0\n  1141: u64 [sp + 0x8] = ra\n  1144: u64 [sp] = s0\n  1146: s0 = a0 & 0x1\n  1149: ecalli 2 // 'call_data_size'\n  1151: fallthrough\n      : @33 (gas: 2)\n  1152: u32 [0x20058] = a0\n  1157: jump @35 if s0 == 0\n      : @34 (gas: 1)\n  1160: ra = 10, jump @36\n      : @35 [@dyn 5] (gas: 1)\n  1164: ra = 12, jump @45\n      : @36 [@dyn 6] (gas: 12)\n  1169: sp = sp + 0xffffffffffffffa0\n  1172: u64 [sp + 0x58] = ra\n  1175: u64 [sp + 0x50] = s0\n  1178: s0 = sp + 0x60\n  1181: sp = sp & 0xffffffffffffffe0\n  1184: u64 [sp + 24] = 0\n  1187: u64 [sp + 16] = 0\n  1190: u64 [sp + 0] = 0x80\n  1194: a0 = 0x40\n  1197: a1 = sp\n  1199: u64 [sp + 8] = 0\n  1202: ra = 14, jump @19\n      : @37 [@dyn 7] (gas: 7)\n  1207: u64 [sp + 56] = 0\n  1210: u64 [sp + 48] = 0\n  1213: u64 [sp + 40] = 0\n  1216: u64 [sp + 32] = 0\n  1219: i32 a0 = sp + 0x20\n  1222: ecalli 10 // 'value_transferred'\n  1224: fallthrough\n      : @38 (gas: 8)\n  1225: a0 = u64 [sp + 0x30]\n  1228: a1 = u64 [sp + 0x38]\n  1231: a2 = u64 [sp + 0x28]\n  1234: a3 = u64 [sp + 0x20]\n  1237: a1 = a1 | a2\n  1240: a0 = a0 | a3\n  1243: a0 = a0 | a1\n  1246: jump @40 if a0 == 0\n      : @39 (gas: 7)\n  1249: a1 = 0x20070\n  1254: i32 a1 = a1 + 0\n  1256: a0 = 0x1\n  1259: a2 = 0\n  1261: ra = 0x12\n  1264: ecalli 7 // 'seal_return'\n  1266: jump @45\n      : @40 (gas: 2)\n  1268: a1 = i32 [0x2005c]\n  1273: jump @42 if a1 >u 127\n      : @41 (gas: 2)\n  1277: u32 [0x2005c] = 0x80\n  1284: fallthrough\n      : @42 (gas: 6)\n  1285: a0 = 0x20070\n  1290: i32 a0 = a0 + 0x80\n  1294: a1 = 0\n  1296: a2 = 0\n  1298: ecalli 0 // 'call_data_copy'\n  1299: jump @15\n      : @43 (gas: 3)\n  1302: a0 = 0x80\n  1306: a1 = 0\n  1308: ra = 16, jump @26\n      : @44 [@dyn 8] (gas: 6)\n  1313: i32 a1 = a0 + 0\n  1315: a0 = 0\n  1317: a2 = 0\n  1319: ra = 0x12\n  1322: ecalli 7 // 'seal_return'\n  1324: fallthrough\n      : @45 [@dyn 9] (gas: 16)\n  1325: sp = sp + 0xfffffffffffffe10\n  1329: u64 [sp + 0x1e8] = ra\n  1333: u64 [sp + 0x1e0] = s0\n  1337: u64 [sp + 0x1d8] = s1\n  1341: s0 = sp + 0x1f0\n  1345: sp = sp + 0xffffffffffffd5f0\n  1349: sp = sp & 0xffffffffffffffe0\n  1352: s1 = sp\n  1354: a2 = s1 + 0x2138\n  1358: u64 [a2 + 768] = 0\n  1362: u64 [a2 + 760] = 0\n  1366: u64 [a2 + 744] = 0x80\n  1372: a0 = 0x40\n  1375: a1 = s1 + 0x2420\n  1379: u64 [a2 + 752] = 0\n  1383: ra = 20, jump @19\n      : @46 [@dyn 10] (gas: 4)\n  1388: a0 = 0x20058\n  1393: u64 [s1 + 0x1b8] = a0\n  1397: a0 = i32 [0x20058]\n  1402: jump @48 if a0 >=u 4\n      : @47 (gas: 1)\n  1406: jump @930\n      : @48 (gas: 6)\n  1409: a0 = s1 + 0x2000\n  1413: i32 a0 = a0 + 0x440\n  1417: a1 = 0\n  1419: ra = 0x16\n  1422: ecalli 1 // 'call_data_load'\n  1424: fallthrough\n      : @49 [@dyn 11] (gas: 3)\n  1425: a2 = s1 + 0x2138\n  1429: a0 = i32 [a2 + 0x324]\n  1433: jump @51 if a0 != 4251322654\n      : @50 (gas: 1)\n  1440: jump @228\n      : @51 (gas: 1)\n  1443: jump @135 if a0 == 796968271\n      : @52 (gas: 1)\n  1451: jump @54 if a0 != 1684012845\n      : @53 (gas: 1)\n  1458: jump @156\n      : @54 (gas: 1)\n  1461: jump @56 if a0 == 2027721636\n      : @55 (gas: 1)\n  1468: jump @287\n      : @56 (gas: 8)\n  1471: u64 [a2 + 1856] = 0\n  1475: u64 [a2 + 1848] = 0\n  1479: u64 [a2 + 1840] = 0\n  1483: u64 [a2 + 1832] = 0\n  1487: a0 = s1 + 0x3000\n  1491: i32 a0 = a0 + 0xfffffffffffff860\n  1495: ecalli 10 // 'value_transferred'\n  1497: fallthrough\n      : @57 (gas: 10)\n  1498: a3 = s1 + 0x2138\n  1502: a4 = a3 + 0x700\n  1506: a0 = u64 [a4 + 0x38]\n  1509: a1 = u64 [a4 + 0x40]\n  1512: a2 = u64 [a4 + 0x30]\n  1515: a3 = u64 [a4 + 0x28]\n  1518: a1 = a1 | a2\n  1521: a0 = a0 | a3\n  1524: a0 = a0 | a1\n  1527: jump @59 if a0 == 0\n      : @58 (gas: 1)\n  1530: jump @933\n      : @59 (gas: 3)\n  1533: a0 = u64 [s1 + 0x1b8]\n  1537: a0 = i32 [a0]\n  1539: jump @61 if a0 >u 35\n      : @60 (gas: 1)\n  1543: jump @934\n      : @61 (gas: 5)\n  1546: a0 = s1 + 0x3000\n  1550: i32 a0 = a0 + 0xfffffffffffff880\n  1554: a1 = 0x4\n  1557: ecalli 1 // 'call_data_load'\n  1559: fallthrough\n      : @62 (gas: 12)\n  1560: a3 = s1 + 0x2138\n  1564: a2 = u64 [a3 + 0x758]\n  1568: a0 = u64 [a3 + 0x760]\n  1572: a1 = 0x100000000\n  1582: a1 = a1 ^ a2\n  1585: a1 = a1 | a0\n  1588: u64 [s1 + 0x188] = a2\n  1592: a2 = a2 >> 0x20\n  1595: a2 = a2 <u 0x1\n  1598: a2 = 0 if a0 != 0\n  1600: a2 = 0 if a1 == 0\n  1602: jump @64 if a2 != 0\n      : @63 (gas: 1)\n  1605: jump @935\n      : @64 (gas: 7)\n  1608: a0 = u64 [a3 + 0x750]\n  1612: u64 [s1 + 0x190] = a0\n  1616: a0 = u64 [a3 + 0x748]\n  1620: u64 [s1 + 0x198] = a0\n  1624: a0 = s1 + 0x13a0\n  1628: a1 = 0x40\n  1631: ra = 24, jump @17\n      : @65 [@dyn 12] (gas: 16)\n  1636: a1 = s1 + 0x1138\n  1640: a5 = a1 + 0x200\n  1644: a0 = u64 [a5 + 0x80]\n  1648: u64 [s1 + 0x1a8] = a0\n  1652: a2 = u64 [a5 + 0x78]\n  1655: u64 [s1 + 0x1a0] = a2\n  1659: a4 = u64 [a5 + 0x70]\n  1662: u64 [s1 + 0x1b0] = a4\n  1666: a3 = u64 [a5 + 0x68]\n  1669: u64 [s1 + 0x1b8] = a3\n  1673: u64 [a5 + 0x60] = a0\n  1676: u64 [a5 + 0x58] = a2\n  1679: u64 [a5 + 0x50] = a4\n  1682: a0 = s1 + 0x1380\n  1686: u64 [a5 + 0x48] = a3\n  1689: ra = 26, jump @995\n      : @66 [@dyn 13] (gas: 13)\n  1694: a3 = s1 + 0x100\n  1698: a0 = u64 [a3 + 0xa8]\n  1702: a1 = u64 [a3 + 0xb0]\n  1706: a0 = a0 | a1\n  1709: a2 = u64 [a3 + 0xa0]\n  1713: a1 = u64 [a3 + 0xb8]\n  1717: a1 = a1 | a2\n  1720: a1 = a1 | a0\n  1723: a1 = a1 >> 0x20\n  1726: a0 = a0 | a2\n  1729: a0 = a0 << 0x20\n  1732: a0 = a0 | a1\n  1735: jump @68 if a0 == 0\n      : @67 (gas: 1)\n  1738: jump @929\n      : @68 (gas: 8)\n  1741: a0 = s1 + 0x1138\n  1745: u64 [a0 + 576] = 0\n  1749: u64 [a0 + 568] = 0\n  1753: u64 [a0 + 560] = 0\n  1757: a1 = s1 + 0x1360\n  1761: u64 [a0 + 552] = 0\n  1765: a0 = u64 [s1 + 0x1b8]\n  1769: ra = 28, jump @19\n      : @69 [@dyn 14] (gas: 5)\n  1774: a4 = s1 + 0x100\n  1778: a0 = u64 [a4 + 0xa8]\n  1782: a2 = u64 [a4 + 0xa0]\n  1786: a2 = a2 | a0\n  1789: t0 = 30, jump @1208\n      : @70 [@dyn 15] (gas: 2)\n  1795: a0 = 0 if a2 != 0\n  1797: jump @72 if a0 != 0\n      : @71 (gas: 1)\n  1800: jump @929\n      : @72 (gas: 12)\n  1803: a0 = u64 [s1 + 0x1b8]\n  1807: i32 a0 = a0 + 0x20\n  1810: a1 = s1 + 0x1138\n  1814: u64 [s1 + 0x1a8] = a2\n  1818: a2 = a1\n  1820: u64 [a1 + 544] = 0\n  1824: u64 [a1 + 536] = 0\n  1828: u64 [a2 + 520] = 0x60\n  1833: a1 = s1 + 0x1340\n  1837: u64 [a2 + 528] = 0\n  1841: u64 [s1 + 0x1a0] = a3\n  1845: ra = 32, jump @19\n      : @73 [@dyn 16] (gas: 10)\n  1850: a2 = s1 + 0x100\n  1854: a0 = u64 [a2 + 0xa0]\n  1858: a0 = a0 + 0xffffffffffffffc0\n  1861: a1 = u64 [a2 + 0xb8]\n  1865: a0 = a1 <u a0\n  1868: a1 = u64 [a2 + 0xb0]\n  1872: a0 = 0 if a1 != 0\n  1874: a1 = u64 [a2 + 0xa8]\n  1878: a0 = 0 if a1 != 0\n  1880: jump @75 if a0 != 0\n      : @74 (gas: 1)\n  1883: jump @929\n      : @75 (gas: 9)\n  1886: a0 = u64 [s1 + 0x1b8]\n  1890: i32 a0 = a0 + 0x40\n  1893: a2 = s1 + 0x1138\n  1897: u64 [a2 + 512] = 0\n  1901: u64 [a2 + 504] = 0\n  1905: u64 [a2 + 496] = 0\n  1909: a1 = s1 + 0x1320\n  1913: u64 [a2 + 488] = 0\n  1917: ra = 34, jump @19\n      : @76 [@dyn 17] (gas: 10)\n  1922: a2 = 0x100000000\n  1932: a0 = 0xffffffa0\n  1942: a3 = s1 + 0x100\n  1946: a1 = u64 [a3 + 0xb8]\n  1950: a0 = a1 <u a0\n  1953: a1 = u64 [a3 + 0xb0]\n  1957: a0 = 0 if a1 != 0\n  1959: a1 = u64 [a3 + 0xa8]\n  1963: a0 = 0 if a1 != 0\n  1965: jump @78 if a0 != 0\n      : @77 (gas: 1)\n  1968: jump @929\n      : @78 (gas: 11)\n  1971: a0 = u64 [s1 + 0x1b8]\n  1975: i32 a0 = a0 + 0x60\n  1978: a1 = s1 + 0x1138\n  1982: u64 [s1 + 0x1a0] = a2\n  1986: a2 = a1\n  1988: u64 [a1 + 480] = 0\n  1992: u64 [a1 + 472] = 0\n  1996: u64 [a1 + 464] = 0\n  2000: a1 = s1 + 0x1300\n  2004: u64 [a2 + 456] = 0x60\n  2009: ra = 36, jump @19\n      : @79 [@dyn 18] (gas: 10)\n  2014: a3 = s1 + 0x100\n  2018: a2 = u64 [a3 + 0xa8]\n  2022: a0 = u64 [a3 + 0xa0]\n  2026: a0 = a0 + 0xffffffffffffff80\n  2029: a1 = u64 [a3 + 0xb8]\n  2033: a0 = a1 <u a0\n  2036: a1 = u64 [a3 + 0xb0]\n  2040: a0 = 0 if a1 != 0\n  2042: a0 = 0 if a2 != 0\n  2044: jump @81 if a0 != 0\n      : @80 (gas: 1)\n  2047: jump @929\n      : @81 (gas: 9)\n  2050: a0 = u64 [s1 + 0x1b8]\n  2054: i32 a0 = a0 + 0x80\n  2058: a2 = s1 + 0x1138\n  2062: u64 [a2 + 448] = 0\n  2066: u64 [a2 + 440] = 0\n  2070: u64 [a2 + 424] = 0x60\n  2075: a1 = s1 + 0x12e0\n  2079: u64 [a2 + 432] = 0\n  2083: ra = 38, jump @19\n      : @82 [@dyn 19] (gas: 9)\n  2088: a0 = 0xffffff60\n  2098: a2 = s1 + 0x100\n  2102: a1 = u64 [a2 + 0xb8]\n  2106: a0 = a1 <u a0\n  2109: a1 = u64 [a2 + 0xb0]\n  2113: a0 = 0 if a1 != 0\n  2115: a1 = u64 [a2 + 0xa8]\n  2119: a0 = 0 if a1 != 0\n  2121: jump @84 if a0 != 0\n      : @83 (gas: 1)\n  2124: jump @929\n      : @84 (gas: 13)\n  2127: a0 = u64 [s1 + 0x188]\n  2131: a0 = a0 << 0x20\n  2134: a0 = a0 >> 0x20\n  2137: u64 [s1 + 0x1b0] = a0\n  2141: a0 = u64 [s1 + 0x1b8]\n  2145: i32 a0 = a0 + 0xa0\n  2149: a2 = s1 + 0x1138\n  2153: u64 [a2 + 416] = 0\n  2157: u64 [a2 + 408] = 0\n  2161: u64 [a2 + 392] = 0x60\n  2166: a1 = s1 + 0x12c0\n  2170: u64 [a2 + 400] = 0\n  2174: ra = 40, jump @19\n      : @85 [@dyn 20] (gas: 12)\n  2179: a2 = s1 + 0x1138\n  2183: u64 [a2 + 384] = 0\n  2187: a0 = u64 [s1 + 0x1b0]\n  2191: a3 = a2 + 0x100\n  2195: u64 [a3 + 0x78] = a0\n  2198: a0 = u64 [s1 + 0x190]\n  2202: u64 [a3 + 0x70] = a0\n  2205: a1 = s1 + 0x12a0\n  2209: a0 = u64 [s1 + 0x198]\n  2213: u64 [a3 + 0x68] = a0\n  2216: a0 = 0\n  2218: ra = 42, jump @19\n      : @86 [@dyn 21] (gas: 9)\n  2223: a0 = s1 + 0x1138\n  2227: u64 [a0 + 352] = 0\n  2231: u64 [a0 + 344] = 0\n  2235: u64 [a0 + 336] = 0\n  2239: a2 = a0\n  2241: a0 = 0x20\n  2244: a1 = s1 + 0x1280\n  2248: u64 [a2 + 328] = 0\n  2252: ra = 44, jump @19\n      : @87 [@dyn 22] (gas: 6)\n  2257: a0 = sp + 0xffffffffffffffe0\n  2260: a0 = a0 & 0xffffffffffffffe0\n  2263: u64 [s1 + 0x1b0] = a0\n  2267: sp = a0\n  2269: a1 = i32 [0x2005c]\n  2274: jump @89 if a1 >u 63\n      : @88 (gas: 4)\n  2278: a1 = 0x40\n  2281: u32 [0x2005c] = a1\n  2286: t0 = 0x2e\n  2289: jump @1197\n      : @89 (gas: 1)\n  2293: t0 = 46, jump @1197\n      : @90 [@dyn 23] (gas: 26)\n  2299: a0 = 0x20070\n  2304: i32 a0 = a0 + 0\n  2306: i32 a2 = a2 + 0\n  2308: a1 = 0x40\n  2311: ecalli 6 // 'hash_keccak_256'\n  2313: a3 = u64 [s1 + 0x1b8]\n  2317: a0 = u64 [a3 + 0x18]\n  2320: a1 = u64 [a3 + 0x10]\n  2323: a2 = u64 [a3 + 0x8]\n  2326: a3 = u64 [a3]\n  2328: a5 = reverse a0\n  2330: a4 = reverse a1\n  2332: a0 = reverse a2\n  2334: a1 = reverse a3\n  2336: u64 [s1 + 0x188] = a1\n  2340: a2 = u64 [s1 + 0x1b0]\n  2344: u64 [a2 + 0x18] = a1\n  2347: u64 [s1 + 0x190] = a0\n  2351: u64 [a2 + 0x10] = a0\n  2354: u64 [s1 + 0x180] = a4\n  2358: u64 [a2 + 0x8] = a4\n  2361: u64 [s1 + 0x178] = a5\n  2365: u64 [a2] = a5\n  2367: a0 = s1 + 0x1260\n  2371: a1 = 0x40\n  2374: ra = 48, jump @17\n      : @91 [@dyn 24] (gas: 16)\n  2379: a1 = s1 + 0x1138\n  2383: a5 = a1 + 0x100\n  2387: a0 = u64 [a5 + 0x40]\n  2390: u64 [s1 + 0x198] = a0\n  2394: a3 = u64 [a5 + 0x38]\n  2397: u64 [s1 + 0x1a0] = a3\n  2401: a4 = u64 [a5 + 0x30]\n  2404: u64 [s1 + 0x1a8] = a4\n  2408: a2 = u64 [a5 + 0x28]\n  2411: u64 [s1 + 0x1b8] = a2\n  2415: u64 [a5 + 0x20] = a0\n  2418: u64 [a5 + 0x18] = a3\n  2421: u64 [a5 + 0x10] = a4\n  2424: a0 = s1 + 0x1240\n  2428: u64 [a5 + 0x8] = a2\n  2431: ra = 50, jump @995\n      : @92 [@dyn 25] (gas: 3)\n  2436: a0 = s1 + 0x1220\n  2440: a1 = u64 [s1 + 0x1b0]\n  2444: ra = 52, jump @21\n      : @93 [@dyn 26] (gas: 13)\n  2449: a3 = s1 + 0x100\n  2453: a2 = u64 [a3 + 0xa0]\n  2457: a0 = u64 [a3 + 0x98]\n  2461: a1 = u64 [a3 + 0xa8]\n  2465: a0 = a0 | a1\n  2468: a1 = u64 [a3 + 0xb8]\n  2472: a1 = a1 | a2\n  2475: a1 = a1 | a0\n  2478: a1 = a1 >> 0x20\n  2481: a0 = a0 | a2\n  2484: a0 = a0 << 0x20\n  2487: a0 = a0 | a1\n  2490: jump @95 if a0 == 0\n      : @94 (gas: 1)\n  2493: jump @929\n      : @95 (gas: 15)\n  2496: a5 = s1 + 0x1138\n  2500: a1 = u64 [a5 + 0xf8]\n  2504: a2 = u64 [a5 + 0xf0]\n  2508: a3 = u64 [a5 + 0xe8]\n  2512: a4 = 0xffffffff\n  2522: a4 = a4 & a1\n  2525: a2 = a2 & 0xffffffffffffffff\n  2528: a0 = a3 & 0xffffffffffffffff\n  2531: u64 [a5 + 224] = 0\n  2535: u64 [a5 + 0xc8] = a0\n  2539: u64 [a5 + 0xd0] = a2\n  2543: a1 = s1 + 0x1200\n  2547: u64 [a5 + 0xd8] = a4\n  2551: a0 = u64 [s1 + 0x1b8]\n  2555: ra = 54, jump @19\n      : @96 [@dyn 27] (gas: 3)\n  2560: a0 = s1 + 0x11e0\n  2564: a1 = 0x40\n  2567: ra = 56, jump @17\n      : @97 [@dyn 28] (gas: 33)\n  2572: a5 = s1 + 0x1138\n  2576: t1 = u64 [a5 + 0xc0]\n  2580: u64 [s1 + 0x1b0] = t1\n  2584: t2 = u64 [a5 + 0xb8]\n  2588: u64 [s1 + 0x170] = t2\n  2592: ra = u64 [a5 + 0xb0]\n  2596: u64 [s1 + 0x168] = ra\n  2600: t0 = u64 [a5 + 0xa8]\n  2604: u64 [s1 + 0x160] = t0\n  2608: a3 = u64 [s1 + 0x178]\n  2612: a3 = a3 + 0x1\n  2615: a0 = a3 <u 0x1\n  2618: a1 = u64 [s1 + 0x180]\n  2622: a0 = a0 + a1\n  2625: a1 = a3 | a0\n  2628: a1 = a1 <u 0x1\n  2631: a2 = u64 [s1 + 0x190]\n  2635: a1 = a1 + a2\n  2638: a2 = a1 <u a2\n  2641: a4 = u64 [s1 + 0x188]\n  2645: a2 = a2 + a4\n  2648: u64 [a5 + 0x60] = t1\n  2651: u64 [a5 + 0x58] = t2\n  2654: u64 [a5 + 0x50] = ra\n  2657: u64 [a5 + 0x48] = t0\n  2660: u64 [a5 + 0x80] = a2\n  2664: u64 [a5 + 0x78] = a1\n  2667: u64 [a5 + 0x70] = a0\n  2670: a0 = s1 + 0x11c0\n  2674: a1 = s1 + 0x11a0\n  2678: a2 = s1 + 0x1180\n  2682: u64 [a5 + 0x68] = a3\n  2685: ra = 58, jump @1129\n      : @98 [@dyn 29] (gas: 39)\n  2691: a1 = s1 + 0x1138\n  2695: a0 = u64 [a1 + 0x90]\n  2699: a2 = u64 [a1 + 0xa0]\n  2703: a4 = u64 [a1 + 0x88]\n  2707: u64 [s1 + 0x158] = a4\n  2711: a3 = u64 [a1 + 0x98]\n  2715: t0 = u64 [s1 + 0x168]\n  2719: ra = a0 ^ t0\n  2722: a5 = a0 <u t0\n  2725: t1 = u64 [s1 + 0x160]\n  2729: t2 = a4 <u t1\n  2732: a5 = t2 if ra == 0\n  2735: a1 = u64 [s1 + 0x170]\n  2739: a4 = a3 - a1\n  2742: a3 = a3 <u a1\n  2745: ra = a1\n  2747: a1 = u64 [s1 + 0x1b0]\n  2751: a2 = a2 - a1\n  2754: a2 = a2 - a3\n  2757: a3 = a4 <u a5\n  2760: a2 = a2 - a3\n  2763: a4 = a4 - a5\n  2766: a0 = a0 - t0\n  2769: t2 = a0 - t2\n  2772: a3 = u64 [s1 + 0x158]\n  2776: a3 = a3 - t1\n  2779: a0 = s1 + 0x1138\n  2783: u64 [a0 + 0x8] = a3\n  2786: u64 [a0 + 0x40] = a1\n  2789: u64 [a0 + 0x38] = ra\n  2792: u64 [a0 + 0x30] = t0\n  2795: u64 [a0 + 0x28] = t1\n  2798: u64 [a0 + 0x10] = t2\n  2801: u64 [a0 + 0x18] = a4\n  2804: a3 = a0\n  2806: a0 = s1 + 0x1160\n  2810: a1 = s1 + 0x1140\n  2814: u64 [a3 + 0x20] = a2\n  2817: ra = 60, jump @1004\n      : @99 [@dyn 30] (gas: 12)\n  2822: a4 = s1 + 0x100\n  2826: a0 = u64 [a4 + 0xa0]\n  2830: a2 = u64 [a4 + 0x98]\n  2834: a2 = a2 | a0\n  2837: a3 = 0x100000000\n  2847: a0 = 0xffffffe0\n  2857: a1 = u64 [a4 + 0xb8]\n  2861: a0 = a1 <u a0\n  2864: a1 = u64 [a4 + 0xa8]\n  2868: a0 = 0 if a1 != 0\n  2870: a0 = 0 if a2 != 0\n  2872: jump @101 if a0 != 0\n      : @100 (gas: 1)\n  2875: jump @929\n      : @101 (gas: 18)\n  2878: a0 = u64 [s1 + 0x1b8]\n  2882: i32 a0 = a0 + 0x20\n  2885: a1 = s1 + 0x7ff\n  2889: a1 = a1 + 0x139\n  2893: u64 [s1 + 0x150] = a3\n  2897: a3 = u64 [s1 + 0x160]\n  2901: a4 = a1 + 0x700\n  2905: u64 [a4 + 0xe8] = a3\n  2909: a3 = u64 [s1 + 0x168]\n  2913: u64 [a4 + 0xf0] = a3\n  2917: a3 = u64 [s1 + 0x170]\n  2921: u64 [a4 + 0xf8] = a3\n  2925: a1 = s1 + 0x1120\n  2929: a3 = s1 + 0x1138\n  2933: a4 = u64 [s1 + 0x1b0]\n  2937: u64 [a3] = a4\n  2939: u64 [s1 + 0x158] = a2\n  2943: ra = 62, jump @19\n      : @102 [@dyn 31] (gas: 5)\n  2948: a1 = u64 [s1 + 0x178]\n  2952: a0 = a1 + 0x2\n  2955: a1 = a0 <u a1\n  2958: a3 = u64 [s1 + 0x180]\n  2962: t0 = 64, jump @1204\n      : @103 [@dyn 32] (gas: 14)\n  2968: a1 = u64 [s1 + 0x190]\n  2972: a3 = a3 + a1\n  2975: a1 = a3 <u a1\n  2978: a4 = u64 [s1 + 0x188]\n  2982: a1 = a1 + a4\n  2985: a4 = s1 + 0x2138\n  2989: a5 = a4 + 0x700\n  2993: u64 [a5 + 0x70] = a2\n  2996: u64 [a5 + 0x68] = a0\n  2999: u64 [a5 + 0x78] = a3\n  3002: u64 [a5 + 0x80] = a1\n  3006: a0 = s1 + 0x1100\n  3010: a1 = s1 + 0x28a0\n  3014: ra = 66, jump @21\n      : @104 [@dyn 33] (gas: 4)\n  3019: a2 = s1 + 0x100\n  3023: a0 = u64 [a2 + 0x50]\n  3026: a0 = a0 + 0xffffffffffffffc0\n  3029: t0 = 68, jump @1196\n      : @105 [@dyn 34] (gas: 1)\n  3035: jump @107 if a0 != 0\n      : @106 (gas: 1)\n  3038: jump @929\n      : @107 (gas: 15)\n  3041: a5 = s1 + 0x7ff\n  3045: a5 = a5 + 0x139\n  3049: a2 = u64 [a5 + 0x7e0]\n  3053: a1 = u64 [a5 + 0x7d8]\n  3057: a3 = u64 [a5 + 0x7d0]\n  3061: a4 = u64 [a5 + 0x7c8]\n  3065: a0 = u64 [s1 + 0x1b8]\n  3069: i32 a0 = a0 + 0x40\n  3072: u64 [a5 + 0x7a8] = a4\n  3076: a4 = a5 + 0x700\n  3080: u64 [a4 + 0xb0] = a3\n  3084: u64 [a4 + 0xb8] = a1\n  3088: a1 = s1 + 0x10e0\n  3092: u64 [a4 + 0xc0] = a2\n  3096: ra = 70, jump @19\n      : @108 [@dyn 35] (gas: 3)\n  3101: a0 = s1 + 0x10c0\n  3105: a1 = 0x40\n  3108: ra = 72, jump @17\n      : @109 [@dyn 36] (gas: 35)\n  3113: a5 = s1 + 0x7ff\n  3117: a5 = a5 + 0x139\n  3121: t1 = u64 [a5 + 0x7a0]\n  3125: u64 [s1 + 0x1b0] = t1\n  3129: t2 = u64 [a5 + 0x798]\n  3133: u64 [s1 + 0x170] = t2\n  3137: ra = u64 [a5 + 0x790]\n  3141: u64 [s1 + 0x168] = ra\n  3145: a3 = u64 [a5 + 0x788]\n  3149: u64 [s1 + 0x160] = a3\n  3153: a0 = u64 [s1 + 0x178]\n  3157: t0 = a0 + 0x3\n  3160: a0 = t0 <u a0\n  3163: a2 = u64 [s1 + 0x180]\n  3167: a1 = a2 + a0\n  3170: a2 = a1 <u a2\n  3173: a2 = a0 if a0 == 0\n  3176: a0 = u64 [s1 + 0x190]\n  3180: a2 = a2 + a0\n  3183: a0 = a2 <u a0\n  3186: a4 = u64 [s1 + 0x188]\n  3190: a0 = a0 + a4\n  3193: u64 [a5 + 0x740] = t1\n  3197: u64 [a5 + 0x738] = t2\n  3201: u64 [a5 + 0x730] = ra\n  3205: a4 = a5 + 0x700\n  3209: u64 [a4 + 0x28] = a3\n  3212: u64 [a4 + 0x60] = a0\n  3215: u64 [a4 + 0x58] = a2\n  3218: u64 [a4 + 0x50] = a1\n  3221: a0 = s1 + 0x10a0\n  3225: a1 = s1 + 0x1080\n  3229: a2 = s1 + 0x1060\n  3233: u64 [a5 + 0x748] = t0\n  3237: ra = 74, jump @1129\n      : @110 [@dyn 37] (gas: 42)\n  3243: a1 = s1 + 0x7ff\n  3247: a1 = a1 + 0x139\n  3251: a5 = a1 + 0x700\n  3255: a0 = u64 [a5 + 0x70]\n  3258: a2 = u64 [a5 + 0x80]\n  3262: a4 = u64 [a5 + 0x68]\n  3265: u64 [s1 + 0x150] = a4\n  3269: a3 = u64 [a5 + 0x78]\n  3272: t0 = u64 [s1 + 0x168]\n  3276: ra = a0 ^ t0\n  3279: a5 = a0 <u t0\n  3282: t1 = u64 [s1 + 0x160]\n  3286: t2 = a4 <u t1\n  3289: a5 = t2 if ra == 0\n  3292: a1 = u64 [s1 + 0x170]\n  3296: a4 = a3 - a1\n  3299: a3 = a3 <u a1\n  3302: ra = a1\n  3304: a1 = u64 [s1 + 0x1b0]\n  3308: a2 = a2 - a1\n  3311: a2 = a2 - a3\n  3314: a3 = a4 <u a5\n  3317: a2 = a2 - a3\n  3320: a4 = a4 - a5\n  3323: a0 = a0 - t0\n  3326: t2 = a0 - t2\n  3329: a3 = u64 [s1 + 0x150]\n  3333: a3 = a3 - t1\n  3336: a0 = s1 + 0x7ff\n  3340: a0 = a0 + 0x139\n  3344: u64 [a0 + 0x6e8] = a3\n  3348: u64 [a0 + 0x720] = a1\n  3352: u64 [a0 + 0x718] = ra\n  3356: u64 [a0 + 0x710] = t0\n  3360: u64 [a0 + 0x708] = t1\n  3364: u64 [a0 + 0x6f0] = t2\n  3368: u64 [a0 + 0x6f8] = a4\n  3372: a3 = a0\n  3374: a0 = s1 + 0x1040\n  3378: a1 = s1 + 0x1020\n  3382: u64 [a3 + 0x700] = a2\n  3386: ra = 76, jump @1004\n      : @111 [@dyn 38] (gas: 10)\n  3391: a4 = s1 + 0x100\n  3395: a2 = u64 [a4 + 0x58]\n  3398: a3 = 0x100000000\n  3408: a0 = 0xffffffa0\n  3418: a1 = u64 [a4 + 0xb8]\n  3422: a0 = a1 <u a0\n  3425: a1 = u64 [a4 + 0xa8]\n  3429: a0 = 0 if a1 != 0\n  3431: a0 = 0 if a2 != 0\n  3433: jump @113 if a0 != 0\n      : @112 (gas: 1)\n  3436: jump @929\n      : @113 (gas: 16)\n  3439: a0 = u64 [s1 + 0x1b8]\n  3443: i32 a0 = a0 + 0x60\n  3446: a5 = s1 + 0x7ff\n  3450: a5 = a5 + 0x139\n  3454: a1 = u64 [s1 + 0x160]\n  3458: a2 = a5 + 0x600\n  3462: u64 [a2 + 0xc8] = a1\n  3466: a1 = u64 [s1 + 0x168]\n  3470: u64 [a2 + 0xd0] = a1\n  3474: a1 = u64 [s1 + 0x170]\n  3478: u64 [a2 + 0xd8] = a1\n  3482: a1 = s1 + 0x1000\n  3486: a4 = u64 [s1 + 0x1b0]\n  3490: u64 [a2 + 0xe0] = a4\n  3494: u64 [s1 + 0x150] = a3\n  3498: ra = 78, jump @19\n      : @114 [@dyn 39] (gas: 4)\n  3503: a0 = s1 + 0x7ff\n  3507: a0 = a0 + 0x7e1\n  3511: a1 = 0x40\n  3514: ra = 80, jump @17\n      : @115 [@dyn 40] (gas: 38)\n  3519: a5 = s1 + 0x7ff\n  3523: a5 = a5 + 0x139\n  3527: t1 = u64 [a5 + 0x6c0]\n  3531: u64 [s1 + 0x1b0] = t1\n  3535: t2 = u64 [a5 + 0x6b8]\n  3539: u64 [s1 + 0x170] = t2\n  3543: ra = u64 [a5 + 0x6b0]\n  3547: u64 [s1 + 0x168] = ra\n  3551: a3 = u64 [a5 + 0x6a8]\n  3555: u64 [s1 + 0x160] = a3\n  3559: a0 = u64 [s1 + 0x178]\n  3563: t0 = a0 + 0x4\n  3566: a0 = t0 <u a0\n  3569: a2 = u64 [s1 + 0x180]\n  3573: a1 = a2 + a0\n  3576: a2 = a1 <u a2\n  3579: a2 = a0 if a0 == 0\n  3582: a0 = u64 [s1 + 0x190]\n  3586: a2 = a2 + a0\n  3589: a0 = a2 <u a0\n  3592: a4 = u64 [s1 + 0x188]\n  3596: a0 = a0 + a4\n  3599: u64 [a5 + 0x660] = t1\n  3603: u64 [a5 + 0x658] = t2\n  3607: u64 [a5 + 0x650] = ra\n  3611: a4 = a5 + 0x600\n  3615: u64 [a4 + 0x48] = a3\n  3618: u64 [a4 + 0x80] = a0\n  3622: u64 [a4 + 0x78] = a2\n  3625: u64 [a4 + 0x70] = a1\n  3628: a0 = s1 + 0x7ff\n  3632: a0 = a0 + 0x7c1\n  3636: a1 = s1 + 0x7ff\n  3640: a1 = a1 + 0x7a1\n  3644: a2 = s1 + 0x7ff\n  3648: a2 = a2 + 0x781\n  3652: u64 [a5 + 0x668] = t0\n  3656: ra = 82, jump @1129\n      : @116 [@dyn 41] (gas: 45)\n  3662: a1 = s1 + 0x7ff\n  3666: a1 = a1 + 0x139\n  3670: a5 = a1 + 0x600\n  3674: a0 = u64 [a5 + 0x90]\n  3678: a2 = u64 [a5 + 0xa0]\n  3682: a4 = u64 [a5 + 0x88]\n  3686: u64 [s1 + 0x148] = a4\n  3690: a3 = u64 [a5 + 0x98]\n  3694: t0 = u64 [s1 + 0x168]\n  3698: ra = a0 ^ t0\n  3701: a5 = a0 <u t0\n  3704: t1 = u64 [s1 + 0x160]\n  3708: t2 = a4 <u t1\n  3711: a5 = t2 if ra == 0\n  3714: a1 = u64 [s1 + 0x170]\n  3718: a4 = a3 - a1\n  3721: a3 = a3 <u a1\n  3724: ra = a1\n  3726: a1 = u64 [s1 + 0x1b0]\n  3730: a2 = a2 - a1\n  3733: a2 = a2 - a3\n  3736: a3 = a4 <u a5\n  3739: a2 = a2 - a3\n  3742: a4 = a4 - a5\n  3745: a0 = a0 - t0\n  3748: t2 = a0 - t2\n  3751: a3 = u64 [s1 + 0x148]\n  3755: a3 = a3 - t1\n  3758: a0 = s1 + 0x7ff\n  3762: a0 = a0 + 0x139\n  3766: a5 = a0 + 0x600\n  3770: u64 [a5 + 0x8] = a3\n  3773: u64 [a5 + 0x40] = a1\n  3776: u64 [a0 + 0x638] = ra\n  3780: u64 [a0 + 0x630] = t0\n  3784: u64 [a0 + 0x628] = t1\n  3788: u64 [a0 + 0x610] = t2\n  3792: u64 [a5 + 0x18] = a4\n  3795: a3 = a0\n  3797: a0 = s1 + 0x7ff\n  3801: a0 = a0 + 0x761\n  3805: a1 = s1 + 0x7ff\n  3809: a1 = a1 + 0x741\n  3813: u64 [a3 + 0x620] = a2\n  3817: ra = 84, jump @1004\n      : @117 [@dyn 42] (gas: 4)\n  3822: a2 = s1 + 0x100\n  3826: a0 = u64 [a2 + 0x50]\n  3829: a0 = a0 + 0xffffffffffffff80\n  3832: t0 = 86, jump @1196\n      : @118 [@dyn 43] (gas: 1)\n  3838: jump @120 if a0 != 0\n      : @119 (gas: 1)\n  3841: jump @929\n      : @120 (gas: 16)\n  3844: a0 = u64 [s1 + 0x1b8]\n  3848: i32 a0 = a0 + 0x80\n  3852: a3 = s1 + 0x7ff\n  3856: a3 = a3 + 0x139\n  3860: a1 = u64 [s1 + 0x160]\n  3864: a2 = a3 + 0x500\n  3868: u64 [a2 + 0xe8] = a1\n  3872: a1 = u64 [s1 + 0x168]\n  3876: u64 [a2 + 0xf0] = a1\n  3880: a1 = u64 [s1 + 0x170]\n  3884: u64 [a2 + 0xf8] = a1\n  3888: a1 = s1 + 0x7ff\n  3892: a1 = a1 + 0x721\n  3896: a2 = u64 [s1 + 0x1b0]\n  3900: u64 [a3 + 0x600] = a2\n  3904: ra = 88, jump @19\n      : @121 [@dyn 44] (gas: 4)\n  3909: a0 = s1 + 0x7ff\n  3913: a0 = a0 + 0x701\n  3917: a1 = 0x40\n  3920: ra = 90, jump @17\n      : @122 [@dyn 45] (gas: 38)\n  3925: a5 = s1 + 0x7ff\n  3929: a5 = a5 + 0x139\n  3933: t1 = u64 [a5 + 0x5e0]\n  3937: u64 [s1 + 0x1b0] = t1\n  3941: t2 = u64 [a5 + 0x5d8]\n  3945: u64 [s1 + 0x170] = t2\n  3949: ra = u64 [a5 + 0x5d0]\n  3953: u64 [s1 + 0x168] = ra\n  3957: a0 = u64 [s1 + 0x178]\n  3961: t0 = a0 + 0x5\n  3964: a0 = t0 <u a0\n  3967: a2 = u64 [s1 + 0x180]\n  3971: a1 = a2 + a0\n  3974: a2 = a1 <u a2\n  3977: a2 = a0 if a0 == 0\n  3980: a3 = u64 [a5 + 0x5c8]\n  3984: u64 [s1 + 0x180] = a3\n  3988: a0 = u64 [s1 + 0x190]\n  3992: a2 = a2 + a0\n  3995: a0 = a2 <u a0\n  3998: a4 = u64 [s1 + 0x188]\n  4002: a0 = a0 + a4\n  4005: u64 [a5 + 0x580] = t1\n  4009: u64 [a5 + 0x578] = t2\n  4013: u64 [a5 + 0x570] = ra\n  4017: a4 = a5 + 0x500\n  4021: u64 [a4 + 0x68] = a3\n  4024: u64 [a4 + 0xa0] = a0\n  4028: u64 [a4 + 0x98] = a2\n  4032: u64 [a4 + 0x90] = a1\n  4036: a0 = s1 + 0x7ff\n  4040: a0 = a0 + 0x6e1\n  4044: a1 = s1 + 0x7ff\n  4048: a1 = a1 + 0x6c1\n  4052: a2 = s1 + 0x7ff\n  4056: a2 = a2 + 0x6a1\n  4060: u64 [a5 + 0x588] = t0\n  4064: ra = 92, jump @1129\n      : @123 [@dyn 46] (gas: 45)\n  4070: a1 = s1 + 0x7ff\n  4074: a1 = a1 + 0x139\n  4078: a5 = a1 + 0x500\n  4082: a0 = u64 [a5 + 0xb0]\n  4086: a2 = u64 [a5 + 0xc0]\n  4090: a4 = u64 [a5 + 0xa8]\n  4094: u64 [s1 + 0x190] = a4\n  4098: a3 = u64 [a5 + 0xb8]\n  4102: t0 = u64 [s1 + 0x168]\n  4106: ra = a0 ^ t0\n  4109: a5 = a0 <u t0\n  4112: t1 = u64 [s1 + 0x180]\n  4116: t2 = a4 <u t1\n  4119: a5 = t2 if ra == 0\n  4122: a1 = u64 [s1 + 0x170]\n  4126: a4 = a3 - a1\n  4129: a3 = a3 <u a1\n  4132: ra = a1\n  4134: a1 = u64 [s1 + 0x1b0]\n  4138: a2 = a2 - a1\n  4141: a2 = a2 - a3\n  4144: a3 = a4 <u a5\n  4147: a2 = a2 - a3\n  4150: a4 = a4 - a5\n  4153: a0 = a0 - t0\n  4156: t2 = a0 - t2\n  4159: a3 = u64 [s1 + 0x190]\n  4163: a3 = a3 - t1\n  4166: a0 = s1 + 0x7ff\n  4170: a0 = a0 + 0x139\n  4174: a5 = a0 + 0x500\n  4178: u64 [a5 + 0x28] = a3\n  4181: u64 [a5 + 0x60] = a1\n  4184: u64 [a0 + 0x558] = ra\n  4188: u64 [a0 + 0x550] = t0\n  4192: u64 [a0 + 0x548] = t1\n  4196: u64 [a0 + 0x530] = t2\n  4200: u64 [a5 + 0x38] = a4\n  4203: a3 = a0\n  4205: a0 = s1 + 0x7ff\n  4209: a0 = a0 + 0x681\n  4213: a1 = s1 + 0x7ff\n  4217: a1 = a1 + 0x661\n  4221: u64 [a3 + 0x540] = a2\n  4225: ra = 94, jump @1004\n      : @124 [@dyn 47] (gas: 3)\n  4230: a0 = 0xffffff60\n  4240: a2 = s1 + 0x100\n  4244: t0 = 96, jump @1196\n      : @125 [@dyn 48] (gas: 1)\n  4250: jump @127 if a0 != 0\n      : @126 (gas: 1)\n  4253: jump @929\n      : @127 (gas: 16)\n  4256: a0 = u64 [s1 + 0x1b8]\n  4260: i32 a0 = a0 + 0xa0\n  4264: a3 = s1 + 0x7ff\n  4268: a3 = a3 + 0x139\n  4272: a1 = u64 [s1 + 0x180]\n  4276: a4 = a3 + 0x500\n  4280: u64 [a4 + 0x8] = a1\n  4283: a1 = u64 [s1 + 0x168]\n  4287: u64 [a4 + 0x10] = a1\n  4290: a1 = u64 [s1 + 0x170]\n  4294: u64 [a4 + 0x18] = a1\n  4297: a1 = s1 + 0x7ff\n  4301: a1 = a1 + 0x641\n  4305: a2 = u64 [s1 + 0x1b0]\n  4309: u64 [a4 + 0x20] = a2\n  4312: ra = 98, jump @19\n      : @128 [@dyn 49] (gas: 4)\n  4317: a0 = s1 + 0x7ff\n  4321: a0 = a0 + 0x621\n  4325: a1 = 0x40\n  4328: ra = 100, jump @17\n      : @129 [@dyn 50] (gas: 31)\n  4333: a1 = s1 + 0x7ff\n  4337: a1 = a1 + 0x139\n  4341: a2 = u64 [a1 + 0x500]\n  4345: u64 [s1 + 0x190] = a2\n  4349: a3 = u64 [a1 + 0x4f8]\n  4353: u64 [s1 + 0x188] = a3\n  4357: a5 = u64 [a1 + 0x4f0]\n  4361: u64 [s1 + 0x180] = a5\n  4365: a4 = u64 [a1 + 0x4e8]\n  4369: u64 [s1 + 0x1b0] = a4\n  4373: a0 = u64 [s1 + 0x198]\n  4377: u64 [a1 + 0x4a0] = a0\n  4381: a0 = u64 [s1 + 0x1a0]\n  4385: u64 [a1 + 0x498] = a0\n  4389: a0 = u64 [s1 + 0x1a8]\n  4393: u64 [a1 + 0x490] = a0\n  4397: a0 = u64 [s1 + 0x1b8]\n  4401: u64 [a1 + 0x488] = a0\n  4405: a0 = a1 + 0x400\n  4409: u64 [a0 + 0xc0] = a2\n  4413: u64 [a0 + 0xb8] = a3\n  4417: u64 [a0 + 0xb0] = a5\n  4421: a3 = a1\n  4423: a0 = s1 + 0x7ff\n  4427: a0 = a0 + 0x601\n  4431: a1 = s1 + 0x7ff\n  4435: a1 = a1 + 0x5e1\n  4439: a2 = s1 + 0x7ff\n  4443: a2 = a2 + 0x5c1\n  4447: u64 [a3 + 0x4a8] = a4\n  4451: ra = 102, jump @1084\n      : @130 [@dyn 51] (gas: 14)\n  4456: a4 = s1 + 0x100\n  4460: a1 = u64 [a4 + 0x80]\n  4464: a2 = a1\n  4466: a0 = u64 [a4 + 0x90]\n  4470: a0 = a0 | a1\n  4473: a3 = u64 [a4 + 0x88]\n  4477: a1 = u64 [a4 + 0xb0]\n  4481: a1 = a1 | a3\n  4484: a1 = a1 | a0\n  4487: a1 = a1 >> 0x20\n  4490: a0 = a0 | a3\n  4493: a0 = a0 << 0x20\n  4496: a0 = a0 | a1\n  4499: jump @132 if a0 == 0\n      : @131 (gas: 1)\n  4502: jump @929\n      : @132 (gas: 37)\n  4505: t0 = a3\n  4507: a1 = s1 + 0x7ff\n  4511: a1 = a1 + 0x139\n  4515: a4 = a1 + 0x400\n  4519: a0 = u64 [a4 + 0xd0]\n  4523: a3 = u64 [a4 + 0xe0]\n  4527: u64 [s1 + 0x1b8] = a3\n  4531: t1 = u64 [a1 + 0x4c8]\n  4535: a3 = u64 [a4 + 0xd8]\n  4539: ra = a0 ^ a2\n  4542: a5 = a0 <u a2\n  4545: t2 = u64 [s1 + 0x1b0]\n  4549: a1 = t1 <u t2\n  4552: a5 = a1 if ra == 0\n  4555: a4 = a3 - t0\n  4558: ra = a4 - a5\n  4561: a4 = a4 <u a5\n  4564: u64 [s1 + 0x1a8] = a4\n  4568: a3 = a3 <u t0\n  4571: a5 = u64 [s1 + 0x190]\n  4575: a4 = u64 [s1 + 0x1b8]\n  4579: a5 = a4 - a5\n  4582: a5 = a5 - a3\n  4585: a3 = u64 [s1 + 0x1a8]\n  4589: a5 = a5 - a3\n  4592: a0 = a0 - a2\n  4595: a0 = a0 - a1\n  4598: a1 = t1 - t2\n  4601: a0 = a0 | a5\n  4604: a2 = a1\n  4606: a1 = a1 | ra\n  4609: a1 = a1 | a0\n  4612: a0 = a0 | ra\n  4615: a1 = a1 >> 0x20\n  4618: a0 = a0 << 0x20\n  4621: a0 = a0 | a1\n  4624: jump @134 if a0 == 0\n      : @133 (gas: 1)\n  4627: jump @929\n      : @134 (gas: 5)\n  4630: a0 = u64 [s1 + 0x1b0]\n  4634: a1 = a2\n  4636: u64 [s1 + 0x1b8] = a2\n  4640: ra = 0x112\n  4644: jump @26\n      : @135 (gas: 11)\n  4647: u64 [a2 + 832] = 0\n  4651: u64 [a2 + 824] = 0\n  4655: u64 [a2 + 816] = 0\n  4659: u64 [a2 + 808] = 0\n  4663: a0 = s1 + 0x2000\n  4667: i32 a0 = a0 + 0x460\n  4671: ra = 0x68\n  4674: ecalli 10 // 'value_transferred'\n  4676: a0 = 0x2000\n  4680: t0 = 0x6a\n  4683: jump @1214\n      : @136 [@dyn 52] (gas: 2)\n  4687: a0 = 0x2000\n  4691: t0 = 106, jump @1214\n      : @137 [@dyn 53] (gas: 8)\n  4697: a0 = u64 [a4 + 0x38]\n  4700: a1 = u64 [a4 + 0x40]\n  4703: a2 = u64 [a4 + 0x30]\n  4706: a3 = u64 [a4 + 0x28]\n  4709: a1 = a1 | a2\n  4712: a0 = a0 | a3\n  4715: a0 = a0 | a1\n  4718: jump @139 if a0 == 0\n      : @138 (gas: 1)\n  4721: jump @936\n      : @139 (gas: 3)\n  4724: a0 = u64 [s1 + 0x1b8]\n  4728: a0 = i32 [a0]\n  4730: jump @141 if a0 >u 35\n      : @140 (gas: 1)\n  4734: jump @937\n      : @141 (gas: 21)\n  4737: a0 = s1 + 0x2000\n  4741: i32 a0 = a0 + 0x480\n  4745: a1 = 0x4\n  4748: ecalli 1 // 'call_data_load'\n  4750: a1 = s1 + 0x2138\n  4754: a2 = a1 + 0x300\n  4758: a0 = u64 [a2 + 0x60]\n  4761: u64 [s1 + 0x1a8] = a0\n  4765: a0 = u64 [a2 + 0x58]\n  4768: u64 [s1 + 0x1b8] = a0\n  4772: a0 = u64 [a2 + 0x50]\n  4775: u64 [s1 + 0x1a0] = a0\n  4779: a0 = u64 [a2 + 0x48]\n  4782: u64 [s1 + 0x198] = a0\n  4786: u64 [a1 + 896] = 0\n  4790: u64 [a1 + 888] = 0\n  4794: u64 [a1 + 880] = 0\n  4798: u64 [a2 + 104] = 0x1\n  4802: a0 = s1 + 0x280\n  4806: a1 = s1 + 0x24a0\n  4810: ra = 108, jump @21\n      : @142 [@dyn 54] (gas: 21)\n  4815: t2 = u64 [s1 + 0x1a8]\n  4819: t1 = u64 [s1 + 0x1a0]\n  4823: t0 = u64 [s1 + 0x198]\n  4827: a2 = s1 + 0x200\n  4831: a0 = u64 [a2 + 0x98]\n  4835: a1 = u64 [a2 + 0x80]\n  4839: ra = u64 [s1 + 0x290]\n  4843: a3 = u64 [a2 + 0x88]\n  4847: a4 = t2 ^ a0\n  4850: a0 = t2 <u a0\n  4853: a2 = u64 [s1 + 0x1b8]\n  4857: a5 = a2 <u ra\n  4860: a5 = a0 if a4 != 0\n  4863: a0 = t1 ^ a3\n  4866: a3 = t1 <u a3\n  4869: a1 = t0 <u a1\n  4872: a1 = a3 if a0 != 0\n  4875: a0 = a2 ^ ra\n  4878: a0 = a0 | a4\n  4881: a1 = a5 if a0 != 0\n  4884: jump @144 if a1 != 0\n      : @143 (gas: 1)\n  4887: jump @938\n      : @144 (gas: 11)\n  4890: a0 = sp + 0xffffffffffffffe0\n  4893: a0 = a0 & 0xffffffffffffffe0\n  4896: u64 [s1 + 0x1b0] = a0\n  4900: sp = a0\n  4902: u64 [s1 + 0x238] = t2\n  4906: u64 [s1 + 0x230] = a2\n  4910: u64 [s1 + 0x228] = t1\n  4914: a0 = s1 + 0x240\n  4918: a1 = s1 + 0x220\n  4922: u64 [s1 + 0x220] = t0\n  4926: ra = 110, jump @983\n      : @145 [@dyn 55] (gas: 20)\n  4931: a0 = u64 [s1 + 0x278]\n  4935: u64 [s1 + 0x180] = a0\n  4939: a0 = u64 [s1 + 0x270]\n  4943: u64 [s1 + 0x190] = a0\n  4947: a0 = u64 [s1 + 0x268]\n  4951: u64 [s1 + 0x188] = a0\n  4955: a0 = u64 [s1 + 0x260]\n  4959: u64 [s1 + 0x198] = a0\n  4963: a0 = u64 [s1 + 0x250]\n  4967: a1 = u64 [s1 + 0x258]\n  4971: a2 = u64 [s1 + 0x240]\n  4975: a3 = u64 [s1 + 0x248]\n  4979: a4 = u64 [s1 + 0x1b0]\n  4983: u64 [a4 + 0x10] = a0\n  4986: u64 [a4 + 0x18] = a1\n  4989: u64 [a4] = a2\n  4991: u64 [a4 + 0x8] = a3\n  4994: a1 = a4\n  4996: a0 = s1 + 0x200\n  5000: ra = 112, jump @21\n      : @146 [@dyn 56] (gas: 12)\n  5005: a1 = s1 + 0x200\n  5009: a0 = u64 [a1 + 0x18]\n  5012: u64 [s1 + 0x1b8] = a0\n  5016: a0 = u64 [a1 + 0x10]\n  5019: u64 [s1 + 0x1b0] = a0\n  5023: a0 = u64 [a1 + 0x8]\n  5026: u64 [s1 + 0x1a0] = a0\n  5030: a0 = u64 [a1]\n  5032: u64 [s1 + 0x1a8] = a0\n  5036: a0 = s1 + 0x1e0\n  5040: a1 = 0x40\n  5043: ra = 114, jump @17\n      : @147 [@dyn 57] (gas: 13)\n  5048: a4 = s1 + 0x100\n  5052: a0 = u64 [a4 + 0xf8]\n  5056: a1 = u64 [a4 + 0xf0]\n  5060: a2 = u64 [a4 + 0xe8]\n  5064: a3 = u64 [a4 + 0xe0]\n  5068: a0 = a0 | a2\n  5071: a2 = a3 | a1\n  5074: a2 = a2 | a0\n  5077: a2 = a2 >> 0x20\n  5080: a0 = a0 | a1\n  5083: a0 = a0 << 0x20\n  5086: a0 = a0 | a2\n  5089: jump @149 if a0 == 0\n      : @148 (gas: 1)\n  5092: jump @929\n      : @149 (gas: 30)\n  5095: a0 = u64 [s1 + 0x198]\n  5099: a2 = a0 >> 0x3d\n  5102: a5 = u64 [s1 + 0x188]\n  5106: a1 = a5 << 0x3\n  5109: t1 = a1 | a2\n  5112: a4 = u64 [s1 + 0x190]\n  5116: a1 = a4 >> 0x3d\n  5119: a2 = u64 [s1 + 0x180]\n  5123: a2 = a2 << 0x3\n  5126: a1 = a1 | a2\n  5129: a2 = a5 >> 0x3d\n  5132: u64 [s1 + 0x188] = a3\n  5136: a3 = a4 << 0x3\n  5139: a2 = a2 | a3\n  5142: a3 = a0 << 0x3\n  5145: u64 [s1 + 0x190] = a3\n  5149: a5 = a2 >u 0\n  5151: a4 = a1 >u 0\n  5153: a4 = a5 if a1 == 0\n  5156: t0 = t1 >u 0\n  5158: a5 = a3 <u 0x100\n  5162: a5 = a5 ^ 0x1\n  5165: a5 = t0 if t1 != 0\n  5168: a1 = a1 | a2\n  5171: a5 = a4 if a1 != 0\n  5174: u64 [s1 + 0x180] = a5\n  5178: i32 a2 = a3 + 0xffffffffffffff80\n  5181: a0 = u64 [s1 + 0x1b0]\n  5185: a1 = u64 [s1 + 0x1b8]\n  5189: ra = 116, jump @1216\n      : @150 [@dyn 58] (gas: 8)\n  5195: u64 [s1 + 0x178] = a0\n  5199: u64 [s1 + 0x170] = a1\n  5203: a0 = u64 [s1 + 0x198]\n  5207: i32 a2 = a0 << 0x3\n  5210: u64 [s1 + 0x198] = a2\n  5214: a0 = u64 [s1 + 0x1a8]\n  5218: a1 = u64 [s1 + 0x1a0]\n  5222: ra = 118, jump @1216\n      : @151 [@dyn 59] (gas: 7)\n  5228: u64 [s1 + 0x160] = a0\n  5232: u64 [s1 + 0x168] = a1\n  5236: a1 = u64 [s1 + 0x190]\n  5240: i32 a2 = 0x80 - a1\n  5244: a0 = u64 [s1 + 0x1b0]\n  5248: a1 = u64 [s1 + 0x1b8]\n  5252: ra = 120, jump @1221\n      : @152 [@dyn 60] (gas: 21)\n  5258: a2 = u64 [s1 + 0x168]\n  5262: a2 = a2 | a1\n  5265: a1 = u64 [s1 + 0x190]\n  5269: a3 = a1 <u 0x80\n  5273: u64 [s1 + 0x168] = a3\n  5277: a4 = u64 [s1 + 0x170]\n  5281: a2 = a4 if a3 == 0\n  5284: a4 = u64 [s1 + 0x1a0]\n  5288: a2 = a4 if a1 == 0\n  5291: u64 [s1 + 0x1a0] = a2\n  5295: a2 = u64 [s1 + 0x160]\n  5299: a0 = a0 | a2\n  5302: a2 = u64 [s1 + 0x178]\n  5306: a0 = a2 if a3 == 0\n  5309: a2 = u64 [s1 + 0x1a8]\n  5313: a0 = a2 if a1 == 0\n  5316: u64 [s1 + 0x1a8] = a0\n  5320: a0 = u64 [s1 + 0x1b0]\n  5324: a1 = u64 [s1 + 0x1b8]\n  5328: a2 = u64 [s1 + 0x198]\n  5332: ra = 122, jump @1216\n      : @153 [@dyn 61] (gas: 19)\n  5338: a1 = 0\n  5340: a2 = u64 [s1 + 0x168]\n  5344: a0 = 0 if a2 == 0\n  5346: a0 = a0 << 0x20\n  5349: a0 = a0 >> 0x20\n  5352: a2 = u64 [s1 + 0x180]\n  5356: a4 = u64 [s1 + 0x1a8]\n  5360: a4 = 0 if a2 != 0\n  5362: a3 = u64 [s1 + 0x1a0]\n  5366: a3 = 0 if a2 != 0\n  5368: a0 = 0 if a2 != 0\n  5370: a1 = 0 if a2 == 0\n  5372: u64 [s1 + 0x1d8] = a1\n  5376: u64 [s1 + 0x1d0] = a0\n  5380: u64 [s1 + 0x1c8] = a3\n  5384: a1 = s1 + 0x1c0\n  5388: u64 [s1 + 0x1c0] = a4\n  5392: a0 = u64 [s1 + 0x188]\n  5396: ra = 124, jump @19\n      : @154 [@dyn 62] (gas: 3)\n  5401: a1 = 0x20\n  5404: a0 = u64 [s1 + 0x188]\n  5408: ra = 126, jump @26\n      : @155 [@dyn 63] (gas: 5)\n  5413: i32 a1 = a0 + 0\n  5415: a2 = 0x20\n  5418: a0 = 0\n  5420: ecalli 7 // 'seal_return'\n  5422: fallthrough\n      : @156 (gas: 11)\n  5423: u64 [a2 + 928] = 0\n  5427: u64 [a2 + 920] = 0\n  5431: u64 [a2 + 912] = 0\n  5435: u64 [a2 + 904] = 0\n  5439: a0 = s1 + 0x2000\n  5443: i32 a0 = a0 + 0x4c0\n  5447: ra = 0x80\n  5451: ecalli 10 // 'value_transferred'\n  5453: a0 = 0x2000\n  5457: t0 = 0x82\n  5461: jump @1214\n      : @157 [@dyn 64] (gas: 2)\n  5465: a0 = 0x2000\n  5469: t0 = 130, jump @1214\n      : @158 [@dyn 65] (gas: 8)\n  5476: a0 = u64 [a4 + 0x98]\n  5480: a1 = u64 [a4 + 0xa0]\n  5484: a2 = u64 [a4 + 0x90]\n  5488: a3 = u64 [a4 + 0x88]\n  5492: a1 = a1 | a2\n  5495: a0 = a0 | a3\n  5498: a0 = a0 | a1\n  5501: jump @160 if a0 == 0\n      : @159 (gas: 1)\n  5504: jump @939\n      : @160 (gas: 13)\n  5507: a0 = u64 [s1 + 0x1b8]\n  5511: a0 = u32 [a0]\n  5513: a2 = s1 + 0x7ff\n  5517: a2 = a2 + 0x139\n  5521: u64 [a2 + 992] = 0\n  5525: u64 [a2 + 984] = 0\n  5529: u64 [a2 + 0x3c8] = a0\n  5533: a0 = s1 + 0x7ff\n  5537: a0 = a0 + 0x521\n  5541: a1 = s1 + 0x7ff\n  5545: a1 = a1 + 0x501\n  5549: u64 [a2 + 976] = 0\n  5553: ra = 132, jump @1041\n      : @161 [@dyn 66] (gas: 52)\n  5559: a1 = s1 + 0x7ff\n  5563: a1 = a1 + 0x139\n  5567: a2 = a1 + 0x400\n  5571: a0 = u64 [a2]\n  5573: u64 [s1 + 0x1a8] = a0\n  5577: a3 = a1 + 0x300\n  5581: a0 = u64 [a3 + 0xf8]\n  5585: u64 [s1 + 0x1a0] = a0\n  5589: a0 = u64 [a3 + 0xf0]\n  5593: u64 [s1 + 0x198] = a0\n  5597: a0 = u64 [a3 + 0xe8]\n  5601: u64 [s1 + 0x190] = a0\n  5605: a0 = u64 [a2 + 0x20]\n  5608: u64 [s1 + 0x188] = a0\n  5612: a0 = u64 [a2 + 0x18]\n  5615: u64 [s1 + 0x180] = a0\n  5619: a0 = u64 [a2 + 0x10]\n  5622: u64 [s1 + 0x178] = a0\n  5626: a0 = u64 [a2 + 0x8]\n  5629: u64 [s1 + 0x170] = a0\n  5633: a0 = u64 [a2 + 0x40]\n  5636: u64 [s1 + 0x168] = a0\n  5640: a0 = u64 [a2 + 0x38]\n  5643: u64 [s1 + 0x160] = a0\n  5647: a0 = u64 [a2 + 0x30]\n  5650: u64 [s1 + 0x158] = a0\n  5654: a0 = u64 [a2 + 0x28]\n  5657: u64 [s1 + 0x150] = a0\n  5661: a0 = u64 [a2 + 0x60]\n  5664: u64 [s1 + 0x148] = a0\n  5668: a0 = u64 [a2 + 0x58]\n  5671: u64 [s1 + 0x140] = a0\n  5675: a0 = u64 [a2 + 0x50]\n  5678: u64 [s1 + 0x138] = a0\n  5682: a0 = u64 [a2 + 0x48]\n  5685: u64 [s1 + 0x130] = a0\n  5689: a0 = u64 [a2 + 0x80]\n  5693: u64 [s1 + 0x128] = a0\n  5697: a0 = u64 [a2 + 0x78]\n  5700: u64 [s1 + 0xf0] = a0\n  5704: a0 = u64 [a2 + 0x70]\n  5707: u64 [s1 + 0xe8] = a0\n  5711: a0 = u64 [a2 + 0x68]\n  5714: u64 [s1 + 0xe0] = a0\n  5718: a0 = 0x30070\n  5723: u64 [s1 + 0x120] = a0\n  5727: i32 a0 = a0 + 0\n  5729: u64 [s1 + 0x108] = a0\n  5733: ra = 0x86\n  5737: ecalli 3 // 'caller'\n  5739: t0 = 0x88\n  5743: jump @1160\n      : @162 [@dyn 67] (gas: 1)\n  5746: t0 = 136, jump @1160\n      : @163 [@dyn 68] (gas: 9)\n  5752: u64 [a2 + 960] = 0\n  5756: a4 = a2 + 0x300\n  5760: u64 [a4 + 0xb8] = a1\n  5764: u64 [a4 + 0xb0] = a0\n  5768: a1 = s1 + 0x7ff\n  5772: a1 = a1 + 0x4e1\n  5776: u64 [a4 + 0xa8] = a3\n  5780: a0 = 0\n  5782: ra = 138, jump @19\n      : @164 [@dyn 69] (gas: 11)\n  5788: a0 = s1 + 0x7ff\n  5792: a0 = a0 + 0x139\n  5796: u64 [a0 + 928] = 0\n  5800: u64 [a0 + 920] = 0\n  5804: u64 [a0 + 912] = 0\n  5808: a2 = a0\n  5810: a0 = 0x20\n  5813: a1 = s1 + 0x7ff\n  5817: a1 = a1 + 0x4c1\n  5821: u64 [a2 + 904] = 0\n  5825: ra = 140, jump @19\n      : @165 [@dyn 70] (gas: 4)\n  5831: a2 = 0x2005c\n  5836: a0 = i32 [0x2005c]\n  5841: a1 = 0x3f\n  5844: jump @167 if a1 <u a0\n      : @166 (gas: 4)\n  5847: u32 [0x2005c] = 0x40\n  5853: u64 [s1 + 0x100] = a2\n  5857: t0 = 0x8e\n  5861: jump @1197\n      : @167 (gas: 2)\n  5865: u64 [s1 + 0x100] = a2\n  5869: t0 = 142, jump @1197\n      : @168 [@dyn 71] (gas: 9)\n  5876: a0 = 0x20070\n  5881: i32 a0 = a0 + 0\n  5883: i32 a2 = a2 + 0\n  5885: a1 = 0x40\n  5888: u64 [s1 + 0xf8] = a0\n  5892: ra = 0x90\n  5896: ecalli 6 // 'hash_keccak_256'\n  5898: t0 = 0x92\n  5902: jump @1185\n      : @169 [@dyn 72] (gas: 1)\n  5906: t0 = 146, jump @1185\n      : @170 [@dyn 73] (gas: 9)\n  5913: a5 = a4 + 0x300\n  5917: u64 [a5 + 0xc0] = a3\n  5921: u64 [a5 + 0xb8] = a2\n  5925: u64 [a5 + 0xb0] = a1\n  5929: u64 [a5 + 0xa8] = a0\n  5933: a0 = s1 + 0x7ff\n  5937: a0 = a0 + 0x4a1\n  5941: a1 = s1 + 0x24e0\n  5945: ra = 148, jump @21\n      : @171 [@dyn 74] (gas: 12)\n  5951: a2 = s1 + 0x7ff\n  5955: a2 = a2 + 0x139\n  5959: a0 = u32 [a2 + 0x378]\n  5963: a1 = u64 [a2 + 0x368]\n  5967: a2 = u64 [a2 + 0x370]\n  5971: a0 = a0 | a1\n  5974: a0 = a0 | a2\n  5977: u64 [s1 + 0x1b8] = a0\n  5981: a0 = s1 + 0x7ff\n  5985: a0 = a0 + 0x481\n  5989: a1 = 0x40\n  5992: ra = 150, jump @17\n      : @172 [@dyn 75] (gas: 12)\n  5998: a5 = s1 + 0x7ff\n  6002: a5 = a5 + 0x139\n  6006: a0 = a5 + 0x300\n  6010: a4 = u64 [a0 + 0x60]\n  6013: a1 = u64 [a0 + 0x58]\n  6016: a2 = u64 [a0 + 0x48]\n  6019: t1 = u64 [a5 + 0x350]\n  6023: t2 = a2 | a1\n  6026: a3 = t1 | a4\n  6029: t0 = a1 | a4\n  6032: a0 = u64 [s1 + 0x1b8]\n  6036: jump @174 if a0 == 0\n      : @173 (gas: 1)\n  6039: jump @318\n      : @174 (gas: 14)\n  6042: u64 [s1 + 0x1b0] = t0\n  6046: u64 [a5 + 0x2a8] = a2\n  6050: u64 [a5 + 0x2b0] = t1\n  6054: u64 [a5 + 0x2b8] = a1\n  6058: u64 [s1 + 0x1b8] = t2\n  6062: a0 = s1 + 0x7ff\n  6066: a0 = a0 + 0x3e1\n  6070: u64 [s1 + 0xc8] = a4\n  6074: u64 [a5 + 0x2c0] = a4\n  6078: u64 [s1 + 0x118] = a2\n  6082: u64 [s1 + 0x110] = t1\n  6086: u64 [s1 + 0xd8] = a1\n  6090: u64 [s1 + 0xd0] = a3\n  6094: ra = 152, jump @995\n      : @175 [@dyn 76] (gas: 4)\n  6100: a0 = u64 [s1 + 0x108]\n  6104: ra = 0x9a\n  6108: ecalli 3 // 'caller'\n  6110: fallthrough\n      : @176 [@dyn 77] (gas: 9)\n  6111: a0 = u64 [s1 + 0x1b8]\n  6115: a2 = u64 [s1 + 0xd0]\n  6119: a0 = a0 | a2\n  6122: a0 = a0 >> 0x20\n  6125: a1 = u64 [s1 + 0xd8]\n  6129: a1 = a1 | a2\n  6132: a1 = a1 << 0x20\n  6135: a0 = a0 | a1\n  6138: jump @178 if a0 == 0\n      : @177 (gas: 1)\n  6141: jump @929\n      : @178 (gas: 1)\n  6144: t0 = 156, jump @1160\n      : @179 [@dyn 78] (gas: 9)\n  6150: u64 [a2 + 672] = 0\n  6154: a4 = a2 + 0x200\n  6158: u64 [a4 + 0x98] = a1\n  6162: u64 [a4 + 0x90] = a0\n  6166: a1 = s1 + 0x7ff\n  6170: a1 = a1 + 0x3c1\n  6174: u64 [a4 + 0x88] = a3\n  6178: a0 = u64 [s1 + 0x118]\n  6182: ra = 158, jump @19\n      : @180 [@dyn 79] (gas: 10)\n  6188: a2 = 0x100000000\n  6198: a0 = 0xffffffe0\n  6208: a4 = s1 + 0x100\n  6212: a3 = u64 [a4 + 0x18]\n  6215: a0 = a3 <u a0\n  6218: a1 = u64 [a4 + 0x10]\n  6221: a0 = 0 if a1 != 0\n  6223: a1 = u64 [a4 + 0xb0]\n  6227: a0 = 0 if a1 != 0\n  6229: jump @182 if a0 != 0\n      : @181 (gas: 1)\n  6232: jump @929\n      : @182 (gas: 17)\n  6235: i32 a0 = a3 + 0x20\n  6238: a5 = s1 + 0x7ff\n  6242: a5 = a5 + 0x139\n  6246: a1 = u64 [s1 + 0x190]\n  6250: a3 = a5 + 0x200\n  6254: u64 [a3 + 0x68] = a1\n  6257: a1 = u64 [s1 + 0x198]\n  6261: u64 [a3 + 0x70] = a1\n  6264: a1 = u64 [s1 + 0x1a0]\n  6268: u64 [a3 + 0x78] = a1\n  6271: a1 = s1 + 0x7ff\n  6275: a1 = a1 + 0x3a1\n  6279: a4 = u64 [s1 + 0x1a8]\n  6283: u64 [a3 + 0x80] = a4\n  6287: u64 [s1 + 0x1a8] = a0\n  6291: u64 [s1 + 0x1b8] = a2\n  6295: ra = 160, jump @19\n      : @183 [@dyn 80] (gas: 10)\n  6301: a3 = s1 + 0x100\n  6305: a1 = u64 [a3 + 0x18]\n  6308: a0 = u64 [a3 + 0xb8]\n  6312: a0 = a0 + 0xffffffffffffffc0\n  6315: a0 = a1 <u a0\n  6318: a2 = u64 [a3 + 0x10]\n  6321: a0 = 0 if a2 != 0\n  6323: a2 = u64 [a3 + 0xb0]\n  6327: a0 = 0 if a2 != 0\n  6329: jump @185 if a0 != 0\n      : @184 (gas: 1)\n  6332: jump @929\n      : @185 (gas: 16)\n  6335: i32 a0 = a1 + 0x40\n  6338: a1 = u64 [s1 + 0x170]\n  6342: a3 = s1 + 0x7ff\n  6346: a3 = a3 + 0x139\n  6350: a4 = a3 + 0x200\n  6354: u64 [a4 + 0x48] = a1\n  6357: a1 = u64 [s1 + 0x178]\n  6361: u64 [a4 + 0x50] = a1\n  6364: a1 = u64 [s1 + 0x180]\n  6368: u64 [a4 + 0x58] = a1\n  6371: a1 = s1 + 0x7ff\n  6375: a1 = a1 + 0x381\n  6379: a2 = u64 [s1 + 0x188]\n  6383: u64 [a4 + 0x60] = a2\n  6386: u64 [s1 + 0xd0] = a0\n  6390: ra = 162, jump @19\n      : @186 [@dyn 81] (gas: 10)\n  6396: a4 = s1 + 0x100\n  6400: a1 = u64 [a4 + 0x18]\n  6403: a3 = 0x100000000\n  6413: a0 = 0xffffffa0\n  6423: a0 = a1 <u a0\n  6426: a2 = u64 [a4 + 0x10]\n  6429: a0 = 0 if a2 != 0\n  6431: a2 = u64 [a4 + 0xb0]\n  6435: a0 = 0 if a2 != 0\n  6437: jump @188 if a0 != 0\n      : @187 (gas: 1)\n  6440: jump @929\n      : @188 (gas: 18)\n  6443: i32 a0 = a1 + 0x60\n  6446: a1 = u64 [s1 + 0x150]\n  6450: a2 = s1 + 0x7ff\n  6454: a2 = a2 + 0x139\n  6458: u64 [s1 + 0x1b8] = a3\n  6462: a3 = a2\n  6464: a4 = a2 + 0x200\n  6468: u64 [a4 + 0x28] = a1\n  6471: a1 = u64 [s1 + 0x158]\n  6475: u64 [a4 + 0x30] = a1\n  6478: a1 = u64 [s1 + 0x160]\n  6482: u64 [a4 + 0x38] = a1\n  6485: a1 = s1 + 0x7ff\n  6489: a1 = a1 + 0x361\n  6493: a2 = u64 [s1 + 0x168]\n  6497: u64 [a3 + 0x240] = a2\n  6501: u64 [s1 + 0xc0] = a0\n  6505: ra = 164, jump @19\n      : @189 [@dyn 82] (gas: 10)\n  6511: a4 = s1 + 0x100\n  6515: a3 = u64 [a4 + 0xb0]\n  6519: a1 = u64 [a4 + 0x18]\n  6522: a0 = u64 [a4 + 0xb8]\n  6526: a0 = a0 + 0xffffffffffffff80\n  6529: a0 = a1 <u a0\n  6532: a2 = u64 [a4 + 0x10]\n  6535: a0 = 0 if a2 != 0\n  6537: a0 = 0 if a3 != 0\n  6539: jump @191 if a0 != 0\n      : @190 (gas: 1)\n  6542: jump @929\n      : @191 (gas: 16)\n  6545: i32 a0 = a1 + 0x80\n  6549: a1 = u64 [s1 + 0x130]\n  6553: a4 = s1 + 0x7ff\n  6557: a4 = a4 + 0x139\n  6561: a3 = a4 + 0x200\n  6565: u64 [a3 + 0x8] = a1\n  6568: a1 = u64 [s1 + 0x138]\n  6572: u64 [a3 + 0x10] = a1\n  6575: a1 = u64 [s1 + 0x140]\n  6579: u64 [a3 + 0x18] = a1\n  6582: a1 = s1 + 0x7ff\n  6586: a1 = a1 + 0x341\n  6590: a2 = u64 [s1 + 0x148]\n  6594: u64 [a3 + 0x20] = a2\n  6597: u64 [s1 + 0xa8] = a0\n  6601: ra = 166, jump @19\n      : @192 [@dyn 83] (gas: 9)\n  6607: a3 = s1 + 0x100\n  6611: a1 = u64 [a3 + 0x18]\n  6614: a0 = 0xffffff60\n  6624: a0 = a1 <u a0\n  6627: a2 = u64 [a3 + 0x10]\n  6630: a0 = 0 if a2 != 0\n  6632: a2 = u64 [a3 + 0xb0]\n  6636: a0 = 0 if a2 != 0\n  6638: jump @194 if a0 != 0\n      : @193 (gas: 1)\n  6641: jump @929\n      : @194 (gas: 18)\n  6644: a0 = 0xffffffff\n  6654: u64 [s1 + 0xa0] = a0\n  6658: i32 a0 = a1 + 0xa0\n  6662: a1 = u64 [s1 + 0xe0]\n  6666: a3 = s1 + 0x7ff\n  6670: a3 = a3 + 0x139\n  6674: a2 = a3 + 0x100\n  6678: u64 [a2 + 0xe8] = a1\n  6682: a1 = u64 [s1 + 0xe8]\n  6686: u64 [a2 + 0xf0] = a1\n  6690: a1 = u64 [s1 + 0xf0]\n  6694: u64 [a2 + 0xf8] = a1\n  6698: a1 = s1 + 0x7ff\n  6702: a1 = a1 + 0x321\n  6706: a2 = u64 [s1 + 0x128]\n  6710: u64 [a3 + 0x200] = a2\n  6714: u64 [s1 + 0x78] = a0\n  6717: ra = 168, jump @19\n      : @195 [@dyn 84] (gas: 5)\n  6723: a0 = u64 [s1 + 0x108]\n  6727: ra = 0xaa\n  6731: ecalli 3 // 'caller'\n  6733: t0 = 0xac\n  6737: jump @1160\n      : @196 [@dyn 85] (gas: 1)\n  6740: t0 = 172, jump @1160\n      : @197 [@dyn 86] (gas: 9)\n  6746: u64 [a2 + 480] = 0\n  6750: a4 = a2 + 0x100\n  6754: u64 [a4 + 0xd8] = a1\n  6758: u64 [a4 + 0xd0] = a0\n  6762: a1 = s1 + 0x7ff\n  6766: a1 = a1 + 0x301\n  6770: u64 [a4 + 0xc8] = a3\n  6774: a0 = 0\n  6776: ra = 174, jump @19\n      : @198 [@dyn 87] (gas: 11)\n  6782: a0 = s1 + 0x7ff\n  6786: a0 = a0 + 0x139\n  6790: u64 [a0 + 448] = 0\n  6794: u64 [a0 + 440] = 0\n  6798: u64 [a0 + 432] = 0\n  6802: a2 = a0\n  6804: a0 = 0x20\n  6807: a1 = s1 + 0x7ff\n  6811: a1 = a1 + 0x2e1\n  6815: u64 [a2 + 424] = 0\n  6819: ra = 176, jump @19\n      : @199 [@dyn 88] (gas: 7)\n  6825: a0 = sp + 0xffffffffffffffe0\n  6828: a0 = a0 & 0xffffffffffffffe0\n  6831: u64 [s1 + 0x1b8] = a0\n  6835: sp = a0\n  6837: a2 = u64 [s1 + 0x100]\n  6841: a0 = i32 [a2]\n  6843: jump @201 if a0 >u 63\n      : @200 (gas: 2)\n  6847: u32 [a2 + 0] = 0x40\n  6850: fallthrough\n      : @201 (gas: 30)\n  6851: a0 = sp + 0xffffffffffffffe0\n  6854: a0 = a0 & 0xffffffffffffffe0\n  6857: u64 [s1 + 0x1b0] = a0\n  6861: sp = a0\n  6863: i32 a2 = a0 + 0\n  6865: a1 = 0x40\n  6868: a0 = u64 [s1 + 0xf8]\n  6872: ecalli 6 // 'hash_keccak_256'\n  6874: a3 = u64 [s1 + 0x1b0]\n  6878: a0 = u64 [a3 + 0x18]\n  6881: a1 = u64 [a3 + 0x10]\n  6884: a2 = u64 [a3 + 0x8]\n  6887: a3 = u64 [a3]\n  6889: a5 = reverse a0\n  6891: u64 [s1 + 0xb8] = a5\n  6895: a4 = reverse a1\n  6897: u64 [s1 + 0xe0] = a4\n  6901: a1 = reverse a2\n  6903: u64 [s1 + 0xf0] = a1\n  6907: a0 = reverse a3\n  6909: u64 [s1 + 0xe8] = a0\n  6913: a2 = u64 [s1 + 0x1b8]\n  6917: u64 [a2 + 0x18] = a0\n  6920: u64 [a2 + 0x10] = a1\n  6923: u64 [a2 + 0x8] = a4\n  6926: u64 [a2] = a5\n  6928: a0 = s1 + 0x7ff\n  6932: a0 = a0 + 0x2c1\n  6936: a1 = u64 [s1 + 0x118]\n  6940: ra = 178, jump @17\n      : @202 [@dyn 89] (gas: 17)\n  6946: a2 = s1 + 0x7ff\n  6950: a2 = a2 + 0x139\n  6954: a3 = a2 + 0x100\n  6958: a0 = u64 [a3 + 0x88]\n  6962: a1 = u64 [a3 + 0x90]\n  6966: a2 = u64 [a3 + 0x98]\n  6970: a0 = a0 & 0xffffffffffffffff\n  6973: u64 [s1 + 0x1b0] = a0\n  6977: a1 = a1 & 0xffffffffffffffff\n  6980: u64 [s1 + 0x1a0] = a1\n  6984: a0 = u64 [s1 + 0xa0]\n  6988: a0 = a0 & a2\n  6991: u64 [s1 + 0x198] = a0\n  6995: a0 = s1 + 0x7ff\n  6999: a0 = a0 + 0x2a1\n  7003: a1 = u64 [s1 + 0x1b8]\n  7007: ra = 180, jump @21\n      : @203 [@dyn 90] (gas: 18)\n  7013: a1 = s1 + 0x7ff\n  7017: a1 = a1 + 0x139\n  7021: a0 = u32 [a1 + 0x17c]\n  7025: a0 = a0 << 0x20\n  7028: a1 = u64 [a1 + 0x180]\n  7032: a2 = u64 [s1 + 0x198]\n  7036: a0 = a0 | a2\n  7039: a2 = s1 + 0x2138\n  7043: a3 = u64 [s1 + 0x1a0]\n  7047: a4 = a2 + 0x300\n  7051: u64 [a4 + 0xd0] = a3\n  7055: a3 = u64 [s1 + 0x1b0]\n  7059: u64 [a4 + 0xc8] = a3\n  7063: u64 [a4 + 0xe0] = a1\n  7067: u64 [a4 + 0xd8] = a0\n  7071: a1 = s1 + 0x2500\n  7075: a0 = u64 [s1 + 0x1b8]\n  7079: ra = 182, jump @23\n      : @204 [@dyn 91] (gas: 28)\n  7085: a0 = sp + 0xffffffffffffffe0\n  7088: a1 = a0 & 0xffffffffffffffe0\n  7091: sp = a1\n  7093: a2 = u64 [s1 + 0xb8]\n  7097: a2 = a2 + 0x1\n  7100: a0 = a2 <u 0x1\n  7103: a3 = u64 [s1 + 0xe0]\n  7107: a3 = a3 + a0\n  7110: a0 = a2 | a3\n  7113: a0 = a0 <u 0x1\n  7116: a5 = u64 [s1 + 0xf0]\n  7120: a4 = a5 + a0\n  7123: a0 = a4 <u a5\n  7126: a5 = u64 [s1 + 0xe8]\n  7130: a0 = a0 + a5\n  7133: u64 [s1 + 0x168] = a0\n  7137: u64 [a1 + 0x18] = a0\n  7140: u64 [s1 + 0x158] = a4\n  7144: u64 [a1 + 0x10] = a4\n  7147: u64 [s1 + 0x160] = a3\n  7151: u64 [a1 + 0x8] = a3\n  7154: u64 [s1 + 0x98] = a1\n  7158: u64 [s1 + 0x170] = a2\n  7162: u64 [a1] = a2\n  7164: a0 = s1 + 0x7ff\n  7168: a0 = a0 + 0x281\n  7172: a1 = u64 [s1 + 0x1a8]\n  7176: ra = 184, jump @17\n      : @205 [@dyn 92] (gas: 19)\n  7182: a0 = s1 + 0x7ff\n  7186: a0 = a0 + 0x139\n  7190: a5 = a0 + 0x100\n  7194: a3 = u64 [a5 + 0x60]\n  7197: a4 = u64 [a5 + 0x58]\n  7200: a2 = u64 [a5 + 0x50]\n  7203: a1 = u64 [a5 + 0x48]\n  7206: a5 = s1 + 0x100\n  7210: u64 [a5 + 0x50] = a2\n  7213: u64 [a5 + 0x48] = a3\n  7216: a0 = a2 | a3\n  7219: a2 = a1 | a4\n  7222: a2 = a2 | a0\n  7225: a2 = a2 >> 0x20\n  7228: u64 [a5 + 0x40] = a4\n  7231: a0 = a0 | a4\n  7234: a0 = a0 << 0x20\n  7237: a0 = a0 | a2\n  7240: jump @207 if a0 == 0\n      : @206 (gas: 1)\n  7243: jump @929\n      : @207 (gas: 4)\n  7246: a0 = s1 + 0x7ff\n  7250: a0 = a0 + 0x261\n  7254: u64 [s1 + 0x138] = a1\n  7258: ra = 186, jump @17\n      : @208 [@dyn 93] (gas: 19)\n  7264: a2 = s1 + 0x7ff\n  7268: a2 = a2 + 0x139\n  7272: a0 = a2 + 0x100\n  7276: a4 = u64 [a0 + 0x40]\n  7279: a1 = u64 [a0 + 0x38]\n  7282: a3 = u64 [a0 + 0x30]\n  7285: a0 = a4 >u 0\n  7287: a5 = a1 >u 0\n  7289: a5 = a0 if a4 != 0\n  7292: u64 [s1 + 0x130] = a3\n  7296: a0 = a3 >u 0\n  7298: u64 [s1 + 0x90] = a1\n  7302: u64 [s1 + 0x128] = a4\n  7306: a1 = a1 | a4\n  7309: u64 [s1 + 0x68] = a0\n  7312: u64 [s1 + 0x70] = a5\n  7315: u64 [s1 + 0x88] = a1\n  7319: a0 = a5 if a1 != 0\n  7322: jump @210 if a0 == 0\n      : @209 (gas: 1)\n  7325: jump @952\n      : @210 (gas: 6)\n  7328: a0 = u64 [a2 + 0x128]\n  7332: u64 [s1 + 0xb0] = a0\n  7336: a0 = s1 + 0x7ff\n  7340: a0 = a0 + 0x241\n  7344: a1 = u64 [s1 + 0x98]\n  7348: ra = 188, jump @21\n      : @211 [@dyn 94] (gas: 16)\n  7354: a4 = s1 + 0x7ff\n  7358: a4 = a4 + 0x139\n  7362: a5 = a4 + 0x100\n  7366: a2 = u64 [a5 + 0x8]\n  7369: a0 = u64 [a5 + 0x10]\n  7372: a1 = u64 [a5 + 0x18]\n  7375: a3 = u64 [a5 + 0x20]\n  7378: u64 [a4 + 0xe0] = a3\n  7382: u64 [a4 + 0xd8] = a1\n  7386: u64 [a4 + 0xd0] = a0\n  7390: a0 = s1 + 0x7ff\n  7394: a0 = a0 + 0x221\n  7398: a1 = s1 + 0x7ff\n  7402: a1 = a1 + 0x201\n  7406: u64 [a4 + 0xc8] = a2\n  7410: ra = 190, jump @1120\n      : @212 [@dyn 95] (gas: 19)\n  7416: a0 = s1 + 0x7ff\n  7420: a0 = a0 + 0x139\n  7424: a3 = u64 [a0 + 0x100]\n  7428: a4 = u64 [a0 + 0xf8]\n  7432: a5 = u64 [a0 + 0xf0]\n  7436: t0 = u64 [a0 + 0xe8]\n  7440: a0 = a3 >u 0\n  7442: a1 = a4 >u 0\n  7444: a1 = a0 if a3 != 0\n  7447: a0 = a5 >u 0\n  7449: a2 = t0 <u 0x20\n  7452: a2 = a2 ^ 0x1\n  7455: a2 = a0 if a5 != 0\n  7458: a0 = a4 | a3\n  7461: a2 = a1 if a0 != 0\n  7464: a0 = u64 [s1 + 0xb0]\n  7468: a0 = a0 <u 0x20\n  7471: u64 [s1 + 0x80] = a0\n  7475: jump @214 if a2 != 0\n      : @213 (gas: 1)\n  7478: jump @582\n      : @214 (gas: 18)\n  7481: u64 [s1 + 0x190] = t0\n  7485: u64 [s1 + 0x198] = a5\n  7489: u64 [s1 + 0x1b0] = a4\n  7493: u64 [s1 + 0x1a0] = a3\n  7497: a0 = s1 + 0x7ff\n  7501: a0 = a0 + 0x139\n  7505: a1 = u64 [s1 + 0x170]\n  7509: u64 [a0 + 0xa8] = a1\n  7513: a1 = u64 [s1 + 0x160]\n  7517: u64 [a0 + 0xb0] = a1\n  7521: a1 = u64 [s1 + 0x158]\n  7525: u64 [a0 + 0xb8] = a1\n  7529: a1 = s1 + 0x7ff\n  7533: a1 = a1 + 0x1e1\n  7537: a2 = u64 [s1 + 0x168]\n  7541: u64 [a0 + 0xc0] = a2\n  7545: a0 = 0\n  7547: ra = 192, jump @19\n      : @215 [@dyn 96] (gas: 3)\n  7553: a2 = u64 [s1 + 0x100]\n  7557: a0 = i32 [a2]\n  7559: jump @217 if a0 >u 31\n      : @216 (gas: 2)\n  7563: u32 [a2 + 0] = 0x20\n  7566: fallthrough\n      : @217 (gas: 10)\n  7567: a0 = sp + 0xffffffffffffffe0\n  7570: a0 = a0 & 0xffffffffffffffe0\n  7573: u64 [s1 + 0x1a8] = a0\n  7577: sp = a0\n  7579: i32 a2 = a0 + 0\n  7581: a1 = 0x20\n  7584: a0 = u64 [s1 + 0xf8]\n  7588: ra = 0xc2\n  7592: ecalli 6 // 'hash_keccak_256'\n  7594: fallthrough\n      : @218 [@dyn 97] (gas: 15)\n  7595: a0 = u64 [s1 + 0xb0]\n  7599: a1 = a0 + 0x1f\n  7602: a0 = a1 <u a0\n  7605: a5 = u64 [s1 + 0x130]\n  7609: a2 = a5 + a0\n  7612: a3 = a2 <u a5\n  7615: a3 = a0 if a0 == 0\n  7618: a4 = u64 [s1 + 0x90]\n  7622: a3 = a3 + a4\n  7625: u64 [s1 + 0x188] = a3\n  7629: a3 = a3 << 0x3b\n  7632: a4 = a2 >> 0x5\n  7635: a4 = a4 | a3\n  7638: a0 = u64 [s1 + 0x1a8]\n  7642: t0 = 196, jump @1166\n      : @219 [@dyn 98] (gas: 4)\n  7648: a1 = u64 [s1 + 0x80]\n  7652: a1 = 0 if a5 != 0\n  7654: a3 = u64 [s1 + 0x88]\n  7658: t0 = 198, jump @1186\n      : @220 [@dyn 99] (gas: 29)\n  7664: t0 = t2 + a0\n  7667: a0 = t0 <u t2\n  7670: a5 = a2 + a0\n  7673: a4 = a4 + a5\n  7676: u64 [s1 + 0x1b8] = a4\n  7680: a5 = a4 ^ a2\n  7683: a3 = a4 <u a2\n  7686: a3 = a0 if a5 == 0\n  7689: u64 [s1 + 0x180] = a3\n  7693: a0 = u64 [s1 + 0x190]\n  7697: ra = a0 + 0x1f\n  7700: a4 = ra <u a0\n  7703: a3 = u64 [s1 + 0x198]\n  7707: a0 = a3 + a4\n  7710: a5 = a0 <u a3\n  7713: a5 = a4 if a4 == 0\n  7716: t1 = u64 [s1 + 0x1b0]\n  7720: t1 = t1 + a5\n  7723: a4 = t1 << 0x3b\n  7726: a3 = a0 >> 0x5\n  7729: a3 = a3 | a4\n  7732: a0 = a0 << 0x3b\n  7735: a4 = ra >> 0x5\n  7738: a0 = a0 | a4\n  7741: a0 = a0 + t2\n  7744: u64 [s1 + 0x198] = a0\n  7748: a0 = a0 <u t2\n  7751: t2 = t0\n  7753: t0 = 200, jump @1176\n      : @221 [@dyn 100] (gas: 4)\n  7759: a0 = u64 [s1 + 0x90]\n  7763: a0 = a4 <u a0\n  7766: a3 = u64 [s1 + 0x128]\n  7770: t0 = 202, jump @1178\n      : @222 [@dyn 101] (gas: 8)\n  7776: t0 = u64 [a4]\n  7778: a4 = u64 [a4 + 0x8]\n  7781: a0 = a0 >> 0x5\n  7784: a3 = 0 if a1 != 0\n  7786: a0 = 0 if a1 != 0\n  7788: a1 = reverse a4\n  7790: a4 = reverse t0\n  7792: t0 = 204, jump @1167\n      : @223 [@dyn 102] (gas: 25)\n  7798: t0 = a0 + a3\n  7801: a0 = u64 [s1 + 0x1b0]\n  7805: a0 = t1 <u a0\n  7808: a3 = u64 [s1 + 0x1a0]\n  7812: a0 = a0 + a3\n  7815: a3 = t1 >> 0x5\n  7818: a5 = a0 << 0x3b\n  7821: a3 = a3 | a5\n  7824: a0 = a0 >> 0x5\n  7827: a0 = a0 + a4\n  7830: a5 = s1 + 0x100\n  7834: a4 = u64 [a5 + 0xb8]\n  7838: a3 = a3 + a1\n  7841: a1 = a3 <u a1\n  7844: a0 = a0 + a1\n  7847: a2 = a2 + a3\n  7850: u64 [a5 + 0x88] = a2\n  7854: a1 = a2 <u a3\n  7857: a0 = a0 + a1\n  7860: u64 [a5 + 0x80] = a0\n  7864: a0 = sp + 0xffffffffffffffe0\n  7867: t1 = a0 & 0xffffffffffffffe0\n  7870: sp = t1\n  7872: u64 [s1 + 0x178] = t1\n  7876: fallthrough\n      : @224 (gas: 20)\n  7877: a0 = u64 [s1 + 0x198]\n  7881: a0 = t2 <u a0\n  7884: a2 = u64 [s1 + 0x190]\n  7888: a1 = a4 ^ a2\n  7891: a2 = a4 <u a2\n  7894: a2 = a0 if a1 == 0\n  7897: a5 = u64 [s1 + 0x188]\n  7901: a0 = ra <u a5\n  7904: a3 = u64 [s1 + 0x180]\n  7908: a1 = t0 ^ a3\n  7911: a3 = t0 <u a3\n  7914: a3 = a0 if a1 == 0\n  7917: a0 = ra ^ a5\n  7920: a0 = a0 | a1\n  7923: a3 = a2 if a0 == 0\n  7926: u64 [t1] = t2\n  7928: u64 [t1 + 0x8] = a4\n  7931: u64 [t1 + 0x10] = ra\n  7934: u64 [t1 + 0x18] = t0\n  7937: jump @226 if a3 != 0\n      : @225 (gas: 1)\n  7940: jump @582\n      : @226 (gas: 12)\n  7943: a0 = s1 + 0x2138\n  7947: u64 [a0 + 1024] = 0\n  7951: u64 [a0 + 1016] = 0\n  7955: u64 [a0 + 1008] = 0\n  7959: u64 [a0 + 1000] = 0\n  7963: a1 = s1 + 0x2520\n  7967: a0 = t1\n  7969: u64 [s1 + 0x1b0] = t2\n  7973: u64 [s1 + 0x1b8] = a4\n  7977: u64 [s1 + 0x1a8] = t0\n  7981: u64 [s1 + 0x1a0] = ra\n  7985: ra = 206, jump @23\n      : @227 [@dyn 103] (gas: 15)\n  7991: t1 = u64 [s1 + 0x178]\n  7995: t0 = u64 [s1 + 0x1a8]\n  7999: a4 = u64 [s1 + 0x1b8]\n  8003: t2 = u64 [s1 + 0x1b0]\n  8007: t2 = t2 + 0x1\n  8010: a0 = t2 <u 0x1\n  8013: a4 = a4 + a0\n  8016: a0 = t2 | a4\n  8019: a0 = a0 <u 0x1\n  8022: a1 = u64 [s1 + 0x1a0]\n  8026: a0 = a0 + a1\n  8029: a1 = a0 <u a1\n  8032: t0 = t0 + a1\n  8035: ra = a0\n  8037: jump @224\n      : @228 (gas: 9)\n  8040: a0 = s1 + 0x2938\n  8044: u64 [a0 + 608] = 0\n  8048: u64 [a0 + 600] = 0\n  8052: u64 [a0 + 592] = 0\n  8056: u64 [a0 + 584] = 0\n  8060: a0 = s1 + 0x3000\n  8064: i32 a0 = a0 + 0xfffffffffffffb80\n  8068: ecalli 10 // 'value_transferred'\n  8070: fallthrough\n      : @229 (gas: 10)\n  8071: a3 = s1 + 0x2938\n  8075: a4 = a3 + 0x200\n  8079: a0 = u64 [a4 + 0x58]\n  8082: a1 = u64 [a4 + 0x60]\n  8085: a2 = u64 [a4 + 0x50]\n  8088: a3 = u64 [a4 + 0x48]\n  8091: a1 = a1 | a2\n  8094: a0 = a0 | a3\n  8097: a0 = a0 | a1\n  8100: jump @231 if a0 == 0\n      : @230 (gas: 1)\n  8103: jump @940\n      : @231 (gas: 3)\n  8106: a0 = u64 [s1 + 0x1b8]\n  8110: a0 = i32 [a0]\n  8112: jump @233 if a0 >u 35\n      : @232 (gas: 1)\n  8116: jump @941\n      : @233 (gas: 5)\n  8119: a0 = s1 + 0x3000\n  8123: i32 a0 = a0 + 0xfffffffffffffba0\n  8127: a1 = 0x4\n  8130: ecalli 1 // 'call_data_load'\n  8132: fallthrough\n      : @234 (gas: 11)\n  8133: a4 = s1 + 0x2938\n  8137: a1 = u64 [a4 + 0x278]\n  8141: a0 = u64 [a4 + 0x280]\n  8145: a2 = 0x100000000\n  8155: a2 = a2 ^ a1\n  8158: a2 = a2 | a0\n  8161: a3 = a1 >> 0x20\n  8164: a3 = a3 <u 0x1\n  8167: a3 = 0 if a0 != 0\n  8169: a3 = 0 if a2 == 0\n  8171: jump @236 if a3 != 0\n      : @235 (gas: 1)\n  8174: jump @942\n      : @236 (gas: 11)\n  8177: a2 = u64 [a4 + 0x270]\n  8181: a3 = u64 [a4 + 0x268]\n  8185: a4 = s1 + 0x2138\n  8189: a5 = a4 + 0x200\n  8193: u64 [a5 + 0xc8] = a3\n  8197: u64 [a5 + 0xd0] = a2\n  8201: u64 [a5 + 0xd8] = a1\n  8205: a1 = s1 + 0x2400\n  8209: u64 [a5 + 0xe0] = a0\n  8213: a0 = 0\n  8215: ra = 208, jump @19\n      : @237 [@dyn 104] (gas: 9)\n  8221: a0 = s1 + 0x2138\n  8225: u64 [a0 + 704] = 0\n  8229: u64 [a0 + 696] = 0\n  8233: u64 [a0 + 688] = 0\n  8237: a2 = a0\n  8239: a0 = 0x20\n  8242: a1 = s1 + 0x23e0\n  8246: u64 [a2 + 680] = 0\n  8250: ra = 210, jump @19\n      : @238 [@dyn 105] (gas: 6)\n  8256: a0 = sp + 0xffffffffffffffe0\n  8259: a0 = a0 & 0xffffffffffffffe0\n  8262: u64 [s1 + 0x198] = a0\n  8266: sp = a0\n  8268: a1 = i32 [0x2005c]\n  8273: jump @240 if a1 >u 63\n      : @239 (gas: 4)\n  8277: a1 = 0x40\n  8280: u32 [0x2005c] = a1\n  8285: t0 = 0xd4\n  8289: jump @1197\n      : @240 (gas: 1)\n  8292: t0 = 212, jump @1197\n      : @241 [@dyn 106] (gas: 25)\n  8298: a0 = 0x20070\n  8303: i32 a0 = a0 + 0\n  8305: i32 a2 = a2 + 0\n  8307: a1 = 0x40\n  8310: ecalli 6 // 'hash_keccak_256'\n  8312: a3 = u64 [s1 + 0x1b8]\n  8316: a0 = u64 [a3 + 0x18]\n  8319: a1 = u64 [a3 + 0x10]\n  8322: a2 = u64 [a3 + 0x8]\n  8325: a3 = u64 [a3]\n  8327: a4 = reverse a0\n  8329: u64 [s1 + 0x1a8] = a4\n  8333: a5 = reverse a1\n  8335: u64 [s1 + 0x1b0] = a5\n  8339: a2 = reverse a2\n  8341: u64 [s1 + 0x1a0] = a2\n  8345: a0 = reverse a3\n  8347: u64 [s1 + 0x1b8] = a0\n  8351: a1 = u64 [s1 + 0x198]\n  8355: u64 [a1 + 0x18] = a0\n  8358: u64 [a1 + 0x10] = a2\n  8361: u64 [a1 + 0x8] = a5\n  8364: u64 [a1] = a4\n  8366: a0 = s1 + 0x23c0\n  8370: ra = 214, jump @21\n      : @242 [@dyn 107] (gas: 3)\n  8376: t0 = 0xd8\n  8380: a1 = s1 + 0x2138\n  8384: fallthrough\n      : @243 [@dyn 108] (gas: 10)\n  8385: a2 = a1 + 0x200\n  8389: a0 = u64 [a2 + 0x98]\n  8393: u64 [s1 + 0x110] = a0\n  8397: a0 = u64 [a2 + 0x90]\n  8401: u64 [s1 + 0x120] = a0\n  8405: a0 = u64 [a2 + 0x88]\n  8409: u64 [s1 + 0x118] = a0\n  8413: a0 = s1 + 0x23a0\n  8417: a1 = 0x40\n  8420: ra = 218, jump @17\n      : @244 [@dyn 109] (gas: 34)\n  8426: a4 = s1 + 0x2138\n  8430: t0 = u64 [a4 + 0x280]\n  8434: u64 [s1 + 0x180] = t0\n  8438: t2 = u64 [a4 + 0x278]\n  8442: u64 [s1 + 0x188] = t2\n  8446: ra = u64 [a4 + 0x270]\n  8450: u64 [s1 + 0x190] = ra\n  8454: t1 = u64 [a4 + 0x268]\n  8458: u64 [s1 + 0x198] = t1\n  8462: a3 = u64 [s1 + 0x1a8]\n  8466: a3 = a3 + 0x1\n  8469: a0 = a3 <u 0x1\n  8472: a1 = u64 [s1 + 0x1b0]\n  8476: a0 = a0 + a1\n  8479: a1 = a3 | a0\n  8482: a1 = a1 <u 0x1\n  8485: a2 = u64 [s1 + 0x1a0]\n  8489: a1 = a1 + a2\n  8492: a2 = a1 <u a2\n  8495: a5 = u64 [s1 + 0x1b8]\n  8499: a2 = a2 + a5\n  8502: u64 [a4 + 0x220] = t0\n  8506: u64 [a4 + 0x218] = t2\n  8510: u64 [a4 + 0x210] = ra\n  8514: u64 [a4 + 0x208] = t1\n  8518: a5 = a4 + 0x200\n  8522: u64 [a5 + 0x40] = a2\n  8525: u64 [a5 + 0x38] = a1\n  8528: u64 [a5 + 0x30] = a0\n  8531: a0 = s1 + 0x2380\n  8535: a1 = s1 + 0x2360\n  8539: a2 = s1 + 0x2340\n  8543: u64 [a5 + 0x28] = a3\n  8546: ra = 220, jump @1129\n      : @245 [@dyn 110] (gas: 44)\n  8552: a1 = s1 + 0x2138\n  8556: a4 = a1 + 0x200\n  8560: a0 = u64 [a4 + 0x50]\n  8563: a2 = u64 [a4 + 0x60]\n  8566: u64 [s1 + 0x178] = a2\n  8570: a2 = u64 [a4 + 0x48]\n  8573: u64 [s1 + 0x170] = a2\n  8577: a3 = u64 [a4 + 0x58]\n  8580: a1 = u64 [s1 + 0x190]\n  8584: a4 = a0 ^ a1\n  8587: a5 = a0 <u a1\n  8590: t1 = u64 [s1 + 0x198]\n  8594: t2 = a2 <u t1\n  8597: a5 = t2 if a4 == 0\n  8600: a2 = u64 [s1 + 0x188]\n  8604: a4 = a3 - a2\n  8607: a3 = a3 <u a2\n  8610: ra = a2\n  8612: t0 = u64 [s1 + 0x180]\n  8616: a2 = u64 [s1 + 0x178]\n  8620: a2 = a2 - t0\n  8623: a2 = a2 - a3\n  8626: a3 = a4 <u a5\n  8629: a2 = a2 - a3\n  8632: u64 [s1 + 0x178] = a2\n  8636: a4 = a4 - a5\n  8639: a0 = a0 - a1\n  8642: a0 = a0 - t2\n  8645: a2 = u64 [s1 + 0x170]\n  8649: a2 = a2 - t1\n  8652: a3 = s1 + 0x2138\n  8656: a5 = a3 + 0x100\n  8660: u64 [a5 + 0xc8] = a2\n  8664: u64 [a3 + 0x200] = t0\n  8668: u64 [a3 + 0x1f8] = ra\n  8672: u64 [a5 + 0xf0] = a1\n  8676: u64 [a3 + 0x1e8] = t1\n  8680: u64 [a5 + 0xd0] = a0\n  8684: u64 [a5 + 0xd8] = a4\n  8688: a0 = s1 + 0x2320\n  8692: a1 = s1 + 0x2300\n  8696: a2 = u64 [s1 + 0x178]\n  8700: u64 [a5 + 0xe0] = a2\n  8704: ra = 222, jump @1004\n      : @246 [@dyn 111] (gas: 3)\n  8710: a1 = u64 [s1 + 0x1a8]\n  8714: a0 = a1 + 0x2\n  8717: t0 = 224, jump @1194\n      : @247 [@dyn 112] (gas: 11)\n  8723: a4 = u64 [s1 + 0x1b8]\n  8727: a1 = a1 + a4\n  8730: a4 = s1 + 0x2938\n  8734: a5 = a4 + 0x200\n  8738: u64 [a5 + 0xa0] = a1\n  8742: u64 [a5 + 0x98] = a3\n  8746: u64 [a5 + 0x90] = a2\n  8750: u64 [a5 + 0x88] = a0\n  8754: a0 = s1 + 0x22e0\n  8758: a1 = s1 + 0x2bc0\n  8762: ra = 226, jump @21\n      : @248 [@dyn 113] (gas: 3)\n  8768: t0 = 0xe4\n  8772: a1 = s1 + 0x2138\n  8776: fallthrough\n      : @249 [@dyn 114] (gas: 12)\n  8777: a2 = a1 + 0x100\n  8781: a0 = u64 [a2 + 0xc0]\n  8785: u64 [s1 + 0x100] = a0\n  8789: a0 = u64 [a2 + 0xb8]\n  8793: u64 [s1 + 0xf8] = a0\n  8797: a0 = u64 [a2 + 0xb0]\n  8801: u64 [s1 + 0xf0] = a0\n  8805: a0 = u64 [a2 + 0xa8]\n  8809: u64 [s1 + 0xe8] = a0\n  8813: a0 = s1 + 0x22c0\n  8817: a1 = 0x40\n  8820: ra = 230, jump @17\n      : @250 [@dyn 115] (gas: 34)\n  8826: a5 = s1 + 0x2138\n  8830: a3 = u64 [a5 + 0x1a0]\n  8834: u64 [s1 + 0x160] = a3\n  8838: t2 = u64 [a5 + 0x198]\n  8842: u64 [s1 + 0x168] = t2\n  8846: ra = u64 [a5 + 0x190]\n  8850: u64 [s1 + 0x170] = ra\n  8854: t1 = u64 [a5 + 0x188]\n  8858: u64 [s1 + 0x178] = t1\n  8862: a0 = u64 [s1 + 0x1a8]\n  8866: t0 = a0 + 0x3\n  8869: a0 = t0 <u a0\n  8872: a2 = u64 [s1 + 0x1b0]\n  8876: a1 = a2 + a0\n  8879: a2 = a1 <u a2\n  8882: a2 = a0 if a0 == 0\n  8885: a0 = u64 [s1 + 0x1a0]\n  8889: a2 = a2 + a0\n  8892: a0 = a2 <u a0\n  8895: a4 = u64 [s1 + 0x1b8]\n  8899: a0 = a0 + a4\n  8902: a4 = a5 + 0x100\n  8906: u64 [a4 + 0x40] = a3\n  8909: u64 [a5 + 0x138] = t2\n  8913: u64 [a5 + 0x130] = ra\n  8917: u64 [a5 + 0x128] = t1\n  8921: u64 [a4 + 0x60] = a0\n  8924: u64 [a4 + 0x58] = a2\n  8927: u64 [a4 + 0x50] = a1\n  8930: a0 = s1 + 0x22a0\n  8934: a1 = s1 + 0x2280\n  8938: a2 = s1 + 0x2260\n  8942: u64 [a5 + 0x148] = t0\n  8946: ra = 232, jump @1129\n      : @251 [@dyn 116] (gas: 44)\n  8952: a1 = s1 + 0x2138\n  8956: a4 = a1 + 0x100\n  8960: a0 = u64 [a4 + 0x70]\n  8963: a2 = u64 [a4 + 0x80]\n  8967: u64 [s1 + 0x158] = a2\n  8971: a2 = u64 [a4 + 0x68]\n  8974: u64 [s1 + 0x150] = a2\n  8978: a3 = u64 [a4 + 0x78]\n  8981: a1 = u64 [s1 + 0x170]\n  8985: a4 = a0 ^ a1\n  8988: a5 = a0 <u a1\n  8991: t1 = u64 [s1 + 0x178]\n  8995: t2 = a2 <u t1\n  8998: a5 = t2 if a4 == 0\n  9001: a2 = u64 [s1 + 0x168]\n  9005: a4 = a3 - a2\n  9008: a3 = a3 <u a2\n  9011: ra = a2\n  9013: t0 = u64 [s1 + 0x160]\n  9017: a2 = u64 [s1 + 0x158]\n  9021: a2 = a2 - t0\n  9024: a2 = a2 - a3\n  9027: a3 = a4 <u a5\n  9030: a2 = a2 - a3\n  9033: u64 [s1 + 0x158] = a2\n  9037: a4 = a4 - a5\n  9040: a0 = a0 - a1\n  9043: a0 = a0 - t2\n  9046: a5 = u64 [s1 + 0x150]\n  9050: a5 = a5 - t1\n  9053: a2 = s1 + 0x2138\n  9057: u64 [a2 + 0xe8] = a5\n  9061: u64 [a2 + 0x120] = t0\n  9065: u64 [a2 + 0x118] = ra\n  9069: u64 [a2 + 0x110] = a1\n  9073: u64 [a2 + 0x108] = t1\n  9077: u64 [a2 + 0xf0] = a0\n  9081: u64 [a2 + 0xf8] = a4\n  9085: a3 = a2\n  9087: a0 = s1 + 0x2240\n  9091: a1 = s1 + 0x2220\n  9095: a2 = u64 [s1 + 0x158]\n  9099: u64 [a3 + 0x100] = a2\n  9103: ra = 234, jump @1004\n      : @252 [@dyn 117] (gas: 3)\n  9109: a0 = s1 + 0x2200\n  9113: a1 = 0x40\n  9116: ra = 236, jump @17\n      : @253 [@dyn 118] (gas: 33)\n  9122: a5 = s1 + 0x2138\n  9126: a3 = u64 [a5 + 0xe0]\n  9130: u64 [s1 + 0x140] = a3\n  9134: t2 = u64 [a5 + 0xd8]\n  9138: u64 [s1 + 0x148] = t2\n  9142: ra = u64 [a5 + 0xd0]\n  9146: u64 [s1 + 0x150] = ra\n  9150: t1 = u64 [a5 + 0xc8]\n  9154: u64 [s1 + 0x158] = t1\n  9158: a0 = u64 [s1 + 0x1a8]\n  9162: t0 = a0 + 0x4\n  9165: a0 = t0 <u a0\n  9168: a2 = u64 [s1 + 0x1b0]\n  9172: a1 = a2 + a0\n  9175: a2 = a1 <u a2\n  9178: a2 = a0 if a0 == 0\n  9181: a0 = u64 [s1 + 0x1a0]\n  9185: a2 = a2 + a0\n  9188: a0 = a2 <u a0\n  9191: a4 = u64 [s1 + 0x1b8]\n  9195: a0 = a0 + a4\n  9198: u64 [a5 + 0x80] = a3\n  9202: u64 [a5 + 0x78] = t2\n  9205: u64 [a5 + 0x70] = ra\n  9208: u64 [a5 + 0x68] = t1\n  9211: u64 [a5 + 0xa0] = a0\n  9215: u64 [a5 + 0x98] = a2\n  9219: u64 [a5 + 0x90] = a1\n  9223: a0 = s1 + 0x21e0\n  9227: a1 = s1 + 0x21c0\n  9231: a2 = s1 + 0x21a0\n  9235: u64 [a5 + 0x88] = t0\n  9239: ra = 238, jump @1129\n      : @254 [@dyn 119] (gas: 42)\n  9245: a1 = s1 + 0x2138\n  9249: a0 = u64 [a1 + 0xb0]\n  9253: a2 = u64 [a1 + 0xc0]\n  9257: u64 [s1 + 0x138] = a2\n  9261: a2 = u64 [a1 + 0xa8]\n  9265: u64 [s1 + 0x130] = a2\n  9269: a3 = u64 [a1 + 0xb8]\n  9273: a1 = u64 [s1 + 0x150]\n  9277: a4 = a0 ^ a1\n  9280: a5 = a0 <u a1\n  9283: t1 = u64 [s1 + 0x158]\n  9287: t2 = a2 <u t1\n  9290: a5 = t2 if a4 == 0\n  9293: a2 = u64 [s1 + 0x148]\n  9297: a4 = a3 - a2\n  9300: a3 = a3 <u a2\n  9303: ra = a2\n  9305: t0 = u64 [s1 + 0x140]\n  9309: a2 = u64 [s1 + 0x138]\n  9313: a2 = a2 - t0\n  9316: a2 = a2 - a3\n  9319: a3 = a4 <u a5\n  9322: a2 = a2 - a3\n  9325: u64 [s1 + 0x138] = a2\n  9329: a4 = a4 - a5\n  9332: a0 = a0 - a1\n  9335: a0 = a0 - t2\n  9338: a2 = u64 [s1 + 0x130]\n  9342: a2 = a2 - t1\n  9345: a3 = s1 + 0x2138\n  9349: u64 [a3 + 0x28] = a2\n  9352: u64 [a3 + 0x60] = t0\n  9355: u64 [a3 + 0x58] = ra\n  9358: u64 [a3 + 0x50] = a1\n  9361: u64 [a3 + 0x48] = t1\n  9364: u64 [a3 + 0x30] = a0\n  9367: u64 [a3 + 0x38] = a4\n  9370: a0 = s1 + 0x2180\n  9374: a1 = s1 + 0x2160\n  9378: a2 = u64 [s1 + 0x138]\n  9382: u64 [a3 + 0x40] = a2\n  9385: ra = 240, jump @1004\n      : @255 [@dyn 120] (gas: 3)\n  9391: a0 = s1 + 0x2140\n  9395: a1 = 0x40\n  9398: ra = 242, jump @17\n      : @256 [@dyn 121] (gas: 36)\n  9404: a0 = s1 + 0x2138\n  9408: a5 = u64 [a0 + 0x20]\n  9411: u64 [s1 + 0x128] = a5\n  9415: t1 = u64 [a0 + 0x18]\n  9418: u64 [s1 + 0x130] = t1\n  9422: t2 = u64 [a0 + 0x10]\n  9425: u64 [s1 + 0x138] = t2\n  9429: a3 = a0\n  9431: a0 = u64 [s1 + 0x1a8]\n  9435: t0 = a0 + 0x5\n  9438: a0 = t0 <u a0\n  9441: a2 = u64 [s1 + 0x1b0]\n  9445: a1 = a2 + a0\n  9448: a2 = a1 <u a2\n  9451: a2 = a0 if a0 == 0\n  9454: a3 = u64 [a3 + 0x8]\n  9457: u64 [s1 + 0x1a8] = a3\n  9461: a0 = u64 [s1 + 0x1a0]\n  9465: a2 = a2 + a0\n  9468: a0 = a2 <u a0\n  9471: a4 = u64 [s1 + 0x1b8]\n  9475: a0 = a0 + a4\n  9478: a4 = s1 + 0x1938\n  9482: u64 [a4 + 0x7c0] = a5\n  9486: u64 [a4 + 0x7b8] = t1\n  9490: u64 [a4 + 0x7b0] = t2\n  9494: a5 = a4 + 0x700\n  9498: u64 [a5 + 0xa8] = a3\n  9502: u64 [a5 + 0xe0] = a0\n  9506: u64 [a5 + 0xd8] = a2\n  9510: u64 [a5 + 0xd0] = a1\n  9514: a0 = s1 + 0x2120\n  9518: a1 = s1 + 0x2100\n  9522: a2 = s1 + 0x20e0\n  9526: u64 [a4 + 0x7c8] = t0\n  9530: ra = 244, jump @1129\n      : @257 [@dyn 122] (gas: 44)\n  9536: a1 = s1 + 0x2138\n  9540: a4 = a1 + 0xffffffffffffff00\n  9544: a0 = u64 [a4 + 0xf0]\n  9548: a2 = u64 [a1]\n  9550: u64 [s1 + 0x1b8] = a2\n  9554: a2 = u64 [a4 + 0xe8]\n  9558: u64 [s1 + 0x1b0] = a2\n  9562: a3 = u64 [a4 + 0xf8]\n  9566: a1 = u64 [s1 + 0x138]\n  9570: a4 = a0 ^ a1\n  9573: a5 = a0 <u a1\n  9576: t1 = u64 [s1 + 0x1a8]\n  9580: t2 = a2 <u t1\n  9583: a5 = t2 if a4 == 0\n  9586: a2 = u64 [s1 + 0x130]\n  9590: a4 = a3 - a2\n  9593: a3 = a3 <u a2\n  9596: ra = a2\n  9598: t0 = u64 [s1 + 0x128]\n  9602: a2 = u64 [s1 + 0x1b8]\n  9606: a2 = a2 - t0\n  9609: a2 = a2 - a3\n  9612: a3 = a4 <u a5\n  9615: a2 = a2 - a3\n  9618: u64 [s1 + 0x1b8] = a2\n  9622: a4 = a4 - a5\n  9625: a0 = a0 - a1\n  9628: a0 = a0 - t2\n  9631: a5 = u64 [s1 + 0x1b0]\n  9635: a5 = a5 - t1\n  9638: a3 = s1 + 0x1938\n  9642: u64 [a3 + 0x768] = a5\n  9646: u64 [a3 + 0x7a0] = t0\n  9650: u64 [a3 + 0x798] = ra\n  9654: a5 = a3 + 0x700\n  9658: u64 [a5 + 0x90] = a1\n  9662: u64 [a3 + 0x788] = t1\n  9666: u64 [a5 + 0x70] = a0\n  9669: u64 [a5 + 0x78] = a4\n  9672: a0 = s1 + 0x20c0\n  9676: a1 = s1 + 0x20a0\n  9680: a2 = u64 [s1 + 0x1b8]\n  9684: u64 [a5 + 0x80] = a2\n  9688: ra = 246, jump @1004\n      : @258 [@dyn 123] (gas: 3)\n  9694: a0 = s1 + 0x2080\n  9698: a1 = 0x40\n  9701: ra = 248, jump @17\n      : @259 [@dyn 124] (gas: 15)\n  9707: a2 = s1 + 0x1938\n  9711: a1 = a2 + 0x700\n  9715: a4 = u64 [a1 + 0x60]\n  9718: a5 = u64 [a1 + 0x58]\n  9721: a0 = u64 [a1 + 0x50]\n  9724: a3 = u64 [a1 + 0x48]\n  9727: u64 [s1 + 0x1b8] = a0\n  9731: a0 = a0 | a4\n  9734: a1 = a3 | a5\n  9737: a1 = a1 | a0\n  9740: a1 = a1 >> 0x20\n  9743: a0 = a0 | a5\n  9746: a0 = a0 << 0x20\n  9749: a0 = a0 | a1\n  9752: jump @261 if a0 == 0\n      : @260 (gas: 1)\n  9755: jump @929\n      : @261 (gas: 15)\n  9758: a0 = u64 [s1 + 0x110]\n  9762: a0 = a0 << 0x20\n  9765: a0 = a0 >> 0x20\n  9768: u64 [a2 + 1856] = 0\n  9772: a1 = u64 [s1 + 0x118]\n  9776: u64 [a2 + 0x728] = a1\n  9780: a1 = u64 [s1 + 0x120]\n  9784: u64 [a2 + 0x730] = a1\n  9788: a1 = s1 + 0x2060\n  9792: u64 [a2 + 0x738] = a0\n  9796: a0 = a3\n  9798: u64 [s1 + 0x1b0] = a3\n  9802: u64 [s1 + 0x1a0] = a4\n  9806: u64 [s1 + 0x108] = a5\n  9810: ra = 250, jump @19\n      : @262 [@dyn 125] (gas: 11)\n  9816: t0 = u64 [s1 + 0x108]\n  9820: a3 = u64 [s1 + 0x1a0]\n  9824: a1 = u64 [s1 + 0x1b0]\n  9828: a5 = t0 | a3\n  9831: a4 = 0x100000000\n  9841: a0 = 0xffffffe0\n  9851: a0 = a1 <u a0\n  9854: a2 = u64 [s1 + 0x1b8]\n  9858: a0 = 0 if a2 != 0\n  9860: a0 = 0 if a5 != 0\n  9862: jump @264 if a0 != 0\n      : @263 (gas: 1)\n  9865: jump @929\n      : @264 (gas: 3)\n  9868: i32 a0 = a1 + 0x20\n  9871: a1 = 0x1938\n  9875: t0 = 252, jump @1207\n      : @265 [@dyn 126] (gas: 6)\n  9881: i32 a1 = a1 + 0x40\n  9884: a1 = a1 + s1\n  9887: u64 [a2 + 1808] = 0\n  9891: u64 [s1 + 0x120] = a5\n  9895: u64 [s1 + 0x118] = a4\n  9899: ra = 254, jump @19\n      : @266 [@dyn 127] (gas: 6)\n  9905: a0 = u64 [s1 + 0x1b0]\n  9909: a0 = a0 + 0xc0\n  9913: a1 = u64 [s1 + 0x1b0]\n  9917: a1 = a0 <u a1\n  9920: a3 = u64 [s1 + 0x1b8]\n  9924: t0 = 256, jump @1204\n      : @267 [@dyn 128] (gas: 24)\n  9930: a1 = u64 [s1 + 0x108]\n  9934: a3 = a3 + a1\n  9937: a1 = a3 <u a1\n  9940: a4 = u64 [s1 + 0x1a0]\n  9944: a4 = a4 + a1\n  9947: a1 = s1 + 0x1938\n  9951: a5 = a1 + 0x600\n  9955: u64 [a5 + 0xb0] = a2\n  9959: u64 [a5 + 0xa8] = a0\n  9963: a0 = u64 [s1 + 0x180]\n  9967: u64 [a5 + 0xe0] = a0\n  9971: a0 = u64 [s1 + 0x188]\n  9975: u64 [a5 + 0xd8] = a0\n  9979: a0 = u64 [s1 + 0x190]\n  9983: u64 [a5 + 0xd0] = a0\n  9987: a0 = u64 [s1 + 0x198]\n  9991: u64 [a5 + 0xc8] = a0\n  9995: u64 [a5 + 0xb8] = a3\n  9999: a3 = a1\n 10001: a0 = s1 + 0x2020\n 10005: a1 = s1 + 0x2000\n 10009: a2 = s1 + 0x1fe0\n 10013: u64 [a3 + 0x6c0] = a4\n 10017: ra = 258, jump @1069\n      : @268 [@dyn 129] (gas: 10)\n 10023: a3 = s1 + 0x100\n 10027: a1 = u64 [a3 + 0xb0]\n 10031: a0 = u64 [a3 + 0x18]\n 10034: a0 = a0 + 0xffffffffffffffc0\n 10037: a0 = a1 <u a0\n 10040: a2 = u64 [a3 + 0xb8]\n 10044: a0 = 0 if a2 != 0\n 10046: a2 = u64 [a3 + 0x20]\n 10049: a0 = 0 if a2 != 0\n 10051: jump @270 if a0 != 0\n      : @269 (gas: 1)\n 10054: jump @929\n      : @270 (gas: 21)\n 10057: a3 = s1 + 0x1938\n 10061: a0 = u64 [a3 + 0x700]\n 10065: u64 [s1 + 0x180] = a0\n 10069: a4 = a3 + 0x600\n 10073: a0 = u64 [a4 + 0xf8]\n 10077: u64 [s1 + 0x188] = a0\n 10081: a0 = u64 [a4 + 0xf0]\n 10085: u64 [s1 + 0x190] = a0\n 10089: a0 = u64 [a4 + 0xe8]\n 10093: u64 [s1 + 0x198] = a0\n 10097: i32 a0 = a1 + 0x40\n 10100: a1 = u64 [s1 + 0xe8]\n 10104: u64 [a4 + 0x88] = a1\n 10108: a1 = u64 [s1 + 0xf0]\n 10112: u64 [a4 + 0x90] = a1\n 10116: a1 = u64 [s1 + 0xf8]\n 10120: u64 [a4 + 0x98] = a1\n 10124: a1 = s1 + 0x1fc0\n 10128: a2 = u64 [s1 + 0x100]\n 10132: u64 [a4 + 0xa0] = a2\n 10136: ra = 260, jump @19\n      : @271 [@dyn 130] (gas: 10)\n 10142: a4 = s1 + 0x100\n 10146: a1 = u64 [a4 + 0xb0]\n 10150: a3 = 0x100000000\n 10160: a0 = 0xffffffa0\n 10170: a0 = a1 <u a0\n 10173: a2 = u64 [a4 + 0xb8]\n 10177: a0 = 0 if a2 != 0\n 10179: a2 = u64 [a4 + 0x20]\n 10182: a0 = 0 if a2 != 0\n 10184: jump @273 if a0 != 0\n      : @272 (gas: 1)\n 10187: jump @929\n      : @273 (gas: 36)\n 10190: a2 = u64 [s1 + 0x198]\n 10194: t1 = a2 <u a1\n 10197: t0 = a2\n 10199: a4 = u64 [s1 + 0x1b8]\n 10203: a5 = u64 [s1 + 0x190]\n 10207: a1 = a5 ^ a4\n 10210: a2 = a5 <u a4\n 10213: a0 = a5\n 10215: a5 = a4\n 10217: a2 = t1 if a1 == 0\n 10220: u64 [s1 + 0x118] = a3\n 10224: a3 = u64 [s1 + 0x108]\n 10228: a4 = u64 [s1 + 0x188]\n 10232: a1 = a4 - a3\n 10235: t2 = a4 <u a3\n 10238: a4 = u64 [s1 + 0x1a0]\n 10242: a3 = u64 [s1 + 0x180]\n 10246: a4 = a3 - a4\n 10249: a4 = a4 - t2\n 10252: a3 = a1 <u a2\n 10255: a4 = a4 - a3\n 10258: a1 = a1 - a2\n 10261: a2 = a0 - a5\n 10264: a2 = a2 - t1\n 10267: a0 = u64 [s1 + 0x1b0]\n 10271: a3 = t0 - a0\n 10274: a0 = u64 [s1 + 0x1b0]\n 10278: i32 a0 = a0 + 0x60\n 10281: a5 = s1 + 0x1938\n 10285: u64 [a5 + 0x668] = a3\n 10289: a3 = a5 + 0x600\n 10293: u64 [a3 + 0x70] = a2\n 10296: u64 [a3 + 0x78] = a1\n 10299: a1 = s1 + 0x1fa0\n 10303: u64 [a3 + 0x80] = a4\n 10307: ra = 262, jump @19\n      : @274 [@dyn 131] (gas: 23)\n 10313: a1 = s1 + 0x1938\n 10317: a0 = u64 [s1 + 0x180]\n 10321: a2 = a1 + 0x600\n 10325: u64 [a2 + 0x20] = a0\n 10328: a0 = u64 [s1 + 0x188]\n 10332: u64 [a2 + 0x18] = a0\n 10335: a0 = u64 [s1 + 0x190]\n 10339: u64 [a2 + 0x10] = a0\n 10342: a0 = u64 [s1 + 0x198]\n 10346: u64 [a2 + 0x8] = a0\n 10349: a0 = u64 [s1 + 0x160]\n 10353: u64 [a2 + 0x40] = a0\n 10356: a0 = u64 [s1 + 0x168]\n 10360: u64 [a2 + 0x38] = a0\n 10363: a0 = u64 [s1 + 0x170]\n 10367: u64 [a2 + 0x30] = a0\n 10370: a4 = a1\n 10372: a0 = s1 + 0x1f80\n 10376: a1 = s1 + 0x1f60\n 10380: a2 = s1 + 0x1f40\n 10384: a3 = u64 [s1 + 0x178]\n 10388: u64 [a4 + 0x628] = a3\n 10392: ra = 264, jump @1069\n      : @275 [@dyn 132] (gas: 10)\n 10398: t2 = u64 [s1 + 0x120]\n 10402: a3 = s1 + 0x100\n 10406: a1 = u64 [a3 + 0xb0]\n 10410: a0 = u64 [a3 + 0x18]\n 10413: a0 = a0 + 0xffffffffffffff80\n 10416: a0 = a1 <u a0\n 10419: a2 = u64 [a3 + 0xb8]\n 10423: a0 = 0 if a2 != 0\n 10425: a0 = 0 if t2 != 0\n 10427: jump @277 if a0 != 0\n      : @276 (gas: 1)\n 10430: jump @929\n      : @277 (gas: 40)\n 10433: a0 = s1 + 0x1938\n 10437: a3 = a0 + 0x600\n 10441: a2 = u64 [a3 + 0x48]\n 10444: t0 = u64 [a0 + 0x650]\n 10448: a5 = u64 [a3 + 0x60]\n 10451: u64 [s1 + 0x190] = a5\n 10455: a0 = u64 [a3 + 0x58]\n 10458: u64 [s1 + 0x198] = a0\n 10462: ra = a2 <u a1\n 10465: t1 = a2\n 10467: u64 [s1 + 0x180] = a2\n 10471: a3 = u64 [s1 + 0x1b8]\n 10475: a1 = t0 ^ a3\n 10478: a2 = t0 <u a3\n 10481: u64 [s1 + 0x188] = t0\n 10485: a0 = a3\n 10487: a2 = ra if a1 == 0\n 10490: a3 = u64 [s1 + 0x108]\n 10494: a4 = u64 [s1 + 0x198]\n 10498: a1 = a4 - a3\n 10501: a3 = a4 <u a3\n 10504: a4 = u64 [s1 + 0x1a0]\n 10508: a4 = a5 - a4\n 10511: a4 = a4 - a3\n 10514: a3 = a1 <u a2\n 10517: a4 = a4 - a3\n 10520: a1 = a1 - a2\n 10523: a2 = t0 - a0\n 10526: a2 = a2 - ra\n 10529: a0 = u64 [s1 + 0x1b0]\n 10533: a3 = t1 - a0\n 10536: a0 = u64 [s1 + 0x1b0]\n 10540: i32 a0 = a0 + 0x80\n 10544: a5 = s1 + 0x1938\n 10548: u64 [a5 + 0x5e8] = a3\n 10552: u64 [a5 + 0x5f0] = a2\n 10556: u64 [a5 + 0x5f8] = a1\n 10560: a1 = s1 + 0x1f20\n 10564: u64 [a5 + 0x600] = a4\n 10568: ra = 266, jump @19\n      : @278 [@dyn 133] (gas: 23)\n 10574: a1 = s1 + 0x1938\n 10578: a0 = u64 [s1 + 0x190]\n 10582: a2 = a1 + 0x500\n 10586: u64 [a2 + 0xa0] = a0\n 10590: a0 = u64 [s1 + 0x198]\n 10594: u64 [a2 + 0x98] = a0\n 10598: a0 = u64 [s1 + 0x188]\n 10602: u64 [a2 + 0x90] = a0\n 10606: a0 = u64 [s1 + 0x180]\n 10610: u64 [a2 + 0x88] = a0\n 10614: a0 = u64 [s1 + 0x140]\n 10618: u64 [a2 + 0xc0] = a0\n 10622: a0 = u64 [s1 + 0x148]\n 10626: u64 [a2 + 0xb8] = a0\n 10630: a0 = u64 [s1 + 0x150]\n 10634: u64 [a2 + 0xb0] = a0\n 10638: a4 = a1\n 10640: a0 = s1 + 0x1f00\n 10644: a1 = s1 + 0x1ee0\n 10648: a2 = s1 + 0x1ec0\n 10652: a3 = u64 [s1 + 0x158]\n 10656: u64 [a4 + 0x5a8] = a3\n 10660: ra = 268, jump @1069\n      : @279 [@dyn 134] (gas: 9)\n 10666: a3 = s1 + 0x100\n 10670: a1 = u64 [a3 + 0xb0]\n 10674: a0 = 0xffffff60\n 10684: a0 = a1 <u a0\n 10687: a2 = u64 [a3 + 0xb8]\n 10691: a0 = 0 if a2 != 0\n 10693: a2 = u64 [a3 + 0x20]\n 10696: a0 = 0 if a2 != 0\n 10698: jump @281 if a0 != 0\n      : @280 (gas: 1)\n 10701: jump @929\n      : @281 (gas: 39)\n 10704: a0 = s1 + 0x1938\n 10708: t1 = u64 [a0 + 0x5c8]\n 10712: a4 = u64 [a0 + 0x5d0]\n 10716: t2 = u64 [a0 + 0x5e0]\n 10720: u64 [s1 + 0x190] = t2\n 10724: ra = u64 [a0 + 0x5d8]\n 10728: t0 = t1 <u a1\n 10731: u64 [s1 + 0x180] = t1\n 10735: a3 = u64 [s1 + 0x1b8]\n 10739: a1 = a4 ^ a3\n 10742: a2 = a4 <u a3\n 10745: a0 = a4\n 10747: u64 [s1 + 0x188] = a4\n 10751: a5 = a3\n 10753: a2 = t0 if a1 == 0\n 10756: a3 = u64 [s1 + 0x108]\n 10760: u64 [s1 + 0x198] = ra\n 10764: a1 = ra - a3\n 10767: a3 = ra <u a3\n 10770: a4 = u64 [s1 + 0x1a0]\n 10774: a4 = t2 - a4\n 10777: a4 = a4 - a3\n 10780: a3 = a1 <u a2\n 10783: a4 = a4 - a3\n 10786: a1 = a1 - a2\n 10789: a2 = a0 - a5\n 10792: a2 = a2 - t0\n 10795: a0 = u64 [s1 + 0x1b0]\n 10799: a3 = t1 - a0\n 10802: a0 = u64 [s1 + 0x1b0]\n 10806: i32 a0 = a0 + 0xa0\n 10810: a5 = s1 + 0x1938\n 10814: u64 [a5 + 0x568] = a3\n 10818: a3 = a5 + 0x500\n 10822: u64 [a3 + 0x70] = a2\n 10825: u64 [a3 + 0x78] = a1\n 10828: a1 = s1 + 0x1ea0\n 10832: u64 [a3 + 0x80] = a4\n 10836: ra = 270, jump @19\n      : @282 [@dyn 135] (gas: 23)\n 10842: a1 = s1 + 0x1938\n 10846: a0 = u64 [s1 + 0x190]\n 10850: a2 = a1 + 0x500\n 10854: u64 [a2 + 0x20] = a0\n 10857: a0 = u64 [s1 + 0x198]\n 10861: u64 [a2 + 0x18] = a0\n 10864: a0 = u64 [s1 + 0x188]\n 10868: u64 [a2 + 0x10] = a0\n 10871: a0 = u64 [s1 + 0x180]\n 10875: u64 [a2 + 0x8] = a0\n 10878: a0 = u64 [s1 + 0x128]\n 10882: u64 [a2 + 0x40] = a0\n 10885: a0 = u64 [s1 + 0x130]\n 10889: u64 [a2 + 0x38] = a0\n 10892: a0 = u64 [s1 + 0x138]\n 10896: u64 [a2 + 0x30] = a0\n 10899: a4 = a1\n 10901: a0 = s1 + 0x1e80\n 10905: a1 = s1 + 0x1e60\n 10909: a2 = s1 + 0x1e40\n 10913: a3 = u64 [s1 + 0x1a8]\n 10917: u64 [a4 + 0x528] = a3\n 10921: ra = 272, jump @1069\n      : @283 [@dyn 136] (gas: 33)\n 10927: a0 = s1 + 0x1938\n 10931: a1 = u64 [a0 + 0x550]\n 10935: t0 = u64 [a0 + 0x560]\n 10939: t1 = u64 [a0 + 0x548]\n 10943: a3 = u64 [a0 + 0x558]\n 10947: a0 = u64 [s1 + 0x1b8]\n 10951: a4 = a1 ^ a0\n 10954: a5 = a1 <u a0\n 10957: ra = a0\n 10959: a0 = u64 [s1 + 0x1b0]\n 10963: t2 = t1 <u a0\n 10966: a5 = t2 if a4 == 0\n 10969: a0 = u64 [s1 + 0x108]\n 10973: a4 = a3 - a0\n 10976: a3 = a3 <u a0\n 10979: a0 = u64 [s1 + 0x1a0]\n 10983: a2 = t0 - a0\n 10986: a2 = a2 - a3\n 10989: a3 = a4 <u a5\n 10992: a2 = a2 - a3\n 10995: a0 = u64 [s1 + 0x1b0]\n 10999: a4 = a4 - a5\n 11002: a1 = a1 - ra\n 11005: a3 = a1 - t2\n 11008: a1 = t1 - a0\n 11011: a2 = a2 | a3\n 11014: a3 = a1 | a4\n 11017: a3 = a3 | a2\n 11020: a2 = a2 | a4\n 11023: a3 = a3 >> 0x20\n 11026: a2 = a2 << 0x20\n 11029: a2 = a2 | a3\n 11032: jump @285 if a2 == 0\n      : @284 (gas: 1)\n 11035: jump @929\n      : @285 (gas: 2)\n 11038: u64 [s1 + 0x1b8] = a1\n 11042: ra = 274, jump @26\n      : @286 [@dyn 137] (gas: 5)\n 11048: i32 a1 = a0 + 0\n 11050: a2 = i32 [s1 + 0x1b8]\n 11054: a0 = 0\n 11056: ecalli 7 // 'seal_return'\n 11058: jump @156\n      : @287 (gas: 1)\n 11061: jump @289 if a0 == 2147324492\n      : @288 (gas: 1)\n 11068: jump @930\n      : @289 (gas: 8)\n 11071: u64 [a2 + 1952] = 0\n 11075: u64 [a2 + 1944] = 0\n 11079: u64 [a2 + 1936] = 0\n 11083: u64 [a2 + 1928] = 0\n 11087: a0 = s1 + 0x3000\n 11091: i32 a0 = a0 + 0xfffffffffffff8c0\n 11095: ecalli 10 // 'value_transferred'\n 11097: fallthrough\n      : @290 (gas: 10)\n 11098: a3 = s1 + 0x2138\n 11102: a4 = a3 + 0x700\n 11106: a0 = u64 [a4 + 0x98]\n 11110: a1 = u64 [a4 + 0xa0]\n 11114: a2 = u64 [a4 + 0x90]\n 11118: a3 = u64 [a4 + 0x88]\n 11122: a1 = a1 | a2\n 11125: a0 = a0 | a3\n 11128: a0 = a0 | a1\n 11131: jump @292 if a0 == 0\n      : @291 (gas: 1)\n 11134: jump @943\n      : @292 (gas: 14)\n 11137: a0 = sp + 0xffffffffffffffe0\n 11140: a0 = a0 & 0xffffffffffffffe0\n 11143: u64 [s1 + 0xb8] = a0\n 11147: sp = a0\n 11149: a0 = u64 [s1 + 0x1b8]\n 11153: a0 = u32 [a0]\n 11155: a2 = s1 + 0x1938\n 11159: u64 [a2 + 1120] = 0\n 11163: u64 [a2 + 1112] = 0\n 11167: u64 [a2 + 0x448] = a0\n 11171: a0 = s1 + 0x1da0\n 11175: a1 = s1 + 0x1d80\n 11179: u64 [a2 + 1104] = 0\n 11183: ra = 276, jump @1041\n      : @293 [@dyn 138] (gas: 52)\n 11189: a3 = s1 + 0x1938\n 11193: a4 = a3 + 0x400\n 11197: a0 = u64 [a4 + 0x80]\n 11201: a1 = s1 + 0x100\n 11205: u64 [a1 + 0x40] = a0\n 11208: a0 = u64 [a4 + 0x78]\n 11211: u64 [a1 + 0x38] = a0\n 11214: a0 = u64 [a4 + 0x70]\n 11217: u64 [a1 + 0x48] = a0\n 11220: a0 = u64 [a4 + 0x68]\n 11223: u64 [a1 + 0x50] = a0\n 11226: a0 = u64 [a4 + 0xc0]\n 11230: u64 [a1 + 0x8] = a0\n 11233: a0 = u64 [a4 + 0xb8]\n 11237: u64 [a1 + 0x10] = a0\n 11240: a0 = u64 [a4 + 0xb0]\n 11244: u64 [a1 + 0x18] = a0\n 11247: a0 = u64 [a4 + 0xa8]\n 11251: u64 [a1 + 0x20] = a0\n 11254: a0 = u64 [a4 + 0xe0]\n 11258: u64 [s1 + 0xf0] = a0\n 11262: a0 = u64 [a4 + 0xd8]\n 11266: u64 [s1 + 0xe8] = a0\n 11270: a0 = u64 [a4 + 0xd0]\n 11274: u64 [s1 + 0xf8] = a0\n 11278: a0 = u64 [a4 + 0xc8]\n 11282: u64 [a1] = a0\n 11284: a0 = u64 [a3 + 0x500]\n 11288: u64 [s1 + 0xd0] = a0\n 11292: a0 = u64 [a4 + 0xf8]\n 11296: u64 [s1 + 0xc8] = a0\n 11300: a0 = u64 [a4 + 0xf0]\n 11304: u64 [s1 + 0xd8] = a0\n 11308: a0 = u64 [a4 + 0xe8]\n 11312: u64 [s1 + 0xe0] = a0\n 11316: a0 = u64 [a4 + 0x98]\n 11320: a1 = u64 [a4 + 0xa0]\n 11324: a2 = u64 [a4 + 0x88]\n 11328: a3 = u64 [a4 + 0x90]\n 11332: a4 = u64 [s1 + 0xb8]\n 11336: u64 [a4 + 0x10] = a0\n 11339: u64 [a4 + 0x18] = a1\n 11342: u64 [a4] = a2\n 11344: u64 [a4 + 0x8] = a3\n 11347: a0 = 0x30070\n 11352: u64 [s1 + 0xc0] = a0\n 11356: i32 a0 = a0 + 0\n 11358: u64 [s1 + 0xa0] = a0\n 11362: ra = 0x116\n 11366: ecalli 3 // 'caller'\n 11368: t0 = 0x118\n 11372: jump @1174\n      : @294 [@dyn 139] (gas: 1)\n 11375: t0 = 280, jump @1174\n      : @295 [@dyn 140] (gas: 8)\n 11381: u64 [a2 + 1088] = 0\n 11385: a4 = a2 + 0x400\n 11389: u64 [a4 + 0x38] = a1\n 11392: u64 [a4 + 0x30] = a0\n 11395: a1 = s1 + 0x1d60\n 11399: u64 [a4 + 0x28] = a3\n 11402: a0 = 0\n 11404: ra = 282, jump @19\n      : @296 [@dyn 141] (gas: 9)\n 11410: a0 = s1 + 0x1938\n 11414: u64 [a0 + 1056] = 0\n 11418: u64 [a0 + 1048] = 0\n 11422: u64 [a0 + 1040] = 0\n 11426: a2 = a0\n 11428: a0 = 0x20\n 11431: a1 = s1 + 0x1d40\n 11435: u64 [a2 + 1032] = 0\n 11439: ra = 284, jump @19\n      : @297 [@dyn 142] (gas: 4)\n 11445: a2 = 0x2005c\n 11450: a0 = i32 [0x2005c]\n 11455: a1 = 0x3f\n 11458: jump @299 if a1 <u a0\n      : @298 (gas: 4)\n 11461: u32 [0x2005c] = 0x40\n 11467: u64 [s1 + 0xa8] = a2\n 11471: t0 = 0x11e\n 11475: jump @1197\n      : @299 (gas: 2)\n 11478: u64 [s1 + 0xa8] = a2\n 11482: t0 = 286, jump @1197\n      : @300 [@dyn 143] (gas: 9)\n 11488: a0 = 0x20070\n 11493: i32 a0 = a0 + 0\n 11495: i32 a2 = a2 + 0\n 11497: a1 = 0x40\n 11500: u64 [s1 + 0xb0] = a0\n 11504: ra = 0x120\n 11508: ecalli 6 // 'hash_keccak_256'\n 11510: t0 = 0x122\n 11514: jump @1185\n      : @301 [@dyn 144] (gas: 1)\n 11517: t0 = 290, jump @1185\n      : @302 [@dyn 145] (gas: 8)\n 11523: a5 = a4 + 0x700\n 11527: u64 [a5 + 0xc0] = a3\n 11531: u64 [a5 + 0xb8] = a2\n 11535: u64 [a5 + 0xb0] = a1\n 11539: u64 [a5 + 0xa8] = a0\n 11543: a0 = s1 + 0x1d20\n 11547: a1 = s1 + 0x28e0\n 11551: ra = 292, jump @21\n      : @303 [@dyn 146] (gas: 7)\n 11557: a2 = s1 + 0x1938\n 11561: a0 = u32 [a2 + 0x3f8]\n 11565: a1 = u64 [a2 + 0x3e8]\n 11569: a2 = u64 [a2 + 0x3f0]\n 11573: a0 = a0 | a1\n 11576: a0 = a0 | a2\n 11579: jump @332 if a0 != 0\n      : @304 (gas: 3)\n 11583: a0 = s1 + 0x1440\n 11587: a1 = 0x40\n 11590: ra = 294, jump @17\n      : @305 [@dyn 147] (gas: 14)\n 11596: a2 = s1 + 0x1138\n 11600: t0 = u64 [a2 + 0x320]\n 11604: a1 = a2 + 0x300\n 11608: a5 = u64 [a1 + 0x18]\n 11611: a4 = u64 [a1 + 0x10]\n 11614: a0 = u64 [a1 + 0x8]\n 11617: a3 = a4 | t0\n 11620: a1 = a0 | a5\n 11623: a1 = a1 | a3\n 11626: a1 = a1 >> 0x20\n 11629: a3 = a3 | a5\n 11632: a3 = a3 << 0x20\n 11635: a1 = a1 | a3\n 11638: jump @307 if a1 == 0\n      : @306 (gas: 1)\n 11641: jump @929\n      : @307 (gas: 11)\n 11644: u64 [a2 + 760] = 0\n 11648: u64 [a2 + 752] = 0\n 11652: u64 [a2 + 744] = 0\n 11656: a3 = 0x8c379a000000000\n 11666: a1 = s1 + 0x1420\n 11670: u64 [a2 + 0x300] = a3\n 11674: u64 [s1 + 0x1b8] = a0\n 11678: u64 [s1 + 0x1b0] = a4\n 11682: u64 [s1 + 0x1a0] = t0\n 11686: u64 [s1 + 0x1a8] = a5\n 11690: ra = 296, jump @19\n      : @308 [@dyn 148] (gas: 12)\n 11696: a5 = s1 + 0x100\n 11700: a1 = u64 [a5 + 0xb8]\n 11704: a0 = u64 [a5 + 0xa8]\n 11708: a3 = u64 [a5 + 0xa0]\n 11712: a3 = a3 | a0\n 11715: a4 = 0x100000000\n 11725: a0 = 0xfffffffc\n 11735: a0 = a1 <u a0\n 11738: a2 = u64 [a5 + 0xb0]\n 11742: a0 = 0 if a2 != 0\n 11744: a0 = 0 if a3 != 0\n 11746: jump @310 if a0 != 0\n      : @309 (gas: 1)\n 11749: jump @929\n      : @310 (gas: 10)\n 11752: i32 a0 = a1 + 0x4\n 11755: a2 = s1 + 0x1138\n 11759: u64 [a2 + 736] = 0\n 11763: u64 [a2 + 728] = 0\n 11767: u64 [a2 + 712] = 0x20\n 11772: a1 = s1 + 0x1400\n 11776: u64 [a2 + 720] = 0\n 11780: u64 [s1 + 0x1a8] = a3\n 11784: u64 [s1 + 0x1a0] = a4\n 11788: ra = 298, jump @19\n      : @311 [@dyn 149] (gas: 10)\n 11794: a4 = s1 + 0x100\n 11798: a3 = u64 [a4 + 0xa8]\n 11802: a2 = u64 [a4 + 0xb0]\n 11806: a1 = u64 [a4 + 0xb8]\n 11810: a0 = u64 [a4 + 0xa0]\n 11814: a0 = a0 + 0xffffffffffffffdc\n 11817: a0 = a1 <u a0\n 11820: a0 = 0 if a2 != 0\n 11822: a0 = 0 if a3 != 0\n 11824: jump @313 if a0 != 0\n      : @312 (gas: 1)\n 11827: jump @929\n      : @313 (gas: 8)\n 11830: i32 a0 = a1 + 0x24\n 11833: a3 = s1 + 0x1138\n 11837: u64 [a3 + 704] = 0\n 11841: u64 [a3 + 696] = 0\n 11845: u64 [a3 + 680] = 0xc\n 11850: a1 = s1 + 0x13e0\n 11854: u64 [a3 + 688] = 0\n 11858: ra = 300, jump @19\n      : @314 [@dyn 150] (gas: 9)\n 11864: a3 = s1 + 0x100\n 11868: a2 = u64 [a3 + 0xb8]\n 11872: a0 = 0xffffffbc\n 11882: a0 = a2 <u a0\n 11885: a1 = u64 [a3 + 0xb0]\n 11889: a0 = 0 if a1 != 0\n 11891: a1 = u64 [a3 + 0xa8]\n 11895: a0 = 0 if a1 != 0\n 11897: jump @316 if a0 != 0\n      : @315 (gas: 1)\n 11900: jump @929\n      : @316 (gas: 10)\n 11903: i32 a0 = a2 + 0x44\n 11906: a1 = u64 [0x20020]\n 11911: a3 = s1 + 0x1138\n 11915: u64 [a3 + 656] = 0\n 11919: u64 [a3 + 0x2a0] = a1\n 11923: a1 = 0x67656e7400000000\n 11933: u64 [a3 + 0x298] = a1\n 11937: a1 = s1 + 0x13c0\n 11941: u64 [a3 + 648] = 0\n 11945: ra = 302, jump @19\n      : @317 [@dyn 151] (gas: 4)\n 11951: a1 = 0x64\n 11954: a0 = u64 [s1 + 0x1b8]\n 11958: ra = 0x138\n 11962: jump @26\n      : @318 (gas: 6)\n 11965: a0 = t2 | a3\n 11968: a0 = a0 >> 0x20\n 11971: a1 = a1 | a3\n 11974: a1 = a1 << 0x20\n 11977: a0 = a0 | a1\n 11980: jump @320 if a0 == 0\n      : @319 (gas: 1)\n 11983: jump @929\n      : @320 (gas: 12)\n 11986: u64 [a5 + 824] = 0\n 11990: u64 [a5 + 816] = 0\n 11994: u64 [a5 + 808] = 0\n 11998: a0 = 0x8c379a000000000\n 12008: a1 = s1 + 0x7ff\n 12012: a1 = a1 + 0x461\n 12016: u64 [a5 + 0x340] = a0\n 12020: a0 = a2\n 12022: u64 [s1 + 0x118] = a2\n 12026: u64 [s1 + 0x110] = t1\n 12030: u64 [s1 + 0x1b0] = t0\n 12034: ra = 304, jump @19\n      : @321 [@dyn 152] (gas: 10)\n 12040: a4 = s1 + 0x100\n 12044: a1 = u64 [a4 + 0x18]\n 12047: a3 = 0x100000000\n 12057: a0 = 0xfffffffc\n 12067: a0 = a1 <u a0\n 12070: a2 = u64 [a4 + 0x10]\n 12073: a0 = 0 if a2 != 0\n 12075: a2 = u64 [a4 + 0xb0]\n 12079: a0 = 0 if a2 != 0\n 12081: jump @323 if a0 != 0\n      : @322 (gas: 1)\n 12084: jump @929\n      : @323 (gas: 11)\n 12087: i32 a0 = a1 + 0x4\n 12090: a2 = s1 + 0x7ff\n 12094: a2 = a2 + 0x139\n 12098: u64 [a2 + 800] = 0\n 12102: u64 [a2 + 792] = 0\n 12106: u64 [a2 + 776] = 0x20\n 12111: a1 = s1 + 0x7ff\n 12115: a1 = a1 + 0x441\n 12119: u64 [a2 + 784] = 0\n 12123: u64 [s1 + 0x1b8] = a3\n 12127: ra = 306, jump @19\n      : @324 [@dyn 153] (gas: 10)\n 12133: a4 = s1 + 0x100\n 12137: a3 = u64 [a4 + 0xb0]\n 12141: a2 = u64 [a4 + 0x10]\n 12144: a1 = u64 [a4 + 0x18]\n 12147: a0 = u64 [a4 + 0xb8]\n 12151: a0 = a0 + 0xffffffffffffffdc\n 12154: a0 = a1 <u a0\n 12157: a0 = 0 if a2 != 0\n 12159: a0 = 0 if a3 != 0\n 12161: jump @326 if a0 != 0\n      : @325 (gas: 1)\n 12164: jump @929\n      : @326 (gas: 10)\n 12167: i32 a0 = a1 + 0x24\n 12170: a4 = s1 + 0x7ff\n 12174: a4 = a4 + 0x139\n 12178: u64 [a4 + 768] = 0\n 12182: u64 [a4 + 760] = 0\n 12186: u64 [a4 + 744] = 0x12\n 12191: a1 = s1 + 0x7ff\n 12195: a1 = a1 + 0x421\n 12199: u64 [a4 + 752] = 0\n 12203: ra = 308, jump @19\n      : @327 [@dyn 154] (gas: 9)\n 12209: a3 = s1 + 0x100\n 12213: a2 = u64 [a3 + 0x18]\n 12216: a0 = 0xffffffbc\n 12226: a0 = a2 <u a0\n 12229: a1 = u64 [a3 + 0x10]\n 12232: a0 = 0 if a1 != 0\n 12234: a1 = u64 [a3 + 0xb0]\n 12238: a0 = 0 if a1 != 0\n 12240: jump @329 if a0 != 0\n      : @328 (gas: 1)\n 12243: jump @929\n      : @329 (gas: 14)\n 12246: i32 a0 = a2 + 0x44\n 12249: a1 = u64 [0x20028]\n 12254: a2 = u64 [0x20030]\n 12259: a3 = s1 + 0x7ff\n 12263: a3 = a3 + 0x139\n 12267: a4 = a3 + 0x200\n 12271: u64 [a4 + 0xe0] = a1\n 12275: u64 [a4 + 0xd8] = a2\n 12279: a1 = 0x6564000000000000\n 12289: u64 [a4 + 0xd0] = a1\n 12293: a1 = s1 + 0x7ff\n 12297: a1 = a1 + 0x401\n 12301: u64 [a3 + 712] = 0\n 12305: ra = 310, jump @19\n      : @330 [@dyn 155] (gas: 3)\n 12311: a1 = 0x64\n 12314: a0 = u64 [s1 + 0x118]\n 12318: ra = 312, jump @26\n      : @331 [@dyn 156] (gas: 5)\n 12324: i32 a1 = a0 + 0\n 12326: a0 = 0x1\n 12329: a2 = 0x64\n 12332: ecalli 7 // 'seal_return'\n 12334: fallthrough\n      : @332 (gas: 5)\n 12335: a0 = u64 [s1 + 0xa0]\n 12339: ra = 0x13a\n 12343: ecalli 3 // 'caller'\n 12345: t0 = 0x13c\n 12349: jump @1174\n      : @333 [@dyn 157] (gas: 1)\n 12352: t0 = 316, jump @1174\n      : @334 [@dyn 158] (gas: 8)\n 12358: u64 [a2 + 992] = 0\n 12362: a4 = a2 + 0x300\n 12366: u64 [a4 + 0xd8] = a1\n 12370: u64 [a4 + 0xd0] = a0\n 12374: a1 = s1 + 0x1d00\n 12378: u64 [a4 + 0xc8] = a3\n 12382: a0 = 0\n 12384: ra = 318, jump @19\n      : @335 [@dyn 159] (gas: 9)\n 12390: a0 = s1 + 0x1938\n 12394: u64 [a0 + 960] = 0\n 12398: u64 [a0 + 952] = 0\n 12402: u64 [a0 + 944] = 0\n 12406: a2 = a0\n 12408: a0 = 0x20\n 12411: a1 = s1 + 0x1ce0\n 12415: u64 [a2 + 936] = 0\n 12419: ra = 320, jump @19\n      : @336 [@dyn 160] (gas: 7)\n 12425: a0 = sp + 0xffffffffffffffe0\n 12428: a0 = a0 & 0xffffffffffffffe0\n 12431: u64 [s1 + 0x90] = a0\n 12435: sp = a0\n 12437: a2 = u64 [s1 + 0xa8]\n 12441: a0 = i32 [a2]\n 12443: jump @338 if a0 >u 63\n      : @337 (gas: 2)\n 12447: u32 [a2 + 0] = 0x40\n 12450: fallthrough\n      : @338 (gas: 9)\n 12451: a0 = sp + 0xffffffffffffffe0\n 12454: a0 = a0 & 0xffffffffffffffe0\n 12457: u64 [s1 + 0x1b8] = a0\n 12461: sp = a0\n 12463: i32 a2 = a0 + 0\n 12465: a1 = 0x40\n 12468: a0 = u64 [s1 + 0xb0]\n 12472: ecalli 6 // 'hash_keccak_256'\n 12474: fallthrough\n      : @339 (gas: 45)\n 12475: a3 = u64 [s1 + 0x1b8]\n 12479: a0 = u64 [a3 + 0x18]\n 12482: a1 = u64 [a3 + 0x10]\n 12485: a2 = u64 [a3 + 0x8]\n 12488: a3 = u64 [a3]\n 12490: a4 = reverse a0\n 12492: ra = reverse a1\n 12494: a5 = reverse a2\n 12496: a1 = reverse a3\n 12498: a0 = u64 [s1 + 0x90]\n 12502: u64 [a0 + 0x18] = a1\n 12505: u64 [a0 + 0x10] = a5\n 12508: a3 = ra\n 12510: u64 [a0 + 0x8] = a3\n 12513: u64 [a0] = a4\n 12515: a0 = sp + 0xffffffffffffffe0\n 12518: t0 = a0 & 0xffffffffffffffe0\n 12521: sp = t0\n 12523: u64 [s1 + 0x78] = a4\n 12526: a2 = a4 + 0x1\n 12529: a0 = a2 <u 0x1\n 12532: u64 [s1 + 0x80] = a3\n 12536: ra = ra + a0\n 12539: a0 = a2 | ra\n 12542: a0 = a0 <u 0x1\n 12545: a4 = a5 + a0\n 12548: t1 = u64 [s1 + 0x138]\n 12552: a0 = u64 [s1 + 0x150]\n 12556: a0 = a0 | t1\n 12559: a3 = u64 [s1 + 0x148]\n 12563: t2 = u64 [s1 + 0x140]\n 12567: a3 = a3 | t2\n 12570: a0 = a0 | a3\n 12573: a0 = a0 >> 0x20\n 12576: a3 = a3 | t1\n 12579: a3 = a3 << 0x20\n 12582: a3 = a3 | a0\n 12585: a0 = a4 <u a5\n 12588: a0 = a0 + a1\n 12591: u64 [t0 + 0x10] = a4\n 12594: u64 [t0 + 0x8] = ra\n 12597: u64 [t0] = a2\n 12599: u64 [s1 + 0x88] = t0\n 12603: u64 [t0 + 0x18] = a0\n 12606: jump @341 if a3 == 0\n      : @340 (gas: 1)\n 12609: jump @929\n      : @341 (gas: 9)\n 12612: u64 [s1 + 0x60] = a1\n 12615: u64 [s1 + 0x68] = a5\n 12618: u64 [s1 + 0x40] = a0\n 12621: u64 [s1 + 0x48] = a4\n 12624: u64 [s1 + 0x50] = ra\n 12627: u64 [s1 + 0x58] = a2\n 12630: a0 = s1 + 0x1cc0\n 12634: a1 = u64 [s1 + 0x150]\n 12638: ra = 322, jump @17\n      : @342 [@dyn 161] (gas: 19)\n 12644: a2 = s1 + 0x1938\n 12648: a0 = a2 + 0x300\n 12652: a4 = u64 [a0 + 0xa0]\n 12656: a1 = u64 [a0 + 0x98]\n 12660: a3 = u64 [a0 + 0x90]\n 12664: a0 = a4 >u 0\n 12666: a5 = a1 >u 0\n 12668: a5 = a0 if a4 != 0\n 12671: u64 [s1 + 0x170] = a3\n 12675: a0 = a3 >u 0\n 12677: u64 [s1 + 0x70] = a1\n 12680: a3 = s1 + 0x100\n 12684: u64 [a3 + 0x68] = a4\n 12687: a1 = a1 | a4\n 12690: u64 [a3 + 0x28] = a0\n 12693: u64 [a3 + 0x30] = a5\n 12696: u64 [a3 + 0x60] = a1\n 12699: a0 = a5 if a1 != 0\n 12702: jump @344 if a0 == 0\n      : @343 (gas: 1)\n 12705: jump @944\n      : @344 (gas: 5)\n 12708: a0 = u64 [a2 + 0x388]\n 12712: u64 [s1 + 0x98] = a0\n 12716: a0 = s1 + 0x1ca0\n 12720: a1 = u64 [s1 + 0x88]\n 12724: ra = 324, jump @21\n      : @345 [@dyn 162] (gas: 3)\n 12730: a4 = s1 + 0x1938\n 12734: a5 = a4 + 0x300\n 12738: t0 = 326, jump @1201\n      : @346 [@dyn 163] (gas: 5)\n 12744: i32 a0 = a0 + 0xfffffffffffffc80\n 12748: a0 = a0 + s1\n 12751: a1 = s1 + 0x1c60\n 12755: u64 [a5 + 0x28] = a2\n 12758: ra = 328, jump @1120\n      : @347 [@dyn 164] (gas: 19)\n 12764: a0 = s1 + 0x1938\n 12768: a1 = a0 + 0x300\n 12772: a3 = u64 [a1 + 0x60]\n 12775: a4 = u64 [a1 + 0x58]\n 12778: a5 = u64 [a1 + 0x50]\n 12781: t0 = u64 [a0 + 0x348]\n 12785: a0 = a3 >u 0\n 12787: a1 = a4 >u 0\n 12789: a1 = a0 if a3 != 0\n 12792: a0 = a5 >u 0\n 12794: a2 = t0 <u 0x20\n 12797: a2 = a2 ^ 0x1\n 12800: a2 = a0 if a5 != 0\n 12803: a0 = a4 | a3\n 12806: a2 = a1 if a0 != 0\n 12809: a0 = u64 [s1 + 0x98]\n 12813: a0 = a0 <u 0x20\n 12816: u64 [s1 + 0x158] = a0\n 12820: jump @362 if a2 == 0\n      : @348 (gas: 18)\n 12824: u64 [s1 + 0x190] = t0\n 12828: a0 = s1 + 0x100\n 12832: u64 [a0 + 0x98] = a5\n 12836: u64 [a0 + 0xb0] = a4\n 12840: u64 [a0 + 0xa0] = a3\n 12844: a0 = s1 + 0x1938\n 12848: a1 = u64 [s1 + 0x58]\n 12851: a3 = a0 + 0x300\n 12855: u64 [a3 + 0x8] = a1\n 12858: a1 = u64 [s1 + 0x50]\n 12861: u64 [a3 + 0x10] = a1\n 12864: a1 = u64 [s1 + 0x48]\n 12867: u64 [a3 + 0x18] = a1\n 12870: a1 = s1 + 0x1c40\n 12874: a2 = u64 [s1 + 0x40]\n 12877: u64 [a3 + 0x20] = a2\n 12880: a0 = 0\n 12882: ra = 330, jump @19\n      : @349 [@dyn 165] (gas: 3)\n 12888: a2 = u64 [s1 + 0xa8]\n 12892: a0 = i32 [a2]\n 12894: jump @351 if a0 >u 31\n      : @350 (gas: 3)\n 12898: u32 [a2 + 0] = 0x20\n 12901: t0 = 0x14c\n 12905: jump @1170\n      : @351 (gas: 1)\n 12908: t0 = 332, jump @1170\n      : @352 [@dyn 166] (gas: 5)\n 12914: ra = 0x14e\n 12918: ecalli 6 // 'hash_keccak_256'\n 12920: a0 = u64 [s1 + 0x98]\n 12924: t0 = 0x150\n 12928: jump @1180\n      : @353 [@dyn 167] (gas: 2)\n 12931: a0 = u64 [s1 + 0x98]\n 12935: t0 = 336, jump @1180\n      : @354 [@dyn 168] (gas: 2)\n 12941: a4 = u64 [s1 + 0x70]\n 12944: t0 = 338, jump @1155\n      : @355 [@dyn 169] (gas: 29)\n 12950: t0 = t2 + a0\n 12953: a0 = t0 <u t2\n 12956: a5 = a2 + a0\n 12959: a4 = a4 + a5\n 12962: u64 [s1 + 0x1b8] = a4\n 12966: a5 = a4 ^ a2\n 12969: a3 = a4 <u a2\n 12972: a3 = a0 if a5 == 0\n 12975: u64 [s1 + 0x180] = a3\n 12979: a0 = u64 [s1 + 0x190]\n 12983: ra = a0 + 0x1f\n 12986: a4 = ra <u a0\n 12989: a3 = u64 [s1 + 0x198]\n 12993: a0 = a3 + a4\n 12996: a5 = a0 <u a3\n 12999: a5 = a4 if a4 == 0\n 13002: t1 = u64 [s1 + 0x1b0]\n 13006: t1 = t1 + a5\n 13009: a4 = t1 << 0x3b\n 13012: a3 = a0 >> 0x5\n 13015: a3 = a3 | a4\n 13018: a0 = a0 << 0x3b\n 13021: a4 = ra >> 0x5\n 13024: a0 = a0 | a4\n 13027: a0 = a0 + t2\n 13030: u64 [s1 + 0x198] = a0\n 13034: a0 = a0 <u t2\n 13037: t2 = t0\n 13039: t0 = 340, jump @1176\n      : @356 [@dyn 170] (gas: 4)\n 13045: a0 = u64 [s1 + 0x70]\n 13048: a0 = a4 <u a0\n 13051: a3 = u64 [s1 + 0x168]\n 13055: t0 = 342, jump @1178\n      : @357 [@dyn 171] (gas: 8)\n 13061: t0 = u64 [a4]\n 13063: a4 = u64 [a4 + 0x8]\n 13066: a0 = a0 >> 0x5\n 13069: a3 = 0 if a1 != 0\n 13071: a0 = 0 if a1 != 0\n 13073: a1 = reverse a4\n 13075: a4 = reverse t0\n 13077: t0 = 344, jump @1167\n      : @358 [@dyn 172] (gas: 25)\n 13083: t0 = a0 + a3\n 13086: a0 = u64 [s1 + 0x1b0]\n 13090: a0 = t1 <u a0\n 13093: a3 = u64 [s1 + 0x1a0]\n 13097: a0 = a0 + a3\n 13100: a3 = t1 >> 0x5\n 13103: a5 = a0 << 0x3b\n 13106: a3 = a3 | a5\n 13109: a0 = a0 >> 0x5\n 13112: a0 = a0 + a4\n 13115: a5 = s1 + 0x100\n 13119: a4 = u64 [a5 + 0xb8]\n 13123: a3 = a3 + a1\n 13126: a1 = a3 <u a1\n 13129: a0 = a0 + a1\n 13132: a2 = a2 + a3\n 13135: u64 [a5 + 0x88] = a2\n 13139: a1 = a2 <u a3\n 13142: a0 = a0 + a1\n 13145: u64 [a5 + 0x80] = a0\n 13149: a0 = sp + 0xffffffffffffffe0\n 13152: t1 = a0 & 0xffffffffffffffe0\n 13155: sp = t1\n 13157: u64 [s1 + 0x178] = t1\n 13161: fallthrough\n      : @359 (gas: 20)\n 13162: a0 = u64 [s1 + 0x198]\n 13166: a0 = t2 <u a0\n 13169: a2 = u64 [s1 + 0x190]\n 13173: a1 = a4 ^ a2\n 13176: a2 = a4 <u a2\n 13179: a2 = a0 if a1 == 0\n 13182: a5 = u64 [s1 + 0x188]\n 13186: a0 = ra <u a5\n 13189: a3 = u64 [s1 + 0x180]\n 13193: a1 = t0 ^ a3\n 13196: a3 = t0 <u a3\n 13199: a3 = a0 if a1 == 0\n 13202: a0 = ra ^ a5\n 13205: a0 = a0 | a1\n 13208: a3 = a2 if a0 == 0\n 13211: u64 [t1] = t2\n 13213: u64 [t1 + 0x8] = a4\n 13216: u64 [t1 + 0x10] = ra\n 13219: u64 [t1 + 0x18] = t0\n 13222: jump @362 if a3 == 0\n      : @360 (gas: 12)\n 13225: a0 = s1 + 0x2138\n 13229: u64 [a0 + 2016] = 0\n 13233: u64 [a0 + 2008] = 0\n 13237: u64 [a0 + 2000] = 0\n 13241: u64 [a0 + 1992] = 0\n 13245: a1 = s1 + 0x2900\n 13249: a0 = t1\n 13251: u64 [s1 + 0x1b0] = t2\n 13255: u64 [s1 + 0x1b8] = a4\n 13259: u64 [s1 + 0x1a8] = t0\n 13263: u64 [s1 + 0x1a0] = ra\n 13267: ra = 346, jump @23\n      : @361 [@dyn 173] (gas: 15)\n 13273: t1 = u64 [s1 + 0x178]\n 13277: t0 = u64 [s1 + 0x1a8]\n 13281: a4 = u64 [s1 + 0x1b8]\n 13285: t2 = u64 [s1 + 0x1b0]\n 13289: t2 = t2 + 0x1\n 13292: a0 = t2 <u 0x1\n 13295: a4 = a4 + a0\n 13298: a0 = t2 | a4\n 13301: a0 = a0 <u 0x1\n 13304: a1 = u64 [s1 + 0x1a0]\n 13308: a0 = a0 + a1\n 13311: a1 = a0 <u a1\n 13314: t0 = t0 + a1\n 13317: ra = a0\n 13319: jump @359\n      : @362 (gas: 29)\n 13322: a3 = s1 + 0x100\n 13326: a0 = u64 [a3 + 0x58]\n 13329: a0 = a0 ^ 0x1\n 13332: ra = u64 [s1 + 0x170]\n 13336: a1 = u64 [a3 + 0x28]\n 13339: a0 = a1 if ra != 0\n 13342: a1 = u64 [a3 + 0x30]\n 13345: a2 = u64 [a3 + 0x60]\n 13348: a0 = a1 if a2 != 0\n 13351: t1 = u64 [s1 + 0x168]\n 13355: a1 = ra | t1\n 13358: u64 [a3 + 0x30] = a1\n 13361: a2 = u64 [s1 + 0x70]\n 13364: t2 = a2 >> 0x3f\n 13367: t1 = t1 << 0x1\n 13370: a5 = ra >> 0x3f\n 13373: a4 = a2 << 0x1\n 13376: a1 = u64 [s1 + 0x98]\n 13380: t0 = a1 >> 0x3f\n 13383: ra = ra << 0x1\n 13386: a3 = a1 << 0x1\n 13389: u64 [s1 + 0x8] = a3\n 13392: u64 [s1 + 0x20] = t2\n 13395: u64 [s1 + 0x18] = t1\n 13398: u64 [s1 + 0x10] = t0\n 13401: u64 [s1 + 0x38] = a5\n 13404: u64 [s1 + 0x30] = ra\n 13407: u64 [s1 + 0x28] = a4\n 13410: jump @376 if a0 == 0\n      : @363 (gas: 15)\n 13414: a1 = a1 & 0xffffffffffffffe0\n 13417: u64 [s1 + 0x128] = a1\n 13421: a0 = s1 + 0x1938\n 13425: a1 = u64 [s1 + 0x58]\n 13428: a3 = a0 + 0x200\n 13432: u64 [a3 + 0xc8] = a1\n 13436: a1 = u64 [s1 + 0x50]\n 13439: u64 [a3 + 0xd0] = a1\n 13443: a1 = u64 [s1 + 0x48]\n 13446: u64 [a3 + 0xd8] = a1\n 13450: a1 = s1 + 0x1c00\n 13454: a2 = u64 [s1 + 0x40]\n 13457: u64 [a3 + 0xe0] = a2\n 13461: a0 = 0\n 13463: ra = 348, jump @19\n      : @364 [@dyn 174] (gas: 1)\n 13469: t0 = 350, jump @1181\n      : @365 [@dyn 175] (gas: 1)\n 13475: ra = 352, jump @26\n      : @366 [@dyn 176] (gas: 1)\n 13481: t0 = 354, jump @1183\n      : @367 [@dyn 177] (gas: 28)\n 13487: ecalli 6 // 'hash_keccak_256'\n 13489: u64 [s1 + 440] = 0x20\n 13494: t0 = 0\n 13496: u64 [s1 + 432] = 0\n 13500: u64 [s1 + 424] = 0\n 13504: a4 = 0\n 13506: a5 = 0\n 13508: ra = 0\n 13510: u64 [s1 + 416] = 0\n 13514: a3 = u64 [s1 + 0x190]\n 13518: a0 = u64 [a3 + 0x18]\n 13521: a1 = u64 [a3 + 0x10]\n 13524: a2 = u64 [a3 + 0x8]\n 13527: t1 = u64 [a3]\n 13529: a0 = reverse a0\n 13531: a1 = reverse a1\n 13533: a3 = reverse a2\n 13535: t1 = reverse t1\n 13537: t2 = t1\n 13539: a2 = u64 [s1 + 0x198]\n 13543: u64 [a2 + 0x18] = t1\n 13546: u64 [s1 + 0x188] = a3\n 13550: u64 [a2 + 0x10] = a3\n 13553: u64 [s1 + 0x190] = a1\n 13557: u64 [a2 + 0x8] = a1\n 13560: a3 = a0\n 13562: u64 [a2] = a0\n 13564: fallthrough\n      : @368 (gas: 25)\n 13565: u64 [s1 + 0x180] = t2\n 13569: t1 = a3\n 13571: a0 = u64 [s1 + 0x128]\n 13575: u64 [s1 + 0x178] = a4\n 13579: a0 = a4 <u a0\n 13582: a4 = a0 ^ 0x1\n 13585: u64 [s1 + 0x170] = a5\n 13589: a4 = 0x1 if a5 != 0\n 13592: a5 = s1 + 0x100\n 13596: a0 = u64 [a5 + 0xa0]\n 13600: a0 = ra | a0\n 13603: a4 = 0x1 if a0 != 0\n 13606: a1 = u64 [a5 + 0x50]\n 13609: a0 = u64 [a5 + 0xb8]\n 13613: a1 = a1 + a0\n 13616: a3 = u64 [a5 + 0x48]\n 13619: a3 = a3 + t0\n 13622: a2 = u64 [a5 + 0x38]\n 13625: a0 = u64 [a5 + 0xb0]\n 13629: a2 = a2 + a0\n 13632: a0 = u64 [a5 + 0x40]\n 13635: t2 = u64 [s1 + 0x1a8]\n 13639: t2 = t2 + a0\n 13642: a0 = u64 [a5 + 0x30]\n 13645: jump @379 if a4 != 0\n      : @369 (gas: 9)\n 13649: a0 = u64 [s1 + 0x1b8]\n 13653: a4 = a1 <u a0\n 13656: a3 = a3 + a4\n 13659: a0 = t0\n 13661: t0 = a3 ^ t0\n 13664: u64 [s1 + 0x160] = a0\n 13668: a5 = a3 <u a0\n 13671: a5 = a4 if t0 == 0\n 13674: t0 = 356, jump @1179\n      : @370 [@dyn 178] (gas: 1)\n 13680: jump @372 if a0 == 0\n      : @371 (gas: 1)\n 13683: jump @929\n      : @372 (gas: 3)\n 13686: a0 = s1 + 0x14a0\n 13690: u64 [s1 + 0x158] = ra\n 13694: ra = 358, jump @17\n      : @373 [@dyn 179] (gas: 2)\n 13700: a0 = 0x1000\n 13704: t0 = 360, jump @1214\n      : @374 [@dyn 180] (gas: 13)\n 13710: a0 = u64 [a4 + 0x80]\n 13714: a1 = u64 [a4 + 0x78]\n 13717: a2 = u64 [a4 + 0x70]\n 13720: a3 = u64 [a4 + 0x68]\n 13723: a4 = s1 + 0x2938\n 13727: u64 [a4] = a0\n 13729: a0 = a4 + 0xffffffffffffff00\n 13733: u64 [a0 + 0xf8] = a1\n 13737: u64 [a0 + 0xf0] = a2\n 13741: u64 [a0 + 0xe8] = a3\n 13745: a1 = s1 + 0x2920\n 13749: a0 = u64 [s1 + 0x198]\n 13753: ra = 362, jump @23\n      : @375 [@dyn 181] (gas: 56)\n 13759: t2 = u64 [s1 + 0x168]\n 13763: t2 = t2 + 0x1\n 13766: a0 = t2 <u 0x1\n 13769: t0 = u64 [s1 + 0x190]\n 13773: t0 = t0 + a0\n 13776: a0 = t2 | t0\n 13779: a0 = a0 <u 0x1\n 13782: a1 = u64 [s1 + 0x188]\n 13786: t1 = a1 + a0\n 13789: a1 = t1 <u a1\n 13792: a0 = u64 [s1 + 0x180]\n 13796: a0 = a0 + a1\n 13799: a1 = u64 [s1 + 0x1b8]\n 13803: a2 = a1 + 0x20\n 13806: u64 [s1 + 0x180] = a2\n 13810: a3 = a2 <u a1\n 13813: a1 = u64 [s1 + 0x160]\n 13817: a2 = a1 + a3\n 13820: u64 [s1 + 0x168] = a2\n 13824: a4 = a2 <u a1\n 13827: a4 = a3 if a3 == 0\n 13830: a1 = u64 [s1 + 0x1b0]\n 13834: ra = a1 + a4\n 13837: a4 = ra <u a1\n 13840: a1 = u64 [s1 + 0x1a8]\n 13844: a1 = a1 + a4\n 13847: u64 [s1 + 0x1a8] = a1\n 13851: a1 = u64 [s1 + 0x178]\n 13855: a4 = a1 + 0x20\n 13858: a5 = a4 <u a1\n 13861: a2 = u64 [s1 + 0x170]\n 13865: a1 = a2 + a5\n 13868: a2 = a1 <u a2\n 13871: a2 = a5 if a5 == 0\n 13874: a3 = u64 [s1 + 0x158]\n 13878: a2 = a2 + a3\n 13881: a5 = a2 <u a3\n 13884: a3 = u64 [s1 + 0x1a0]\n 13888: a3 = a3 + a5\n 13891: u64 [s1 + 0x1a0] = a3\n 13895: u64 [s1 + 0x190] = t0\n 13899: a5 = u64 [s1 + 0x198]\n 13903: u64 [a5 + 0x8] = t0\n 13906: a3 = t2\n 13908: u64 [a5] = t2\n 13910: u64 [a5 + 0x10] = t1\n 13913: t2 = a0\n 13915: u64 [a5 + 0x18] = a0\n 13918: u64 [s1 + 0x188] = t1\n 13922: a0 = u64 [s1 + 0x180]\n 13926: u64 [s1 + 0x1b8] = a0\n 13930: t0 = u64 [s1 + 0x168]\n 13934: u64 [s1 + 0x1b0] = ra\n 13938: a5 = a1\n 13940: ra = a2\n 13942: jump @368\n      : @376 (gas: 5)\n 13945: a0 = a1 | a2\n 13948: a1 = u64 [s1 + 0x130]\n 13952: a0 = a0 | a1\n 13955: a2 = u64 [s1 + 0x150]\n 13959: jump @395 if a0 != 0\n      : @377 (gas: 1)\n 13963: t0 = 364, jump @1172\n      : @378 [@dyn 182] (gas: 6)\n 13969: a2 = u64 [s1 + 0x20]\n 13972: t0 = u64 [s1 + 0x18]\n 13975: a4 = u64 [s1 + 0x38]\n 13978: a5 = u64 [s1 + 0x28]\n 13981: t1 = u64 [s1 + 0x30]\n 13984: jump @400\n      : @379 (gas: 11)\n 13987: ra = t0\n 13989: a4 = u64 [s1 + 0x98]\n 13993: a5 = u64 [s1 + 0x128]\n 13997: a4 = a4 ^ a5\n 14000: a5 = u64 [s1 + 0x70]\n 14003: a4 = a4 | a5\n 14006: a4 = a4 | a0\n 14009: t1 = u64 [s1 + 0x38]\n 14012: t0 = u64 [s1 + 0x30]\n 14015: a5 = u64 [s1 + 0x28]\n 14018: jump @394 if a4 == 0\n      : @380 (gas: 12)\n 14022: a0 = u64 [s1 + 0x1b8]\n 14026: a4 = a1 <u a0\n 14029: a3 = a3 + a4\n 14032: t0 = a3 ^ ra\n 14035: a5 = a3 <u ra\n 14038: a5 = a4 if t0 == 0\n 14041: a5 = a5 + a2\n 14044: a4 = a5 <u a2\n 14047: a0 = u64 [s1 + 0x1b0]\n 14051: a2 = a2 <u a0\n 14054: a0 = t2 + a2\n 14057: t0 = 366, jump @1161\n      : @381 [@dyn 183] (gas: 1)\n 14063: jump @383 if a0 == 0\n      : @382 (gas: 1)\n 14066: jump @929\n      : @383 (gas: 2)\n 14069: a0 = s1 + 0x1be0\n 14073: ra = 368, jump @17\n      : @384 [@dyn 184] (gas: 3)\n 14079: a0 = s1 + 0x1938\n 14083: a2 = a0 + 0x200\n 14087: t0 = 370, jump @1203\n      : @385 [@dyn 185] (gas: 2)\n 14093: a0 = u64 [s1 + 0x98]\n 14097: t0 = 372, jump @1158\n      : @386 [@dyn 186] (gas: 1)\n 14103: ra = 374, jump @1221\n      : @387 [@dyn 187] (gas: 1)\n 14109: t0 = 376, jump @1165\n      : @388 [@dyn 188] (gas: 1)\n 14115: ra = 378, jump @1216\n      : @389 [@dyn 189] (gas: 1)\n 14121: t0 = 380, jump @1154\n      : @390 [@dyn 190] (gas: 1)\n 14127: ra = 382, jump @1216\n      : @391 [@dyn 191] (gas: 1)\n 14133: t0 = 384, jump @1153\n      : @392 [@dyn 192] (gas: 7)\n 14139: u64 [a4 + 0x20] = a3\n 14142: u64 [a4 + 0x18] = a2\n 14145: u64 [a4 + 0x10] = a1\n 14148: u64 [a4 + 0x8] = a0\n 14151: a1 = s1 + 0x2940\n 14155: a0 = u64 [s1 + 0x198]\n 14159: ra = 386, jump @23\n      : @393 [@dyn 193] (gas: 4)\n 14165: a5 = u64 [s1 + 0x28]\n 14168: t0 = u64 [s1 + 0x30]\n 14171: t1 = u64 [s1 + 0x38]\n 14174: fallthrough\n      : @394 (gas: 15)\n 14175: a0 = u64 [s1 + 0x20]\n 14178: a1 = u64 [s1 + 0x18]\n 14181: a0 = a0 | a1\n 14184: a1 = a5 | t1\n 14187: a2 = u64 [s1 + 0x10]\n 14190: a2 = t0 | a2\n 14193: a3 = u64 [s1 + 0x8]\n 14196: a3 = a3 + 0x1\n 14199: a4 = s1 + 0x2938\n 14203: u64 [a4 + 0x28] = a3\n 14206: u64 [a4 + 0x30] = a2\n 14209: u64 [a4 + 0x38] = a1\n 14212: u64 [a4 + 0x40] = a0\n 14215: a0 = 0x2960\n 14219: jump @408\n      : @395 (gas: 4)\n 14222: a4 = s1 + 0x100\n 14226: a0 = u64 [a4 + 0x40]\n 14229: a1 = u64 [a4 + 0x38]\n 14232: t0 = 388, jump @1215\n      : @396 [@dyn 194] (gas: 4)\n 14238: a3 = u64 [a4 + 0x48]\n 14241: a1 = 0 if a3 != 0\n 14243: a1 = 0 if a0 != 0\n 14245: jump @398 if a1 != 0\n      : @397 (gas: 1)\n 14248: jump @929\n      : @398 (gas: 3)\n 14251: i32 a1 = a2 + 0x20\n 14254: a0 = s1 + 0x1c20\n 14258: ra = 390, jump @17\n      : @399 [@dyn 195] (gas: 16)\n 14264: a5 = u64 [s1 + 0x28]\n 14267: t1 = u64 [s1 + 0x30]\n 14270: a4 = u64 [s1 + 0x38]\n 14273: t0 = u64 [s1 + 0x18]\n 14276: a2 = u64 [s1 + 0x20]\n 14279: a0 = s1 + 0x1938\n 14283: a1 = u64 [a0 + 0x300]\n 14287: a3 = s1 + 0x100\n 14291: u64 [a3 + 0xb0] = a1\n 14295: a1 = u64 [a0 + 0x2f8]\n 14299: u64 [a3 + 0xa8] = a1\n 14303: a1 = u64 [a0 + 0x2f0]\n 14307: u64 [a3 + 0x98] = a1\n 14311: a0 = u64 [a0 + 0x2e8]\n 14315: u64 [a3 + 0xa0] = a0\n 14319: fallthrough\n      : @400 (gas: 10)\n 14320: a1 = u64 [s1 + 0x10]\n 14323: a0 = a5 | a4\n 14326: u64 [s1 + 0x190] = a0\n 14330: a0 = t0 | a2\n 14333: u64 [s1 + 0x188] = a0\n 14337: a0 = t1 | a1\n 14340: u64 [s1 + 0x180] = a0\n 14344: a1 = u64 [s1 + 0x98]\n 14348: a1 = a1 << 0x3\n 14351: t0 = 392, jump @1168\n      : @401 [@dyn 196] (gas: 1)\n 14357: ra = 394, jump @1221\n      : @402 [@dyn 197] (gas: 7)\n 14363: u64 [s1 + 0x160] = a0\n 14367: u64 [s1 + 0x178] = a1\n 14371: a0 = u64 [s1 + 0x98]\n 14375: i32 a2 = a0 << 0x3\n 14378: a0 = 0xffffffffffffffff\n 14381: a1 = 0xffffffffffffffff\n 14384: ra = 396, jump @1216\n      : @403 [@dyn 198] (gas: 1)\n 14390: t0 = 398, jump @1156\n      : @404 [@dyn 199] (gas: 1)\n 14396: ra = 400, jump @1216\n      : @405 [@dyn 200] (gas: 1)\n 14402: t0 = 402, jump @1151\n      : @406 [@dyn 201] (gas: 4)\n 14408: a4 = u64 [s1 + 0x8]\n 14411: a0 = a0 | a4\n 14414: a5 = s1 + 0x100\n 14418: t0 = 404, jump @1177\n      : @407 [@dyn 202] (gas: 6)\n 14424: u64 [a4 + 0x58] = a2\n 14427: u64 [a4 + 0x60] = a3\n 14430: u64 [a4 + 0x50] = a1\n 14433: u64 [a4 + 0x48] = a0\n 14436: a0 = 0x2980\n 14440: fallthrough\n      : @408 (gas: 3)\n 14441: a1 = s1 + a0\n 14444: a0 = u64 [s1 + 0x88]\n 14448: ra = 406, jump @23\n      : @409 [@dyn 203] (gas: 8)\n 14454: a0 = sp + 0xffffffffffffffe0\n 14457: a0 = a0 & 0xffffffffffffffe0\n 14460: sp = a0\n 14462: a1 = u64 [s1 + 0x78]\n 14465: a4 = a1 + 0x2\n 14468: a1 = a4 <u a1\n 14471: a3 = u64 [s1 + 0x80]\n 14475: t0 = 408, jump @1204\n      : @410 [@dyn 204] (gas: 12)\n 14481: a1 = u64 [s1 + 0x68]\n 14484: a3 = a3 + a1\n 14487: a1 = a3 <u a1\n 14490: a5 = u64 [s1 + 0x60]\n 14493: a1 = a1 + a5\n 14496: u64 [a0 + 0x10] = a3\n 14499: u64 [a0 + 0x8] = a2\n 14502: u64 [a0] = a4\n 14504: u64 [a0 + 0x18] = a1\n 14507: u64 [s1 + 0x130] = a0\n 14511: a1 = u64 [s1 + 0xb8]\n 14515: ra = 410, jump @23\n      : @411 [@dyn 205] (gas: 32)\n 14521: a3 = u64 [s1 + 0x78]\n 14524: a1 = u64 [s1 + 0x80]\n 14528: t0 = u64 [s1 + 0x68]\n 14531: a0 = sp + 0xffffffffffffffe0\n 14534: t2 = a0 & 0xffffffffffffffe0\n 14537: sp = t2\n 14539: t1 = a3 + 0x3\n 14542: a0 = t1 <u a3\n 14545: ra = a1 + a0\n 14548: a1 = ra <u a1\n 14551: a1 = a0 if a0 == 0\n 14554: a4 = t0 + a1\n 14557: a1 = u64 [s1 + 0x120]\n 14561: a2 = u64 [s1 + 0x110]\n 14565: a0 = a1 | a2\n 14568: a5 = u64 [s1 + 0x118]\n 14572: a3 = u64 [s1 + 0x108]\n 14576: a5 = a5 | a3\n 14579: a0 = a0 | a5\n 14582: a0 = a0 >> 0x20\n 14585: a5 = a5 | a2\n 14588: a5 = a5 << 0x20\n 14591: a0 = a0 | a5\n 14594: a5 = a4 <u t0\n 14597: t0 = u64 [s1 + 0x60]\n 14600: t0 = t0 + a5\n 14603: u64 [t2 + 0x18] = t0\n 14606: u64 [t2 + 0x10] = a4\n 14609: u64 [t2 + 0x8] = ra\n 14612: u64 [s1 + 0x140] = t2\n 14616: u64 [t2] = t1\n 14618: jump @413 if a0 == 0\n      : @412 (gas: 1)\n 14621: jump @929\n      : @413 (gas: 6)\n 14624: u64 [s1 + 0x88] = t0\n 14628: u64 [s1 + 0x98] = a4\n 14632: u64 [s1 + 0xb8] = ra\n 14636: u64 [s1 + 0x128] = t1\n 14640: a0 = s1 + 0x1bc0\n 14644: ra = 412, jump @17\n      : @414 [@dyn 206] (gas: 3)\n 14650: a2 = s1 + 0x1938\n 14654: a0 = a2 + 0x200\n 14658: t0 = 414, jump @1193\n      : @415 [@dyn 207] (gas: 8)\n 14664: u64 [a3 + 0x38] = a1\n 14667: u64 [a3 + 0x68] = a4\n 14670: a1 = a1 | a4\n 14673: u64 [s1 + 0x70] = a0\n 14676: u64 [a3 + 0x50] = a5\n 14679: u64 [a3 + 0x60] = a1\n 14682: a0 = a5 if a1 != 0\n 14685: jump @417 if a0 == 0\n      : @416 (gas: 1)\n 14688: jump @948\n      : @417 (gas: 5)\n 14691: a0 = u64 [a2 + 0x288]\n 14695: u64 [s1 + 0x148] = a0\n 14699: a0 = s1 + 0x1ba0\n 14703: a1 = u64 [s1 + 0x140]\n 14707: ra = 416, jump @21\n      : @418 [@dyn 208] (gas: 3)\n 14713: a4 = s1 + 0x1938\n 14717: a5 = a4 + 0x200\n 14721: t0 = 418, jump @1201\n      : @419 [@dyn 209] (gas: 5)\n 14727: i32 a0 = a0 + 0xfffffffffffffb80\n 14731: a0 = a0 + s1\n 14734: a1 = s1 + 0x1b60\n 14738: u64 [a5 + 0x28] = a2\n 14741: ra = 420, jump @1120\n      : @420 [@dyn 210] (gas: 19)\n 14747: a0 = s1 + 0x1938\n 14751: a1 = a0 + 0x200\n 14755: a3 = u64 [a1 + 0x60]\n 14758: a4 = u64 [a1 + 0x58]\n 14761: a5 = u64 [a1 + 0x50]\n 14764: t0 = u64 [a0 + 0x248]\n 14768: a0 = a3 >u 0\n 14770: a1 = a4 >u 0\n 14772: a1 = a0 if a3 != 0\n 14775: a0 = a5 >u 0\n 14777: a2 = t0 <u 0x20\n 14780: a2 = a2 ^ 0x1\n 14783: a2 = a0 if a5 != 0\n 14786: a0 = a4 | a3\n 14789: a2 = a1 if a0 != 0\n 14792: a0 = u64 [s1 + 0x148]\n 14796: a0 = a0 <u 0x20\n 14799: u64 [s1 + 0x158] = a0\n 14803: jump @435 if a2 == 0\n      : @421 (gas: 18)\n 14807: u64 [s1 + 0x190] = t0\n 14811: a2 = s1 + 0x100\n 14815: u64 [a2 + 0x98] = a5\n 14819: u64 [a2 + 0xb0] = a4\n 14823: u64 [a2 + 0xa0] = a3\n 14827: a0 = s1 + 0x1938\n 14831: a1 = u64 [a2 + 0x28]\n 14834: a3 = a0 + 0x200\n 14838: u64 [a3 + 0x8] = a1\n 14841: a1 = u64 [s1 + 0xb8]\n 14845: u64 [a3 + 0x10] = a1\n 14848: a1 = u64 [s1 + 0x98]\n 14852: u64 [a3 + 0x18] = a1\n 14855: a1 = s1 + 0x1b40\n 14859: a2 = u64 [s1 + 0x88]\n 14863: u64 [a3 + 0x20] = a2\n 14866: a0 = 0\n 14868: ra = 422, jump @19\n      : @422 [@dyn 211] (gas: 3)\n 14874: a2 = u64 [s1 + 0xa8]\n 14878: a0 = i32 [a2]\n 14880: jump @424 if a0 >u 31\n      : @423 (gas: 3)\n 14884: u32 [a2 + 0] = 0x20\n 14887: t0 = 0x1a8\n 14891: jump @1170\n      : @424 (gas: 1)\n 14894: t0 = 424, jump @1170\n      : @425 [@dyn 212] (gas: 5)\n 14900: ra = 0x1aa\n 14904: ecalli 6 // 'hash_keccak_256'\n 14906: a0 = u64 [s1 + 0x148]\n 14910: t0 = 0x1ac\n 14914: jump @1180\n      : @426 [@dyn 213] (gas: 2)\n 14917: a0 = u64 [s1 + 0x148]\n 14921: t0 = 428, jump @1180\n      : @427 [@dyn 214] (gas: 2)\n 14927: a4 = u64 [s1 + 0x138]\n 14931: t0 = 430, jump @1155\n      : @428 [@dyn 215] (gas: 29)\n 14937: t0 = t2 + a0\n 14940: a0 = t0 <u t2\n 14943: a5 = a2 + a0\n 14946: a4 = a4 + a5\n 14949: u64 [s1 + 0x1b8] = a4\n 14953: a5 = a4 ^ a2\n 14956: a3 = a4 <u a2\n 14959: a3 = a0 if a5 == 0\n 14962: u64 [s1 + 0x180] = a3\n 14966: a0 = u64 [s1 + 0x190]\n 14970: ra = a0 + 0x1f\n 14973: a4 = ra <u a0\n 14976: a3 = u64 [s1 + 0x198]\n 14980: a0 = a3 + a4\n 14983: a5 = a0 <u a3\n 14986: a5 = a4 if a4 == 0\n 14989: t1 = u64 [s1 + 0x1b0]\n 14993: t1 = t1 + a5\n 14996: a4 = t1 << 0x3b\n 14999: a3 = a0 >> 0x5\n 15002: a3 = a3 | a4\n 15005: a0 = a0 << 0x3b\n 15008: a4 = ra >> 0x5\n 15011: a0 = a0 | a4\n 15014: a0 = a0 + t2\n 15017: u64 [s1 + 0x198] = a0\n 15021: a0 = a0 <u t2\n 15024: t2 = t0\n 15026: t0 = 432, jump @1189\n      : @429 [@dyn 216] (gas: 2)\n 15032: a3 = u64 [s1 + 0x168]\n 15036: t0 = 434, jump @1178\n      : @430 [@dyn 217] (gas: 8)\n 15042: t0 = u64 [a4]\n 15044: a4 = u64 [a4 + 0x8]\n 15047: a0 = a0 >> 0x5\n 15050: a3 = 0 if a1 != 0\n 15052: a0 = 0 if a1 != 0\n 15054: a1 = reverse a4\n 15056: a4 = reverse t0\n 15058: t0 = 436, jump @1167\n      : @431 [@dyn 218] (gas: 25)\n 15064: t0 = a0 + a3\n 15067: a0 = u64 [s1 + 0x1b0]\n 15071: a0 = t1 <u a0\n 15074: a3 = u64 [s1 + 0x1a0]\n 15078: a0 = a0 + a3\n 15081: a3 = t1 >> 0x5\n 15084: a5 = a0 << 0x3b\n 15087: a3 = a3 | a5\n 15090: a0 = a0 >> 0x5\n 15093: a0 = a0 + a4\n 15096: a5 = s1 + 0x100\n 15100: a4 = u64 [a5 + 0xb8]\n 15104: a3 = a3 + a1\n 15107: a1 = a3 <u a1\n 15110: a0 = a0 + a1\n 15113: a2 = a2 + a3\n 15116: u64 [a5 + 0x88] = a2\n 15120: a1 = a2 <u a3\n 15123: a0 = a0 + a1\n 15126: u64 [a5 + 0x80] = a0\n 15130: a0 = sp + 0xffffffffffffffe0\n 15133: t1 = a0 & 0xffffffffffffffe0\n 15136: sp = t1\n 15138: u64 [s1 + 0x178] = t1\n 15142: fallthrough\n      : @432 (gas: 21)\n 15143: a0 = u64 [s1 + 0x198]\n 15147: a0 = t2 <u a0\n 15150: a2 = u64 [s1 + 0x190]\n 15154: a1 = a4 ^ a2\n 15157: a2 = a4 <u a2\n 15160: a2 = a0 if a1 == 0\n 15163: a5 = u64 [s1 + 0x188]\n 15167: a0 = ra <u a5\n 15170: a3 = u64 [s1 + 0x180]\n 15174: a1 = t0 ^ a3\n 15177: a3 = t0 <u a3\n 15180: a3 = a0 if a1 == 0\n 15183: a0 = ra ^ a5\n 15186: a0 = a0 | a1\n 15189: a3 = a2 if a0 == 0\n 15192: u64 [t1] = t2\n 15194: u64 [t1 + 0x8] = a4\n 15197: u64 [t1 + 0x10] = ra\n 15200: u64 [t1 + 0x18] = t0\n 15203: a0 = s1 + 0x2938\n 15207: jump @435 if a3 == 0\n      : @433 (gas: 11)\n 15210: u64 [a0 + 128] = 0\n 15214: u64 [a0 + 120] = 0\n 15217: u64 [a0 + 112] = 0\n 15220: u64 [a0 + 104] = 0\n 15223: a1 = s1 + 0x29a0\n 15227: a0 = t1\n 15229: u64 [s1 + 0x1b0] = t2\n 15233: u64 [s1 + 0x1b8] = a4\n 15237: u64 [s1 + 0x1a8] = t0\n 15241: u64 [s1 + 0x1a0] = ra\n 15245: ra = 438, jump @23\n      : @434 [@dyn 219] (gas: 15)\n 15251: t1 = u64 [s1 + 0x178]\n 15255: t0 = u64 [s1 + 0x1a8]\n 15259: a4 = u64 [s1 + 0x1b8]\n 15263: t2 = u64 [s1 + 0x1b0]\n 15267: t2 = t2 + 0x1\n 15270: a0 = t2 <u 0x1\n 15273: a4 = a4 + a0\n 15276: a0 = t2 | a4\n 15279: a0 = a0 <u 0x1\n 15282: a1 = u64 [s1 + 0x1a0]\n 15286: a0 = a0 + a1\n 15289: a1 = a0 <u a1\n 15292: t0 = t0 + a1\n 15295: ra = a0\n 15297: jump @432\n      : @435 (gas: 22)\n 15300: a4 = s1 + 0x100\n 15304: a0 = u64 [a4 + 0x58]\n 15307: a0 = a0 ^ 0x1\n 15310: a3 = u64 [a4 + 0x70]\n 15313: a1 = u64 [s1 + 0x70]\n 15316: a0 = a1 if a3 != 0\n 15319: a1 = u64 [a4 + 0x50]\n 15322: a2 = u64 [a4 + 0x60]\n 15325: a0 = a1 if a2 != 0\n 15328: t2 = u64 [s1 + 0x168]\n 15332: a5 = a3 | t2\n 15335: a2 = u64 [a4 + 0x38]\n 15338: t1 = a2 >> 0x3f\n 15341: t2 = t2 << 0x1\n 15344: ra = a3 >> 0x3f\n 15347: a1 = a2 << 0x1\n 15350: u64 [s1 + 0x70] = a1\n 15353: a1 = u64 [a4 + 0x48]\n 15356: t0 = a1 >> 0x3f\n 15359: a3 = a3 << 0x1\n 15362: a4 = a1 << 0x1\n 15365: jump @448 if a0 == 0\n      : @436 (gas: 22)\n 15369: u64 [s1 + 0x8] = a5\n 15372: u64 [s1 + 0x10] = a3\n 15375: u64 [s1 + 0x18] = ra\n 15378: u64 [s1 + 0x20] = t0\n 15381: u64 [s1 + 0x28] = t2\n 15384: u64 [s1 + 0x30] = t1\n 15387: u64 [s1 + 0x38] = a4\n 15390: a1 = a1 & 0xffffffffffffffe0\n 15393: u64 [s1 + 0x150] = a1\n 15397: a0 = s1 + 0x1938\n 15401: a1 = u64 [s1 + 0x128]\n 15405: a3 = a0 + 0x100\n 15409: u64 [a3 + 0xc8] = a1\n 15413: a1 = u64 [s1 + 0xb8]\n 15417: u64 [a3 + 0xd0] = a1\n 15421: a1 = u64 [s1 + 0x98]\n 15425: u64 [a3 + 0xd8] = a1\n 15429: a1 = s1 + 0x1b00\n 15433: a2 = u64 [s1 + 0x88]\n 15437: u64 [a3 + 0xe0] = a2\n 15441: a0 = 0\n 15443: ra = 440, jump @19\n      : @437 [@dyn 220] (gas: 1)\n 15449: t0 = 442, jump @1181\n      : @438 [@dyn 221] (gas: 1)\n 15455: ra = 444, jump @26\n      : @439 [@dyn 222] (gas: 37)\n 15461: a1 = sp + 0xffffffffffffffe0\n 15464: a1 = a1 & 0xffffffffffffffe0\n 15467: u64 [s1 + 0x1a0] = a1\n 15471: sp = a1\n 15473: i32 a0 = a0 + 0\n 15475: i32 a2 = a1 + 0\n 15477: a1 = 0x20\n 15480: ecalli 6 // 'hash_keccak_256'\n 15482: u64 [s1 + 440] = 0x20\n 15487: t2 = 0\n 15489: t1 = 0\n 15491: u64 [s1 + 432] = 0\n 15495: a4 = 0\n 15497: a5 = 0\n 15499: a2 = 0\n 15501: u64 [s1 + 424] = 0\n 15505: a3 = u64 [s1 + 0x1a0]\n 15509: a0 = u64 [a3 + 0x18]\n 15512: a1 = u64 [a3 + 0x10]\n 15515: t0 = u64 [a3 + 0x8]\n 15518: a3 = u64 [a3]\n 15520: a0 = reverse a0\n 15522: u64 [s1 + 0x1a0] = a0\n 15526: ra = reverse a1\n 15528: a1 = reverse t0\n 15530: a3 = reverse a3\n 15532: t0 = a3\n 15534: a0 = u64 [s1 + 0x198]\n 15538: u64 [a0 + 0x18] = a3\n 15541: u64 [s1 + 0x158] = a1\n 15545: u64 [a0 + 0x10] = a1\n 15548: u64 [s1 + 0x190] = ra\n 15552: u64 [a0 + 0x8] = ra\n 15555: a1 = u64 [s1 + 0x1a0]\n 15559: a3 = a1\n 15561: u64 [a0] = a1\n 15563: fallthrough\n      : @440 (gas: 25)\n 15564: u64 [s1 + 0x188] = t0\n 15568: u64 [s1 + 0x1a0] = a3\n 15572: a0 = u64 [s1 + 0x150]\n 15576: u64 [s1 + 0x170] = a4\n 15580: a0 = a4 <u a0\n 15583: a4 = a0 ^ 0x1\n 15586: u64 [s1 + 0x168] = a5\n 15590: a4 = 0x1 if a5 != 0\n 15593: u64 [s1 + 0x180] = a2\n 15597: a0 = u64 [s1 + 0x1a8]\n 15601: a0 = a0 | a2\n 15604: a4 = 0x1 if a0 != 0\n 15607: a5 = u64 [s1 + 0x120]\n 15611: a1 = u64 [s1 + 0x1b8]\n 15615: a1 = a1 + a5\n 15618: a3 = u64 [s1 + 0x118]\n 15622: u64 [s1 + 0x160] = t2\n 15626: t0 = a3 + t2\n 15629: ra = u64 [s1 + 0x110]\n 15633: u64 [s1 + 0x178] = t1\n 15637: a2 = ra + t1\n 15640: t1 = u64 [s1 + 0x108]\n 15644: a0 = u64 [s1 + 0x1b0]\n 15648: t1 = t1 + a0\n 15651: jump @450 if a4 != 0\n      : @441 (gas: 6)\n 15655: t2 = a1 <u a5\n 15658: a4 = t0 + t2\n 15661: t0 = a4 ^ a3\n 15664: a5 = a4 <u a3\n 15667: a5 = t2 if t0 == 0\n 15670: t0 = 446, jump @1190\n      : @442 [@dyn 223] (gas: 1)\n 15676: jump @444 if a0 == 0\n      : @443 (gas: 1)\n 15679: jump @929\n      : @444 (gas: 2)\n 15682: a0 = s1 + 0x1500\n 15686: ra = 448, jump @17\n      : @445 [@dyn 224] (gas: 2)\n 15692: a0 = 0x1000\n 15696: t0 = 450, jump @1214\n      : @446 [@dyn 225] (gas: 12)\n 15702: a0 = u64 [a4 + 0xe0]\n 15706: a1 = u64 [a4 + 0xd8]\n 15710: a2 = u64 [a4 + 0xd0]\n 15714: a3 = u64 [a4 + 0xc8]\n 15718: a4 = s1 + 0x2938\n 15722: u64 [a4 + 0xa0] = a0\n 15726: u64 [a4 + 0x98] = a1\n 15730: u64 [a4 + 0x90] = a2\n 15734: u64 [a4 + 0x88] = a3\n 15738: a1 = s1 + 0x29c0\n 15742: a0 = u64 [s1 + 0x198]\n 15746: ra = 452, jump @23\n      : @447 [@dyn 226] (gas: 55)\n 15752: t0 = u64 [s1 + 0x1a0]\n 15756: t0 = t0 + 0x1\n 15759: a0 = t0 <u 0x1\n 15762: t1 = u64 [s1 + 0x190]\n 15766: t1 = t1 + a0\n 15769: a0 = t0 | t1\n 15772: a0 = a0 <u 0x1\n 15775: a1 = u64 [s1 + 0x158]\n 15779: t2 = a1 + a0\n 15782: a1 = t2 <u a1\n 15785: a0 = u64 [s1 + 0x188]\n 15789: a0 = a0 + a1\n 15792: a1 = u64 [s1 + 0x1b8]\n 15796: a2 = a1 + 0x20\n 15799: u64 [s1 + 0x1a0] = a2\n 15803: a3 = a2 <u a1\n 15806: a1 = u64 [s1 + 0x160]\n 15810: a2 = a1 + a3\n 15813: u64 [s1 + 0x188] = a2\n 15817: a4 = a2 <u a1\n 15820: a4 = a3 if a3 == 0\n 15823: a1 = u64 [s1 + 0x178]\n 15827: ra = a1 + a4\n 15830: a4 = ra <u a1\n 15833: a1 = u64 [s1 + 0x1b0]\n 15837: a1 = a1 + a4\n 15840: u64 [s1 + 0x1b0] = a1\n 15844: a1 = u64 [s1 + 0x170]\n 15848: a4 = a1 + 0x20\n 15851: a5 = a4 <u a1\n 15854: a2 = u64 [s1 + 0x168]\n 15858: a1 = a2 + a5\n 15861: a2 = a1 <u a2\n 15864: a2 = a5 if a5 == 0\n 15867: a3 = u64 [s1 + 0x180]\n 15871: a2 = a2 + a3\n 15874: a5 = a2 <u a3\n 15877: a3 = u64 [s1 + 0x1a8]\n 15881: a3 = a3 + a5\n 15884: u64 [s1 + 0x1a8] = a3\n 15888: u64 [s1 + 0x190] = t1\n 15892: a5 = u64 [s1 + 0x198]\n 15896: u64 [a5 + 0x8] = t1\n 15899: a3 = t0\n 15901: u64 [a5] = t0\n 15903: u64 [a5 + 0x10] = t2\n 15906: t0 = a0\n 15908: u64 [a5 + 0x18] = a0\n 15911: u64 [s1 + 0x158] = t2\n 15915: a0 = u64 [s1 + 0x1a0]\n 15919: u64 [s1 + 0x1b8] = a0\n 15923: t2 = u64 [s1 + 0x188]\n 15927: t1 = ra\n 15929: a5 = a1\n 15931: jump @440\n      : @448 (gas: 6)\n 15934: a0 = a1 | a2\n 15937: a0 = a0 | a5\n 15940: a5 = u64 [s1 + 0x120]\n 15944: a2 = u64 [s1 + 0x118]\n 15948: a1 = u64 [s1 + 0x110]\n 15952: jump @465 if a0 != 0\n      : @449 (gas: 6)\n 15956: u64 [s1 + 0x38] = a4\n 15959: u64 [s1 + 416] = 0\n 15963: u64 [s1 + 408] = 0\n 15967: u64 [s1 + 424] = 0\n 15971: u64 [s1 + 432] = 0\n 15975: jump @469\n      : @450 (gas: 8)\n 15978: a4 = u64 [s1 + 0x148]\n 15982: a0 = u64 [s1 + 0x150]\n 15986: a4 = a4 ^ a0\n 15989: a0 = u64 [s1 + 0x138]\n 15993: a4 = a4 | a0\n 15996: a0 = u64 [s1 + 0x8]\n 15999: a4 = a4 | a0\n 16002: jump @464 if a4 == 0\n      : @451 (gas: 6)\n 16006: t2 = a1 <u a5\n 16009: a4 = t0 + t2\n 16012: t0 = a4 ^ a3\n 16015: a5 = a4 <u a3\n 16018: a5 = t2 if t0 == 0\n 16021: t0 = 454, jump @1190\n      : @452 [@dyn 227] (gas: 1)\n 16027: jump @454 if a0 == 0\n      : @453 (gas: 1)\n 16030: jump @929\n      : @454 (gas: 2)\n 16033: a0 = s1 + 0x1ae0\n 16037: ra = 456, jump @17\n      : @455 [@dyn 228] (gas: 3)\n 16043: a0 = s1 + 0x1938\n 16047: a2 = a0 + 0x100\n 16051: t0 = 458, jump @1203\n      : @456 [@dyn 229] (gas: 2)\n 16057: a0 = u64 [s1 + 0x148]\n 16061: t0 = 460, jump @1158\n      : @457 [@dyn 230] (gas: 1)\n 16067: ra = 462, jump @1221\n      : @458 [@dyn 231] (gas: 1)\n 16073: t0 = 464, jump @1165\n      : @459 [@dyn 232] (gas: 1)\n 16079: ra = 466, jump @1216\n      : @460 [@dyn 233] (gas: 1)\n 16085: t0 = 468, jump @1154\n      : @461 [@dyn 234] (gas: 1)\n 16091: ra = 470, jump @1216\n      : @462 [@dyn 235] (gas: 1)\n 16097: t0 = 472, jump @1153\n      : @463 [@dyn 236] (gas: 7)\n 16103: u64 [a4 + 0xc0] = a3\n 16107: u64 [a4 + 0xb8] = a2\n 16111: u64 [a4 + 0xb0] = a1\n 16115: u64 [a4 + 0xa8] = a0\n 16119: a1 = s1 + 0x29e0\n 16123: a0 = u64 [s1 + 0x198]\n 16127: ra = 474, jump @23\n      : @464 [@dyn 237] (gas: 18)\n 16133: a0 = u64 [s1 + 0x30]\n 16136: a1 = u64 [s1 + 0x28]\n 16139: a0 = a0 | a1\n 16142: a1 = u64 [s1 + 0x18]\n 16145: a2 = u64 [s1 + 0x70]\n 16148: a1 = a1 | a2\n 16151: a2 = u64 [s1 + 0x20]\n 16154: a3 = u64 [s1 + 0x10]\n 16157: a2 = a2 | a3\n 16160: a3 = u64 [s1 + 0x38]\n 16163: a3 = a3 + 0x1\n 16166: a4 = s1 + 0x2938\n 16170: u64 [a4 + 0xc8] = a3\n 16174: u64 [a4 + 0xd0] = a2\n 16178: u64 [a4 + 0xd8] = a1\n 16182: u64 [a4 + 0xe0] = a0\n 16186: a0 = 0x2a00\n 16190: jump @477\n      : @465 (gas: 7)\n 16193: a0 = u64 [s1 + 0x108]\n 16197: a0 = a0 | a1\n 16200: a1 = 0xffffffe0\n 16210: a1 = a5 <u a1\n 16213: a1 = 0 if a2 != 0\n 16215: a1 = 0 if a0 != 0\n 16217: jump @467 if a1 != 0\n      : @466 (gas: 1)\n 16220: jump @929\n      : @467 (gas: 9)\n 16223: u64 [s1 + 0x38] = a4\n 16226: i32 a1 = a5 + 0x20\n 16229: a0 = s1 + 0x1b20\n 16233: u64 [s1 + 0x30] = t1\n 16236: u64 [s1 + 0x28] = t2\n 16239: u64 [s1 + 0x20] = t0\n 16242: u64 [s1 + 0x18] = ra\n 16245: u64 [s1 + 0x10] = a3\n 16248: ra = 476, jump @17\n      : @468 [@dyn 238] (gas: 17)\n 16254: a3 = u64 [s1 + 0x10]\n 16257: ra = u64 [s1 + 0x18]\n 16260: t0 = u64 [s1 + 0x20]\n 16263: t2 = u64 [s1 + 0x28]\n 16266: t1 = u64 [s1 + 0x30]\n 16269: a0 = s1 + 0x1938\n 16273: a1 = u64 [a0 + 0x200]\n 16277: a2 = s1 + 0x100\n 16281: u64 [a2 + 0xb0] = a1\n 16285: a4 = a0 + 0x100\n 16289: a1 = u64 [a4 + 0xf8]\n 16293: u64 [a2 + 0xa8] = a1\n 16297: a1 = u64 [a4 + 0xf0]\n 16301: u64 [a2 + 0x98] = a1\n 16305: a0 = u64 [a4 + 0xe8]\n 16309: u64 [a2 + 0xa0] = a0\n 16313: fallthrough\n      : @469 (gas: 10)\n 16314: a0 = u64 [s1 + 0x70]\n 16317: a0 = a0 | ra\n 16320: u64 [s1 + 0x190] = a0\n 16324: a0 = t2 | t1\n 16327: u64 [s1 + 0x188] = a0\n 16331: a0 = a3 | t0\n 16334: u64 [s1 + 0x180] = a0\n 16338: a1 = u64 [s1 + 0x148]\n 16342: a1 = a1 << 0x3\n 16345: t0 = 478, jump @1168\n      : @470 [@dyn 239] (gas: 1)\n 16351: ra = 480, jump @1221\n      : @471 [@dyn 240] (gas: 7)\n 16357: u64 [s1 + 0x160] = a0\n 16361: u64 [s1 + 0x178] = a1\n 16365: a0 = u64 [s1 + 0x148]\n 16369: i32 a2 = a0 << 0x3\n 16372: a0 = 0xffffffffffffffff\n 16375: a1 = 0xffffffffffffffff\n 16378: ra = 482, jump @1216\n      : @472 [@dyn 241] (gas: 1)\n 16384: t0 = 484, jump @1156\n      : @473 [@dyn 242] (gas: 1)\n 16390: ra = 486, jump @1216\n      : @474 [@dyn 243] (gas: 1)\n 16396: t0 = 488, jump @1151\n      : @475 [@dyn 244] (gas: 4)\n 16402: a4 = u64 [s1 + 0x38]\n 16405: a0 = a0 | a4\n 16408: a5 = s1 + 0x100\n 16412: t0 = 490, jump @1177\n      : @476 [@dyn 245] (gas: 6)\n 16418: u64 [a4 + 0xf8] = a2\n 16422: u64 [a4 + 0x100] = a3\n 16426: u64 [a4 + 0xf0] = a1\n 16430: u64 [a4 + 0xe8] = a0\n 16434: a0 = 0x2a20\n 16438: fallthrough\n      : @477 (gas: 3)\n 16439: a1 = s1 + a0\n 16442: a0 = u64 [s1 + 0x140]\n 16446: ra = 492, jump @23\n      : @478 [@dyn 246] (gas: 32)\n 16452: a0 = sp + 0xffffffffffffffe0\n 16455: a5 = a0 & 0xffffffffffffffe0\n 16458: sp = a5\n 16460: a0 = u64 [s1 + 0x78]\n 16463: t0 = a0 + 0x4\n 16466: a0 = t0 <u a0\n 16469: a1 = u64 [s1 + 0x80]\n 16473: t1 = a1 + a0\n 16476: a1 = t1 <u a1\n 16479: a1 = a0 if a0 == 0\n 16482: ra = u64 [s1 + 0x68]\n 16485: t2 = ra + a1\n 16488: a1 = u64 [s1 + 0x100]\n 16492: a2 = u64 [s1 + 0xe8]\n 16496: a0 = a1 | a2\n 16499: a3 = u64 [s1 + 0xf8]\n 16503: a4 = u64 [s1 + 0xf0]\n 16507: a3 = a3 | a4\n 16510: a0 = a0 | a3\n 16513: a0 = a0 >> 0x20\n 16516: a3 = a3 | a2\n 16519: a3 = a3 << 0x20\n 16522: a0 = a0 | a3\n 16525: a3 = t2 <u ra\n 16528: a2 = u64 [s1 + 0x60]\n 16531: a2 = a2 + a3\n 16534: u64 [a5 + 0x10] = t2\n 16537: u64 [a5 + 0x8] = t1\n 16540: u64 [a5] = t0\n 16542: u64 [s1 + 0x138] = a5\n 16546: u64 [a5 + 0x18] = a2\n 16549: jump @480 if a0 == 0\n      : @479 (gas: 1)\n 16552: jump @929\n      : @480 (gas: 6)\n 16555: u64 [s1 + 0x70] = a2\n 16558: u64 [s1 + 0x108] = t2\n 16562: u64 [s1 + 0x110] = t1\n 16566: u64 [s1 + 0x118] = t0\n 16570: a0 = s1 + 0x1ac0\n 16574: ra = 494, jump @17\n      : @481 [@dyn 247] (gas: 3)\n 16580: a2 = s1 + 0x1938\n 16584: a0 = a2 + 0x100\n 16588: t0 = 496, jump @1193\n      : @482 [@dyn 248] (gas: 8)\n 16594: u64 [a3 + 0x20] = a1\n 16597: u64 [a3 + 0x68] = a4\n 16600: a1 = a1 | a4\n 16603: u64 [a3 + 0x48] = a0\n 16606: u64 [a3 + 0x50] = a5\n 16609: u64 [a3 + 0x60] = a1\n 16612: a0 = a5 if a1 != 0\n 16615: jump @484 if a0 == 0\n      : @483 (gas: 1)\n 16618: jump @955\n      : @484 (gas: 5)\n 16621: a0 = u64 [a2 + 0x188]\n 16625: u64 [s1 + 0x140] = a0\n 16629: a0 = s1 + 0x1aa0\n 16633: a1 = u64 [s1 + 0x138]\n 16637: ra = 498, jump @21\n      : @485 [@dyn 249] (gas: 3)\n 16643: a4 = s1 + 0x1938\n 16647: a5 = a4 + 0x100\n 16651: t0 = 500, jump @1201\n      : @486 [@dyn 250] (gas: 5)\n 16657: i32 a0 = a0 + 0xfffffffffffffa80\n 16661: a0 = a0 + s1\n 16664: a1 = s1 + 0x1a60\n 16668: u64 [a5 + 0x28] = a2\n 16671: ra = 502, jump @1120\n      : @487 [@dyn 251] (gas: 19)\n 16677: a0 = s1 + 0x1938\n 16681: a1 = a0 + 0x100\n 16685: a3 = u64 [a1 + 0x60]\n 16688: a4 = u64 [a1 + 0x58]\n 16691: a5 = u64 [a1 + 0x50]\n 16694: t0 = u64 [a0 + 0x148]\n 16698: a0 = a3 >u 0\n 16700: a1 = a4 >u 0\n 16702: a1 = a0 if a3 != 0\n 16705: a0 = a5 >u 0\n 16707: a2 = t0 <u 0x20\n 16710: a2 = a2 ^ 0x1\n 16713: a2 = a0 if a5 != 0\n 16716: a0 = a4 | a3\n 16719: a2 = a1 if a0 != 0\n 16722: a0 = u64 [s1 + 0x140]\n 16726: a0 = a0 <u 0x20\n 16729: u64 [s1 + 0x158] = a0\n 16733: jump @502 if a2 == 0\n      : @488 (gas: 18)\n 16737: u64 [s1 + 0x190] = t0\n 16741: a2 = s1 + 0x100\n 16745: u64 [a2 + 0x98] = a5\n 16749: u64 [a2 + 0xb0] = a4\n 16753: u64 [a2 + 0xa0] = a3\n 16757: a0 = s1 + 0x1938\n 16761: a1 = u64 [a2 + 0x18]\n 16764: a3 = a0 + 0x100\n 16768: u64 [a3 + 0x8] = a1\n 16771: a1 = u64 [a2 + 0x10]\n 16774: u64 [a3 + 0x10] = a1\n 16777: a1 = u64 [a2 + 0x8]\n 16780: u64 [a3 + 0x18] = a1\n 16783: a1 = s1 + 0x1a40\n 16787: a2 = u64 [s1 + 0x70]\n 16790: u64 [a3 + 0x20] = a2\n 16793: a0 = 0\n 16795: ra = 504, jump @19\n      : @489 [@dyn 252] (gas: 3)\n 16801: a2 = u64 [s1 + 0xa8]\n 16805: a0 = i32 [a2]\n 16807: jump @491 if a0 >u 31\n      : @490 (gas: 3)\n 16811: u32 [a2 + 0] = 0x20\n 16814: t0 = 0x1fa\n 16818: jump @1170\n      : @491 (gas: 1)\n 16821: t0 = 506, jump @1170\n      : @492 [@dyn 253] (gas: 5)\n 16827: ra = 0x1fc\n 16831: ecalli 6 // 'hash_keccak_256'\n 16833: a0 = u64 [s1 + 0x140]\n 16837: t0 = 0x1fe\n 16841: jump @1180\n      : @493 [@dyn 254] (gas: 2)\n 16844: a0 = u64 [s1 + 0x140]\n 16848: t0 = 510, jump @1180\n      : @494 [@dyn 255] (gas: 2)\n 16854: a4 = u64 [s1 + 0x120]\n 16858: t0 = 512, jump @1155\n      : @495 [@dyn 256] (gas: 29)\n 16864: t0 = t2 + a0\n 16867: a0 = t0 <u t2\n 16870: a5 = a2 + a0\n 16873: a4 = a4 + a5\n 16876: u64 [s1 + 0x1b8] = a4\n 16880: a5 = a4 ^ a2\n 16883: a3 = a4 <u a2\n 16886: a3 = a0 if a5 == 0\n 16889: u64 [s1 + 0x180] = a3\n 16893: a0 = u64 [s1 + 0x190]\n 16897: ra = a0 + 0x1f\n 16900: a4 = ra <u a0\n 16903: a3 = u64 [s1 + 0x198]\n 16907: a0 = a3 + a4\n 16910: a5 = a0 <u a3\n 16913: a5 = a4 if a4 == 0\n 16916: t1 = u64 [s1 + 0x1b0]\n 16920: t1 = t1 + a5\n 16923: a4 = t1 << 0x3b\n 16926: a3 = a0 >> 0x5\n 16929: a3 = a3 | a4\n 16932: a0 = a0 << 0x3b\n 16935: a4 = ra >> 0x5\n 16938: a0 = a0 | a4\n 16941: a0 = a0 + t2\n 16944: u64 [s1 + 0x198] = a0\n 16948: a0 = a0 <u t2\n 16951: t2 = t0\n 16953: t0 = 514, jump @1176\n      : @496 [@dyn 257] (gas: 4)\n 16959: a0 = u64 [s1 + 0x120]\n 16963: a0 = a4 <u a0\n 16966: a3 = u64 [s1 + 0x168]\n 16970: t0 = 516, jump @1178\n      : @497 [@dyn 258] (gas: 8)\n 16976: t0 = u64 [a4]\n 16978: a4 = u64 [a4 + 0x8]\n 16981: a0 = a0 >> 0x5\n 16984: a3 = 0 if a1 != 0\n 16986: a0 = 0 if a1 != 0\n 16988: a1 = reverse a4\n 16990: a4 = reverse t0\n 16992: t0 = 518, jump @1167\n      : @498 [@dyn 259] (gas: 25)\n 16998: t0 = a0 + a3\n 17001: a0 = u64 [s1 + 0x1b0]\n 17005: a0 = t1 <u a0\n 17008: a3 = u64 [s1 + 0x1a0]\n 17012: a0 = a0 + a3\n 17015: a3 = t1 >> 0x5\n 17018: a5 = a0 << 0x3b\n 17021: a3 = a3 | a5\n 17024: a0 = a0 >> 0x5\n 17027: a0 = a0 + a4\n 17030: a5 = s1 + 0x100\n 17034: a4 = u64 [a5 + 0xb8]\n 17038: a3 = a3 + a1\n 17041: a1 = a3 <u a1\n 17044: a0 = a0 + a1\n 17047: a2 = a2 + a3\n 17050: u64 [a5 + 0x88] = a2\n 17054: a1 = a2 <u a3\n 17057: a0 = a0 + a1\n 17060: u64 [a5 + 0x80] = a0\n 17064: a0 = sp + 0xffffffffffffffe0\n 17067: t1 = a0 & 0xffffffffffffffe0\n 17070: sp = t1\n 17072: u64 [s1 + 0x178] = t1\n 17076: fallthrough\n      : @499 (gas: 21)\n 17077: a0 = u64 [s1 + 0x198]\n 17081: a0 = t2 <u a0\n 17084: a2 = u64 [s1 + 0x190]\n 17088: a1 = a4 ^ a2\n 17091: a2 = a4 <u a2\n 17094: a2 = a0 if a1 == 0\n 17097: a5 = u64 [s1 + 0x188]\n 17101: a0 = ra <u a5\n 17104: a3 = u64 [s1 + 0x180]\n 17108: a1 = t0 ^ a3\n 17111: a3 = t0 <u a3\n 17114: a3 = a0 if a1 == 0\n 17117: a0 = ra ^ a5\n 17120: a0 = a0 | a1\n 17123: a3 = a2 if a0 == 0\n 17126: u64 [t1] = t2\n 17128: u64 [t1 + 0x8] = a4\n 17131: u64 [t1 + 0x10] = ra\n 17134: u64 [t1 + 0x18] = t0\n 17137: a0 = s1 + 0x2938\n 17141: jump @502 if a3 == 0\n      : @500 (gas: 11)\n 17144: u64 [a0 + 288] = 0\n 17148: u64 [a0 + 280] = 0\n 17152: u64 [a0 + 272] = 0\n 17156: u64 [a0 + 264] = 0\n 17160: a1 = s1 + 0x2a40\n 17164: a0 = t1\n 17166: u64 [s1 + 0x1b0] = t2\n 17170: u64 [s1 + 0x1b8] = a4\n 17174: u64 [s1 + 0x1a8] = t0\n 17178: u64 [s1 + 0x1a0] = ra\n 17182: ra = 520, jump @23\n      : @501 [@dyn 260] (gas: 15)\n 17188: t1 = u64 [s1 + 0x178]\n 17192: t0 = u64 [s1 + 0x1a8]\n 17196: a4 = u64 [s1 + 0x1b8]\n 17200: t2 = u64 [s1 + 0x1b0]\n 17204: t2 = t2 + 0x1\n 17207: a0 = t2 <u 0x1\n 17210: a4 = a4 + a0\n 17213: a0 = t2 | a4\n 17216: a0 = a0 <u 0x1\n 17219: a1 = u64 [s1 + 0x1a0]\n 17223: a0 = a0 + a1\n 17226: a1 = a0 <u a1\n 17229: t0 = t0 + a1\n 17232: ra = a0\n 17234: jump @499\n      : @502 (gas: 28)\n 17237: a3 = s1 + 0x100\n 17241: a0 = u64 [a3 + 0x58]\n 17244: a0 = a0 ^ 0x1\n 17247: ra = u64 [s1 + 0x170]\n 17251: a1 = u64 [a3 + 0x48]\n 17254: a0 = a1 if ra != 0\n 17257: a1 = u64 [a3 + 0x50]\n 17260: a2 = u64 [a3 + 0x60]\n 17263: a0 = a1 if a2 != 0\n 17266: t1 = u64 [s1 + 0x168]\n 17270: t0 = ra | t1\n 17273: a2 = u64 [a3 + 0x20]\n 17276: a1 = a2 >> 0x3f\n 17279: u64 [s1 + 0x18] = a1\n 17282: t1 = t1 << 0x1\n 17285: a5 = ra >> 0x3f\n 17288: a4 = a2 << 0x1\n 17291: a1 = u64 [a3 + 0x40]\n 17294: t2 = a1 >> 0x3f\n 17297: ra = ra << 0x1\n 17300: a3 = a1 << 0x1\n 17303: u64 [s1 + 0x20] = a3\n 17306: u64 [s1 + 0x10] = t1\n 17309: u64 [s1 + 0x8] = t2\n 17312: u64 [s1 + 0x38] = a5\n 17315: u64 [s1 + 0x30] = ra\n 17318: u64 [s1 + 0x28] = a4\n 17321: jump @515 if a0 == 0\n      : @503 (gas: 15)\n 17325: u64 [s1 + 0x148] = t0\n 17329: a1 = a1 & 0xffffffffffffffe0\n 17332: u64 [s1 + 0x150] = a1\n 17336: a0 = s1 + 0x1938\n 17340: a1 = u64 [s1 + 0x118]\n 17344: u64 [a0 + 0xc8] = a1\n 17348: a1 = u64 [s1 + 0x110]\n 17352: u64 [a0 + 0xd0] = a1\n 17356: a1 = u64 [s1 + 0x108]\n 17360: u64 [a0 + 0xd8] = a1\n 17364: a1 = s1 + 0x1a00\n 17368: a2 = u64 [s1 + 0x70]\n 17371: u64 [a0 + 0xe0] = a2\n 17375: a0 = 0\n 17377: ra = 522, jump @19\n      : @504 [@dyn 261] (gas: 1)\n 17383: t0 = 524, jump @1181\n      : @505 [@dyn 262] (gas: 1)\n 17389: ra = 526, jump @26\n      : @506 [@dyn 263] (gas: 1)\n 17395: t0 = 528, jump @1183\n      : @507 [@dyn 264] (gas: 28)\n 17401: ecalli 6 // 'hash_keccak_256'\n 17403: u64 [s1 + 440] = 0x20\n 17408: t0 = 0\n 17410: u64 [s1 + 432] = 0\n 17414: u64 [s1 + 424] = 0\n 17418: a4 = 0\n 17420: a5 = 0\n 17422: ra = 0\n 17424: u64 [s1 + 416] = 0\n 17428: a3 = u64 [s1 + 0x190]\n 17432: a0 = u64 [a3 + 0x18]\n 17435: a1 = u64 [a3 + 0x10]\n 17438: a2 = u64 [a3 + 0x8]\n 17441: t1 = u64 [a3]\n 17443: a0 = reverse a0\n 17445: a1 = reverse a1\n 17447: a3 = reverse a2\n 17449: t1 = reverse t1\n 17451: t2 = t1\n 17453: a2 = u64 [s1 + 0x198]\n 17457: u64 [a2 + 0x18] = t1\n 17460: u64 [s1 + 0x170] = a3\n 17464: u64 [a2 + 0x10] = a3\n 17467: u64 [s1 + 0x190] = a1\n 17471: u64 [a2 + 0x8] = a1\n 17474: a3 = a0\n 17476: u64 [a2] = a0\n 17478: fallthrough\n      : @508 (gas: 25)\n 17479: u64 [s1 + 0x188] = t2\n 17483: t1 = a3\n 17485: a0 = u64 [s1 + 0x150]\n 17489: u64 [s1 + 0x180] = a4\n 17493: a0 = a4 <u a0\n 17496: a4 = a0 ^ 0x1\n 17499: u64 [s1 + 0x178] = a5\n 17503: a4 = 0x1 if a5 != 0\n 17506: a5 = s1 + 0x100\n 17510: a0 = u64 [a5 + 0xa0]\n 17514: a0 = ra | a0\n 17517: a4 = 0x1 if a0 != 0\n 17520: a1 = u64 [a5]\n 17522: a0 = u64 [a5 + 0xb8]\n 17526: a1 = a1 + a0\n 17529: a3 = u64 [s1 + 0xf8]\n 17533: a3 = a3 + t0\n 17536: a2 = u64 [s1 + 0xe8]\n 17540: a0 = u64 [a5 + 0xb0]\n 17544: a2 = a2 + a0\n 17547: a0 = u64 [s1 + 0xf0]\n 17551: t2 = u64 [s1 + 0x1a8]\n 17555: t2 = t2 + a0\n 17558: a0 = u64 [a5 + 0x48]\n 17561: jump @518 if a4 != 0\n      : @509 (gas: 9)\n 17565: a0 = u64 [s1 + 0x1b8]\n 17569: a4 = a1 <u a0\n 17572: a3 = a3 + a4\n 17575: a0 = t0\n 17577: t0 = a3 ^ t0\n 17580: u64 [s1 + 0x160] = a0\n 17584: a5 = a3 <u a0\n 17587: a5 = a4 if t0 == 0\n 17590: t0 = 530, jump @1179\n      : @510 [@dyn 265] (gas: 1)\n 17596: jump @512 if a0 == 0\n      : @511 (gas: 1)\n 17599: jump @929\n      : @512 (gas: 3)\n 17602: a0 = s1 + 0x1560\n 17606: u64 [s1 + 0x158] = ra\n 17610: ra = 532, jump @17\n      : @513 [@dyn 266] (gas: 15)\n 17616: a3 = s1 + 0x1138\n 17620: a4 = a3 + 0x400\n 17624: a0 = u64 [a4 + 0x40]\n 17627: a1 = u64 [a4 + 0x38]\n 17630: a2 = u64 [a4 + 0x30]\n 17633: a3 = u64 [a4 + 0x28]\n 17636: a4 = s1 + 0x2938\n 17640: a5 = a4 + 0x100\n 17644: u64 [a5 + 0x40] = a0\n 17647: u64 [a5 + 0x38] = a1\n 17650: u64 [a5 + 0x30] = a2\n 17653: u64 [a5 + 0x28] = a3\n 17656: a1 = s1 + 0x2a60\n 17660: a0 = u64 [s1 + 0x198]\n 17664: ra = 534, jump @23\n      : @514 [@dyn 267] (gas: 56)\n 17670: t2 = u64 [s1 + 0x168]\n 17674: t2 = t2 + 0x1\n 17677: a0 = t2 <u 0x1\n 17680: t0 = u64 [s1 + 0x190]\n 17684: t0 = t0 + a0\n 17687: a0 = t2 | t0\n 17690: a0 = a0 <u 0x1\n 17693: a1 = u64 [s1 + 0x170]\n 17697: t1 = a1 + a0\n 17700: a1 = t1 <u a1\n 17703: a0 = u64 [s1 + 0x188]\n 17707: a0 = a0 + a1\n 17710: a1 = u64 [s1 + 0x1b8]\n 17714: a2 = a1 + 0x20\n 17717: u64 [s1 + 0x188] = a2\n 17721: a3 = a2 <u a1\n 17724: a1 = u64 [s1 + 0x160]\n 17728: a2 = a1 + a3\n 17731: u64 [s1 + 0x168] = a2\n 17735: a4 = a2 <u a1\n 17738: a4 = a3 if a3 == 0\n 17741: a1 = u64 [s1 + 0x1b0]\n 17745: ra = a1 + a4\n 17748: a4 = ra <u a1\n 17751: a1 = u64 [s1 + 0x1a8]\n 17755: a1 = a1 + a4\n 17758: u64 [s1 + 0x1a8] = a1\n 17762: a1 = u64 [s1 + 0x180]\n 17766: a4 = a1 + 0x20\n 17769: a5 = a4 <u a1\n 17772: a2 = u64 [s1 + 0x178]\n 17776: a1 = a2 + a5\n 17779: a2 = a1 <u a2\n 17782: a2 = a5 if a5 == 0\n 17785: a3 = u64 [s1 + 0x158]\n 17789: a2 = a2 + a3\n 17792: a5 = a2 <u a3\n 17795: a3 = u64 [s1 + 0x1a0]\n 17799: a3 = a3 + a5\n 17802: u64 [s1 + 0x1a0] = a3\n 17806: u64 [s1 + 0x190] = t0\n 17810: a5 = u64 [s1 + 0x198]\n 17814: u64 [a5 + 0x8] = t0\n 17817: a3 = t2\n 17819: u64 [a5] = t2\n 17821: u64 [a5 + 0x10] = t1\n 17824: t2 = a0\n 17826: u64 [a5 + 0x18] = a0\n 17829: u64 [s1 + 0x170] = t1\n 17833: a0 = u64 [s1 + 0x188]\n 17837: u64 [s1 + 0x1b8] = a0\n 17841: t0 = u64 [s1 + 0x168]\n 17845: u64 [s1 + 0x1b0] = ra\n 17849: a5 = a1\n 17851: ra = a2\n 17853: jump @508\n      : @515 (gas: 4)\n 17856: a0 = a1 | a2\n 17859: a0 = a0 | t0\n 17862: a2 = u64 [s1 + 0x100]\n 17866: jump @533 if a0 != 0\n      : @516 (gas: 1)\n 17870: t0 = 536, jump @1172\n      : @517 [@dyn 268] (gas: 6)\n 17876: a2 = u64 [s1 + 0x18]\n 17879: t0 = u64 [s1 + 0x10]\n 17882: a4 = u64 [s1 + 0x38]\n 17885: a5 = u64 [s1 + 0x28]\n 17888: t1 = u64 [s1 + 0x30]\n 17891: jump @538\n      : @518 (gas: 11)\n 17894: ra = t0\n 17896: a4 = u64 [s1 + 0x140]\n 17900: a5 = u64 [s1 + 0x150]\n 17904: a4 = a4 ^ a5\n 17907: a5 = u64 [s1 + 0x120]\n 17911: a4 = a4 | a5\n 17914: a4 = a4 | a0\n 17917: t1 = u64 [s1 + 0x38]\n 17920: t0 = u64 [s1 + 0x30]\n 17923: a5 = u64 [s1 + 0x28]\n 17926: jump @532 if a4 == 0\n      : @519 (gas: 12)\n 17930: a0 = u64 [s1 + 0x1b8]\n 17934: a4 = a1 <u a0\n 17937: a3 = a3 + a4\n 17940: t0 = a3 ^ ra\n 17943: a5 = a3 <u ra\n 17946: a5 = a4 if t0 == 0\n 17949: a5 = a5 + a2\n 17952: a4 = a5 <u a2\n 17955: a0 = u64 [s1 + 0x1b0]\n 17959: a2 = a2 <u a0\n 17962: a0 = t2 + a2\n 17965: t0 = 538, jump @1161\n      : @520 [@dyn 269] (gas: 1)\n 17971: jump @522 if a0 == 0\n      : @521 (gas: 1)\n 17974: jump @929\n      : @522 (gas: 2)\n 17977: a0 = s1 + 0x19e0\n 17981: ra = 540, jump @17\n      : @523 [@dyn 270] (gas: 11)\n 17987: a0 = s1 + 0x1938\n 17991: a1 = u64 [a0 + 0xc0]\n 17995: u64 [s1 + 0x1b0] = a1\n 17999: a1 = u64 [a0 + 0xb8]\n 18003: u64 [s1 + 0x1a8] = a1\n 18007: a1 = u64 [a0 + 0xb0]\n 18011: u64 [s1 + 0x1a0] = a1\n 18015: a0 = u64 [a0 + 0xa8]\n 18019: u64 [s1 + 0x190] = a0\n 18023: a0 = u64 [s1 + 0x140]\n 18027: t0 = 542, jump @1158\n      : @524 [@dyn 271] (gas: 1)\n 18033: ra = 544, jump @1221\n      : @525 [@dyn 272] (gas: 1)\n 18039: t0 = 546, jump @1165\n      : @526 [@dyn 273] (gas: 1)\n 18045: ra = 548, jump @1216\n      : @527 [@dyn 274] (gas: 1)\n 18051: t0 = 550, jump @1154\n      : @528 [@dyn 275] (gas: 1)\n 18057: ra = 552, jump @1216\n      : @529 [@dyn 276] (gas: 1)\n 18063: t0 = 554, jump @1153\n      : @530 [@dyn 277] (gas: 8)\n 18069: a5 = a4 + 0x100\n 18073: u64 [a5 + 0x60] = a3\n 18076: u64 [a5 + 0x58] = a2\n 18079: u64 [a5 + 0x50] = a1\n 18082: u64 [a5 + 0x48] = a0\n 18085: a1 = s1 + 0x2a80\n 18089: a0 = u64 [s1 + 0x198]\n 18093: ra = 556, jump @23\n      : @531 [@dyn 278] (gas: 4)\n 18099: a5 = u64 [s1 + 0x28]\n 18102: t0 = u64 [s1 + 0x30]\n 18105: t1 = u64 [s1 + 0x38]\n 18108: fallthrough\n      : @532 (gas: 16)\n 18109: a0 = u64 [s1 + 0x18]\n 18112: a1 = u64 [s1 + 0x10]\n 18115: a0 = a0 | a1\n 18118: a1 = a5 | t1\n 18121: a2 = u64 [s1 + 0x8]\n 18124: a2 = t0 | a2\n 18127: a3 = u64 [s1 + 0x20]\n 18130: a3 = a3 + 0x1\n 18133: a4 = s1 + 0x2938\n 18137: a5 = a4 + 0x100\n 18141: u64 [a5 + 0x68] = a3\n 18144: u64 [a5 + 0x70] = a2\n 18147: u64 [a5 + 0x78] = a1\n 18150: u64 [a5 + 0x80] = a0\n 18154: a0 = 0x2aa0\n 18158: jump @546\n      : @533 (gas: 3)\n 18161: a0 = u64 [s1 + 0xf0]\n 18165: a1 = u64 [s1 + 0xe8]\n 18169: t0 = 558, jump @1215\n      : @534 [@dyn 279] (gas: 4)\n 18175: a3 = u64 [s1 + 0xf8]\n 18179: a1 = 0 if a3 != 0\n 18181: a1 = 0 if a0 != 0\n 18183: jump @536 if a1 != 0\n      : @535 (gas: 1)\n 18186: jump @929\n      : @536 (gas: 3)\n 18189: i32 a1 = a2 + 0x20\n 18192: a0 = s1 + 0x1a20\n 18196: ra = 560, jump @17\n      : @537 [@dyn 280] (gas: 16)\n 18202: a5 = u64 [s1 + 0x28]\n 18205: t1 = u64 [s1 + 0x30]\n 18208: a4 = u64 [s1 + 0x38]\n 18211: t0 = u64 [s1 + 0x10]\n 18214: a2 = u64 [s1 + 0x18]\n 18217: a0 = s1 + 0x1938\n 18221: a1 = u64 [a0 + 0x100]\n 18225: a3 = s1 + 0x100\n 18229: u64 [a3 + 0xb0] = a1\n 18233: a1 = u64 [a0 + 0xf8]\n 18237: u64 [a3 + 0xa8] = a1\n 18241: a1 = u64 [a0 + 0xf0]\n 18245: u64 [a3 + 0x98] = a1\n 18249: a0 = u64 [a0 + 0xe8]\n 18253: u64 [a3 + 0xa0] = a0\n 18257: fallthrough\n      : @538 (gas: 10)\n 18258: a1 = u64 [s1 + 0x8]\n 18261: a0 = a5 | a4\n 18264: u64 [s1 + 0x190] = a0\n 18268: a0 = t0 | a2\n 18271: u64 [s1 + 0x188] = a0\n 18275: a0 = t1 | a1\n 18278: u64 [s1 + 0x180] = a0\n 18282: a1 = u64 [s1 + 0x140]\n 18286: a1 = a1 << 0x3\n 18289: t0 = 562, jump @1168\n      : @539 [@dyn 281] (gas: 1)\n 18295: ra = 564, jump @1221\n      : @540 [@dyn 282] (gas: 7)\n 18301: u64 [s1 + 0x160] = a0\n 18305: u64 [s1 + 0x178] = a1\n 18309: a0 = u64 [s1 + 0x140]\n 18313: i32 a2 = a0 << 0x3\n 18316: a0 = 0xffffffffffffffff\n 18319: a1 = 0xffffffffffffffff\n 18322: ra = 566, jump @1216\n      : @541 [@dyn 283] (gas: 1)\n 18328: t0 = 568, jump @1156\n      : @542 [@dyn 284] (gas: 1)\n 18334: ra = 570, jump @1216\n      : @543 [@dyn 285] (gas: 1)\n 18340: t0 = 572, jump @1151\n      : @544 [@dyn 286] (gas: 4)\n 18346: a4 = u64 [s1 + 0x20]\n 18349: a0 = a0 | a4\n 18352: a5 = s1 + 0x100\n 18356: t0 = 574, jump @1177\n      : @545 [@dyn 287] (gas: 7)\n 18362: a5 = a4 + 0x100\n 18366: u64 [a5 + 0x98] = a2\n 18370: u64 [a5 + 0xa0] = a3\n 18374: u64 [a5 + 0x90] = a1\n 18378: u64 [a5 + 0x88] = a0\n 18382: a0 = 0x2ac0\n 18386: fallthrough\n      : @546 (gas: 3)\n 18387: a1 = s1 + a0\n 18390: a0 = u64 [s1 + 0x138]\n 18394: ra = 576, jump @23\n      : @547 [@dyn 288] (gas: 32)\n 18400: a0 = sp + 0xffffffffffffffe0\n 18403: a5 = a0 & 0xffffffffffffffe0\n 18406: sp = a5\n 18408: a0 = u64 [s1 + 0x78]\n 18411: t0 = a0 + 0x5\n 18414: a0 = t0 <u a0\n 18417: a1 = u64 [s1 + 0x80]\n 18421: t1 = a1 + a0\n 18424: a1 = t1 <u a1\n 18427: a1 = a0 if a0 == 0\n 18430: a0 = u64 [s1 + 0x68]\n 18433: ra = a0 + a1\n 18436: a0 = ra <u a0\n 18439: a1 = u64 [s1 + 0x60]\n 18442: t2 = a1 + a0\n 18445: a1 = u64 [s1 + 0xe0]\n 18449: a4 = u64 [s1 + 0xc8]\n 18453: a0 = a1 | a4\n 18456: a2 = u64 [s1 + 0xd8]\n 18460: a3 = u64 [s1 + 0xd0]\n 18464: a2 = a2 | a3\n 18467: a0 = a0 | a2\n 18470: a0 = a0 >> 0x20\n 18473: a2 = a2 | a4\n 18476: a2 = a2 << 0x20\n 18479: a0 = a0 | a2\n 18482: u64 [a5 + 0x10] = ra\n 18485: u64 [a5 + 0x8] = t1\n 18488: u64 [a5] = t0\n 18490: u64 [s1 + 0x140] = a5\n 18494: u64 [a5 + 0x18] = t2\n 18497: jump @549 if a0 == 0\n      : @548 (gas: 1)\n 18500: jump @929\n      : @549 (gas: 6)\n 18503: u64 [s1 + 0x80] = t2\n 18507: u64 [s1 + 0xe8] = ra\n 18511: u64 [s1 + 0xf0] = t1\n 18515: u64 [s1 + 0xf8] = t0\n 18519: a0 = s1 + 0x19c0\n 18523: ra = 578, jump @17\n      : @550 [@dyn 289] (gas: 18)\n 18529: a2 = s1 + 0x1938\n 18533: a4 = u64 [a2 + 0xa0]\n 18537: a3 = u64 [a2 + 0x98]\n 18541: a1 = u64 [a2 + 0x90]\n 18545: a0 = a4 >u 0\n 18547: a5 = a3 >u 0\n 18549: a5 = a0 if a4 != 0\n 18552: u64 [s1 + 0x120] = a1\n 18556: a0 = a1 >u 0\n 18558: a1 = s1 + 0x100\n 18562: u64 [a1 + 0x38] = a3\n 18565: u64 [a1] = a4\n 18567: a3 = a3 | a4\n 18570: u64 [a1 + 0x58] = a0\n 18573: u64 [a1 + 0x60] = a5\n 18576: u64 [a1 + 0x70] = a3\n 18579: a0 = a5 if a3 != 0\n 18582: jump @552 if a0 == 0\n      : @551 (gas: 1)\n 18585: jump @959\n      : @552 (gas: 5)\n 18588: a0 = u64 [a2 + 0x88]\n 18592: u64 [s1 + 0x148] = a0\n 18596: a0 = s1 + 0x19a0\n 18600: a1 = u64 [s1 + 0x140]\n 18604: ra = 580, jump @21\n      : @553 [@dyn 290] (gas: 12)\n 18610: a4 = s1 + 0x1938\n 18614: a2 = u64 [a4 + 0x68]\n 18617: a0 = u64 [a4 + 0x70]\n 18620: a1 = u64 [a4 + 0x78]\n 18623: a3 = u64 [a4 + 0x80]\n 18627: u64 [a4 + 0x40] = a3\n 18630: u64 [a4 + 0x38] = a1\n 18633: u64 [a4 + 0x30] = a0\n 18636: a0 = s1 + 0x1980\n 18640: a1 = s1 + 0x1960\n 18644: u64 [a4 + 0x28] = a2\n 18647: ra = 582, jump @1120\n      : @554 [@dyn 291] (gas: 18)\n 18653: a0 = s1 + 0x1938\n 18657: a3 = u64 [a0 + 0x60]\n 18660: a4 = u64 [a0 + 0x58]\n 18663: a5 = u64 [a0 + 0x50]\n 18666: t0 = u64 [a0 + 0x48]\n 18669: a0 = a3 >u 0\n 18671: a1 = a4 >u 0\n 18673: a1 = a0 if a3 != 0\n 18676: a0 = a5 >u 0\n 18678: a2 = t0 <u 0x20\n 18681: a2 = a2 ^ 0x1\n 18684: a2 = a0 if a5 != 0\n 18687: a0 = a4 | a3\n 18690: a2 = a1 if a0 != 0\n 18693: a0 = u64 [s1 + 0x148]\n 18697: a0 = a0 <u 0x20\n 18700: u64 [s1 + 0x168] = a0\n 18704: jump @569 if a2 == 0\n      : @555 (gas: 17)\n 18708: u64 [s1 + 0x190] = t0\n 18712: a0 = s1 + 0x100\n 18716: u64 [a0 + 0x98] = a5\n 18720: u64 [a0 + 0xb0] = a4\n 18724: u64 [a0 + 0xa0] = a3\n 18728: a0 = s1 + 0x1938\n 18732: a1 = u64 [s1 + 0xf8]\n 18736: u64 [a0 + 0x8] = a1\n 18739: a1 = u64 [s1 + 0xf0]\n 18743: u64 [a0 + 0x10] = a1\n 18746: a1 = u64 [s1 + 0xe8]\n 18750: u64 [a0 + 0x18] = a1\n 18753: a1 = s1 + 0x1940\n 18757: a2 = u64 [s1 + 0x80]\n 18761: u64 [a0 + 0x20] = a2\n 18764: a0 = 0\n 18766: ra = 584, jump @19\n      : @556 [@dyn 292] (gas: 3)\n 18772: a2 = u64 [s1 + 0xa8]\n 18776: a0 = i32 [a2]\n 18778: jump @558 if a0 >u 31\n      : @557 (gas: 3)\n 18782: u32 [a2 + 0] = 0x20\n 18785: t0 = 0x24a\n 18789: jump @1170\n      : @558 (gas: 1)\n 18792: t0 = 586, jump @1170\n      : @559 [@dyn 293] (gas: 3)\n 18798: ra = 0x24c\n 18802: ecalli 6 // 'hash_keccak_256'\n 18804: fallthrough\n      : @560 [@dyn 294] (gas: 15)\n 18805: a0 = u64 [s1 + 0x148]\n 18809: a1 = a0 + 0x1f\n 18812: a0 = a1 <u a0\n 18815: a5 = u64 [s1 + 0x120]\n 18819: a2 = a5 + a0\n 18822: a3 = a2 <u a5\n 18825: a3 = a0 if a0 == 0\n 18828: a4 = u64 [s1 + 0x138]\n 18832: a3 = a3 + a4\n 18835: u64 [s1 + 0x188] = a3\n 18839: a3 = a3 << 0x3b\n 18842: a4 = a2 >> 0x5\n 18845: a4 = a4 | a3\n 18848: a0 = u64 [s1 + 0x1a8]\n 18852: t0 = 590, jump @1166\n      : @561 [@dyn 295] (gas: 4)\n 18858: a1 = u64 [s1 + 0x168]\n 18862: a1 = 0 if a5 != 0\n 18864: a3 = u64 [s1 + 0x170]\n 18868: t0 = 592, jump @1186\n      : @562 [@dyn 296] (gas: 29)\n 18874: t0 = t2 + a0\n 18877: a0 = t0 <u t2\n 18880: a5 = a2 + a0\n 18883: a4 = a4 + a5\n 18886: u64 [s1 + 0x1b8] = a4\n 18890: a5 = a4 ^ a2\n 18893: a3 = a4 <u a2\n 18896: a3 = a0 if a5 == 0\n 18899: u64 [s1 + 0x180] = a3\n 18903: a0 = u64 [s1 + 0x190]\n 18907: ra = a0 + 0x1f\n 18910: a4 = ra <u a0\n 18913: a3 = u64 [s1 + 0x198]\n 18917: a0 = a3 + a4\n 18920: a5 = a0 <u a3\n 18923: a5 = a4 if a4 == 0\n 18926: t1 = u64 [s1 + 0x1b0]\n 18930: t1 = t1 + a5\n 18933: a4 = t1 << 0x3b\n 18936: a3 = a0 >> 0x5\n 18939: a3 = a3 | a4\n 18942: a0 = a0 << 0x3b\n 18945: a4 = ra >> 0x5\n 18948: a0 = a0 | a4\n 18951: a0 = a0 + t2\n 18954: u64 [s1 + 0x198] = a0\n 18958: a0 = a0 <u t2\n 18961: t2 = t0\n 18963: t0 = 594, jump @1189\n      : @563 [@dyn 297] (gas: 2)\n 18969: a3 = u64 [s1 + 0x100]\n 18973: t0 = 596, jump @1178\n      : @564 [@dyn 298] (gas: 8)\n 18979: t0 = u64 [a4]\n 18981: a4 = u64 [a4 + 0x8]\n 18984: a0 = a0 >> 0x5\n 18987: a3 = 0 if a1 != 0\n 18989: a0 = 0 if a1 != 0\n 18991: a1 = reverse a4\n 18993: a4 = reverse t0\n 18995: t0 = 598, jump @1167\n      : @565 [@dyn 299] (gas: 25)\n 19001: t0 = a0 + a3\n 19004: a0 = u64 [s1 + 0x1b0]\n 19008: a0 = t1 <u a0\n 19011: a3 = u64 [s1 + 0x1a0]\n 19015: a0 = a0 + a3\n 19018: a3 = t1 >> 0x5\n 19021: a5 = a0 << 0x3b\n 19024: a3 = a3 | a5\n 19027: a0 = a0 >> 0x5\n 19030: a0 = a0 + a4\n 19033: a5 = s1 + 0x100\n 19037: a4 = u64 [a5 + 0xb8]\n 19041: a3 = a3 + a1\n 19044: a1 = a3 <u a1\n 19047: a0 = a0 + a1\n 19050: a2 = a2 + a3\n 19053: u64 [a5 + 0x88] = a2\n 19057: a1 = a2 <u a3\n 19060: a0 = a0 + a1\n 19063: u64 [a5 + 0x80] = a0\n 19067: a0 = sp + 0xffffffffffffffe0\n 19070: t1 = a0 & 0xffffffffffffffe0\n 19073: sp = t1\n 19075: u64 [s1 + 0x178] = t1\n 19079: fallthrough\n      : @566 (gas: 21)\n 19080: a0 = u64 [s1 + 0x198]\n 19084: a0 = t2 <u a0\n 19087: a2 = u64 [s1 + 0x190]\n 19091: a1 = a4 ^ a2\n 19094: a2 = a4 <u a2\n 19097: a2 = a0 if a1 == 0\n 19100: a5 = u64 [s1 + 0x188]\n 19104: a0 = ra <u a5\n 19107: a3 = u64 [s1 + 0x180]\n 19111: a1 = t0 ^ a3\n 19114: a3 = t0 <u a3\n 19117: a3 = a0 if a1 == 0\n 19120: a0 = ra ^ a5\n 19123: a0 = a0 | a1\n 19126: a3 = a2 if a0 == 0\n 19129: u64 [t1] = t2\n 19131: u64 [t1 + 0x8] = a4\n 19134: u64 [t1 + 0x10] = ra\n 19137: u64 [t1 + 0x18] = t0\n 19140: a0 = s1 + 0x2938\n 19144: jump @569 if a3 == 0\n      : @567 (gas: 11)\n 19147: u64 [a0 + 448] = 0\n 19151: u64 [a0 + 440] = 0\n 19155: u64 [a0 + 432] = 0\n 19159: u64 [a0 + 424] = 0\n 19163: a1 = s1 + 0x2ae0\n 19167: a0 = t1\n 19169: u64 [s1 + 0x1b0] = t2\n 19173: u64 [s1 + 0x1b8] = a4\n 19177: u64 [s1 + 0x1a8] = t0\n 19181: u64 [s1 + 0x1a0] = ra\n 19185: ra = 600, jump @23\n      : @568 [@dyn 300] (gas: 15)\n 19191: t1 = u64 [s1 + 0x178]\n 19195: t0 = u64 [s1 + 0x1a8]\n 19199: a4 = u64 [s1 + 0x1b8]\n 19203: t2 = u64 [s1 + 0x1b0]\n 19207: t2 = t2 + 0x1\n 19210: a0 = t2 <u 0x1\n 19213: a4 = a4 + a0\n 19216: a0 = t2 | a4\n 19219: a0 = a0 <u 0x1\n 19222: a1 = u64 [s1 + 0x1a0]\n 19226: a0 = a0 + a1\n 19229: a1 = a0 <u a1\n 19232: t0 = t0 + a1\n 19235: ra = a0\n 19237: jump @566\n      : @569 (gas: 10)\n 19240: a3 = s1 + 0x100\n 19244: a0 = u64 [a3 + 0x68]\n 19247: a0 = a0 ^ 0x1\n 19250: a4 = u64 [a3 + 0x20]\n 19253: a1 = u64 [a3 + 0x58]\n 19256: a0 = a1 if a4 != 0\n 19259: a1 = u64 [a3 + 0x60]\n 19262: a2 = u64 [a3 + 0x70]\n 19265: a0 = a1 if a2 != 0\n 19268: jump @595 if a0 == 0\n      : @570 (gas: 16)\n 19272: a0 = u64 [s1 + 0x148]\n 19276: a0 = a0 & 0xffffffffffffffe0\n 19279: u64 [s1 + 0x150] = a0\n 19283: a0 = s1 + 0x1138\n 19287: a1 = u64 [s1 + 0xf8]\n 19291: a3 = a0 + 0x700\n 19295: u64 [a3 + 0xc8] = a1\n 19299: a1 = u64 [s1 + 0xf0]\n 19303: u64 [a3 + 0xd0] = a1\n 19307: a1 = u64 [s1 + 0xe8]\n 19311: u64 [a3 + 0xd8] = a1\n 19315: a1 = s1 + 0x1900\n 19319: a2 = u64 [s1 + 0x80]\n 19323: u64 [a3 + 0xe0] = a2\n 19327: a0 = 0\n 19329: ra = 602, jump @19\n      : @571 [@dyn 301] (gas: 1)\n 19335: t0 = 604, jump @1182\n      : @572 [@dyn 302] (gas: 1)\n 19341: ra = 606, jump @26\n      : @573 [@dyn 303] (gas: 1)\n 19347: t0 = 608, jump @1169\n      : @574 [@dyn 304] (gas: 28)\n 19353: ecalli 6 // 'hash_keccak_256'\n 19355: u64 [s1 + 440] = 0x20\n 19360: a5 = 0\n 19362: u64 [s1 + 432] = 0\n 19366: u64 [s1 + 424] = 0\n 19370: a4 = 0\n 19372: ra = 0\n 19374: u64 [s1 + 408] = 0\n 19378: u64 [s1 + 416] = 0\n 19382: a3 = u64 [s1 + 0x188]\n 19386: a0 = u64 [a3 + 0x18]\n 19389: a1 = u64 [a3 + 0x10]\n 19392: a2 = u64 [a3 + 0x8]\n 19395: t0 = u64 [a3]\n 19397: t1 = reverse a0\n 19399: a1 = reverse a1\n 19401: a3 = reverse a2\n 19403: a2 = reverse t0\n 19405: t0 = a2\n 19407: a0 = u64 [s1 + 0x190]\n 19411: u64 [a0 + 0x18] = a2\n 19414: u64 [s1 + 0x170] = a3\n 19418: u64 [a0 + 0x10] = a3\n 19421: u64 [s1 + 0x188] = a1\n 19425: u64 [a0 + 0x8] = a1\n 19428: a3 = t1\n 19430: u64 [a0] = t1\n 19432: fallthrough\n      : @575 (gas: 25)\n 19433: t1 = t0\n 19435: t2 = a3\n 19437: a0 = u64 [s1 + 0x150]\n 19441: u64 [s1 + 0x180] = a4\n 19445: a0 = a4 <u a0\n 19448: a4 = a0 ^ 0x1\n 19451: u64 [s1 + 0x178] = ra\n 19455: a4 = 0x1 if ra != 0\n 19458: a0 = u64 [s1 + 0x1a0]\n 19462: a2 = u64 [s1 + 0x198]\n 19466: a0 = a0 | a2\n 19469: a4 = 0x1 if a0 != 0\n 19472: a1 = u64 [s1 + 0xe0]\n 19476: a0 = u64 [s1 + 0x1b8]\n 19480: a1 = a1 + a0\n 19483: a3 = u64 [s1 + 0xd8]\n 19487: t0 = a5\n 19489: a3 = a3 + a5\n 19492: a2 = u64 [s1 + 0xc8]\n 19496: ra = u64 [s1 + 0x1b0]\n 19500: a2 = a2 + ra\n 19503: a0 = u64 [s1 + 0xd0]\n 19507: a5 = u64 [s1 + 0x1a8]\n 19511: a0 = a0 + a5\n 19514: jump @601 if a4 != 0\n      : @576 (gas: 13)\n 19518: a4 = u64 [s1 + 0x1b8]\n 19522: a4 = a1 <u a4\n 19525: a3 = a3 + a4\n 19528: a5 = t0\n 19530: t0 = a3 ^ t0\n 19533: u64 [s1 + 0x158] = a5\n 19537: a5 = a3 <u a5\n 19540: a5 = a4 if t0 == 0\n 19543: a5 = a5 + a2\n 19546: a4 = a5 <u a2\n 19549: a2 = a2 <u ra\n 19552: a0 = a0 + a2\n 19555: t0 = 610, jump @1161\n      : @577 [@dyn 305] (gas: 3)\n 19561: u64 [s1 + 0x168] = t2\n 19565: u64 [s1 + 0x160] = t1\n 19569: jump @579 if a0 == 0\n      : @578 (gas: 1)\n 19572: jump @929\n      : @579 (gas: 3)\n 19575: a0 = s1 + 0x15c0\n 19579: u64 [s1 + 0x1b0] = ra\n 19583: ra = 612, jump @17\n      : @580 [@dyn 306] (gas: 15)\n 19589: a3 = s1 + 0x1138\n 19593: a4 = a3 + 0x400\n 19597: a0 = u64 [a4 + 0xa0]\n 19601: a1 = u64 [a4 + 0x98]\n 19605: a2 = u64 [a4 + 0x90]\n 19609: a3 = u64 [a4 + 0x88]\n 19613: a4 = s1 + 0x2938\n 19617: a5 = a4 + 0x100\n 19621: u64 [a5 + 0xe0] = a0\n 19625: u64 [a5 + 0xd8] = a1\n 19629: u64 [a5 + 0xd0] = a2\n 19633: u64 [a5 + 0xc8] = a3\n 19637: a1 = s1 + 0x2b00\n 19641: a0 = u64 [s1 + 0x190]\n 19645: ra = 614, jump @23\n      : @581 [@dyn 307] (gas: 56)\n 19651: ra = u64 [s1 + 0x168]\n 19655: ra = ra + 0x1\n 19658: a0 = ra <u 0x1\n 19661: t0 = u64 [s1 + 0x188]\n 19665: t0 = t0 + a0\n 19668: a0 = ra | t0\n 19671: a0 = a0 <u 0x1\n 19674: a1 = u64 [s1 + 0x170]\n 19678: t1 = a1 + a0\n 19681: a1 = t1 <u a1\n 19684: a0 = u64 [s1 + 0x160]\n 19688: a0 = a0 + a1\n 19691: a1 = u64 [s1 + 0x1b8]\n 19695: a2 = a1 + 0x20\n 19698: u64 [s1 + 0x168] = a2\n 19702: a3 = a2 <u a1\n 19705: a1 = u64 [s1 + 0x158]\n 19709: a2 = a1 + a3\n 19712: u64 [s1 + 0x160] = a2\n 19716: a4 = a2 <u a1\n 19719: a4 = a3 if a3 == 0\n 19722: a1 = u64 [s1 + 0x1b0]\n 19726: t2 = a1 + a4\n 19729: a4 = t2 <u a1\n 19732: a1 = u64 [s1 + 0x1a8]\n 19736: a1 = a1 + a4\n 19739: u64 [s1 + 0x1a8] = a1\n 19743: a1 = u64 [s1 + 0x180]\n 19747: a4 = a1 + 0x20\n 19750: a5 = a4 <u a1\n 19753: a2 = u64 [s1 + 0x178]\n 19757: a1 = a2 + a5\n 19760: a2 = a1 <u a2\n 19763: a2 = a5 if a5 == 0\n 19766: a3 = u64 [s1 + 0x198]\n 19770: a2 = a2 + a3\n 19773: a5 = a2 <u a3\n 19776: a3 = u64 [s1 + 0x1a0]\n 19780: a3 = a3 + a5\n 19783: u64 [s1 + 0x1a0] = a3\n 19787: u64 [s1 + 0x188] = t0\n 19791: a5 = u64 [s1 + 0x190]\n 19795: u64 [a5 + 0x8] = t0\n 19798: a3 = ra\n 19800: u64 [a5] = ra\n 19802: u64 [a5 + 0x10] = t1\n 19805: t0 = a0\n 19807: u64 [a5 + 0x18] = a0\n 19810: u64 [s1 + 0x170] = t1\n 19814: a0 = u64 [s1 + 0x168]\n 19818: u64 [s1 + 0x1b8] = a0\n 19822: a5 = u64 [s1 + 0x160]\n 19826: u64 [s1 + 0x1b0] = t2\n 19830: ra = a1\n 19832: u64 [s1 + 0x198] = a2\n 19836: jump @575\n      : @582 (gas: 26)\n 19839: a0 = u64 [s1 + 0x80]\n 19843: a0 = a0 ^ 0x1\n 19846: a4 = u64 [s1 + 0x130]\n 19850: a1 = u64 [s1 + 0x68]\n 19853: a0 = a1 if a4 != 0\n 19856: a1 = u64 [s1 + 0x70]\n 19859: a2 = u64 [s1 + 0x88]\n 19863: a0 = a1 if a2 != 0\n 19866: t1 = u64 [s1 + 0x128]\n 19870: t0 = a4 | t1\n 19873: a2 = u64 [s1 + 0x90]\n 19877: a1 = a2 >> 0x3f\n 19880: u64 [s1 + 0x88] = a1\n 19884: t1 = t1 << 0x1\n 19887: a5 = a4 >> 0x3f\n 19890: t2 = a2 << 0x1\n 19893: a1 = u64 [s1 + 0xb0]\n 19897: ra = a1 >> 0x3f\n 19900: a4 = a4 << 0x1\n 19903: a3 = a1 << 0x1\n 19906: u64 [s1 + 0x58] = a3\n 19909: u64 [s1 + 0x80] = t1\n 19913: u64 [s1 + 0x70] = ra\n 19916: u64 [s1 + 0x68] = a5\n 19919: u64 [s1 + 0x60] = t2\n 19922: jump @598 if a0 == 0\n      : @583 (gas: 18)\n 19926: u64 [s1 + 0x128] = t0\n 19930: u64 [s1 + 0x50] = a4\n 19933: a1 = a1 & 0xffffffffffffffe0\n 19936: u64 [s1 + 0x130] = a1\n 19940: a0 = s1 + 0x7ff\n 19944: a0 = a0 + 0x139\n 19948: a1 = u64 [s1 + 0x170]\n 19952: u64 [a0 + 0x68] = a1\n 19955: a1 = u64 [s1 + 0x160]\n 19959: u64 [a0 + 0x70] = a1\n 19962: a1 = u64 [s1 + 0x158]\n 19966: u64 [a0 + 0x78] = a1\n 19969: a1 = s1 + 0x7ff\n 19973: a1 = a1 + 0x1a1\n 19977: a2 = u64 [s1 + 0x168]\n 19981: u64 [a0 + 0x80] = a2\n 19985: a0 = 0\n 19987: ra = 616, jump @19\n      : @584 [@dyn 308] (gas: 1)\n 19993: t0 = 618, jump @1181\n      : @585 [@dyn 309] (gas: 1)\n 19999: ra = 620, jump @26\n      : @586 [@dyn 310] (gas: 1)\n 20005: t0 = 622, jump @1183\n      : @587 [@dyn 311] (gas: 28)\n 20011: ecalli 6 // 'hash_keccak_256'\n 20013: u64 [s1 + 440] = 0x20\n 20018: t0 = 0\n 20020: u64 [s1 + 432] = 0\n 20024: u64 [s1 + 424] = 0\n 20028: a4 = 0\n 20030: a5 = 0\n 20032: t2 = 0\n 20034: u64 [s1 + 416] = 0\n 20038: a3 = u64 [s1 + 0x190]\n 20042: a0 = u64 [a3 + 0x18]\n 20045: a1 = u64 [a3 + 0x10]\n 20048: a2 = u64 [a3 + 0x8]\n 20051: t1 = u64 [a3]\n 20053: a0 = reverse a0\n 20055: a1 = reverse a1\n 20057: a3 = reverse a2\n 20059: t1 = reverse t1\n 20061: ra = t1\n 20063: a2 = u64 [s1 + 0x198]\n 20067: u64 [a2 + 0x18] = t1\n 20070: u64 [s1 + 0x188] = a3\n 20074: u64 [a2 + 0x10] = a3\n 20077: u64 [s1 + 0x190] = a1\n 20081: u64 [a2 + 0x8] = a1\n 20084: a3 = a0\n 20086: u64 [a2] = a0\n 20088: fallthrough\n      : @588 (gas: 25)\n 20089: u64 [s1 + 0x180] = ra\n 20093: ra = a3\n 20095: a0 = u64 [s1 + 0x130]\n 20099: u64 [s1 + 0x178] = a4\n 20103: a0 = a4 <u a0\n 20106: a4 = a0 ^ 0x1\n 20109: u64 [s1 + 0x170] = a5\n 20113: a4 = 0x1 if a5 != 0\n 20116: a5 = s1 + 0x100\n 20120: a0 = u64 [a5 + 0xa0]\n 20124: a0 = t2 | a0\n 20127: a4 = 0x1 if a0 != 0\n 20130: a1 = u64 [a5 + 0x38]\n 20133: a0 = u64 [a5 + 0xb8]\n 20137: a1 = a1 + a0\n 20140: a3 = u64 [a5 + 0x50]\n 20143: a3 = a3 + t0\n 20146: a2 = u64 [a5 + 0x40]\n 20149: a0 = u64 [a5 + 0xb0]\n 20153: a2 = a2 + a0\n 20156: a0 = u64 [a5 + 0x48]\n 20159: t1 = u64 [s1 + 0x1a8]\n 20163: t1 = t1 + a0\n 20166: a0 = u64 [a5 + 0x28]\n 20169: jump @669 if a4 != 0\n      : @589 (gas: 14)\n 20173: a0 = u64 [s1 + 0x1b8]\n 20177: a4 = a1 <u a0\n 20180: a3 = a3 + a4\n 20183: a0 = t0\n 20185: t0 = a3 ^ t0\n 20188: u64 [s1 + 0x160] = a0\n 20192: a5 = a3 <u a0\n 20195: a5 = a4 if t0 == 0\n 20198: a5 = a5 + a2\n 20201: a4 = a5 <u a2\n 20204: a0 = u64 [s1 + 0x1b0]\n 20208: a2 = a2 <u a0\n 20211: a0 = t1 + a2\n 20214: t0 = 624, jump @1161\n      : @590 [@dyn 312] (gas: 2)\n 20220: u64 [s1 + 0x168] = ra\n 20224: jump @592 if a0 == 0\n      : @591 (gas: 1)\n 20227: jump @929\n      : @592 (gas: 3)\n 20230: a0 = s1 + 0x2e0\n 20234: u64 [s1 + 0x158] = t2\n 20238: ra = 626, jump @17\n      : @593 [@dyn 313] (gas: 14)\n 20244: a4 = s1 + 0x200\n 20248: a0 = u64 [a4 + 0xf8]\n 20252: a1 = u64 [a4 + 0xf0]\n 20256: a2 = u64 [a4 + 0xe8]\n 20260: a3 = u64 [a4 + 0xe0]\n 20264: a4 = s1 + 0x2138\n 20268: a5 = a4 + 0x400\n 20272: u64 [a5 + 0x20] = a0\n 20275: u64 [a5 + 0x18] = a1\n 20278: u64 [a5 + 0x10] = a2\n 20281: u64 [a5 + 0x8] = a3\n 20284: a1 = s1 + 0x2540\n 20288: a0 = u64 [s1 + 0x198]\n 20292: ra = 628, jump @23\n      : @594 [@dyn 314] (gas: 56)\n 20298: ra = u64 [s1 + 0x168]\n 20302: ra = ra + 0x1\n 20305: a0 = ra <u 0x1\n 20308: t0 = u64 [s1 + 0x190]\n 20312: t0 = t0 + a0\n 20315: a0 = ra | t0\n 20318: a0 = a0 <u 0x1\n 20321: a1 = u64 [s1 + 0x188]\n 20325: t1 = a1 + a0\n 20328: a1 = t1 <u a1\n 20331: a0 = u64 [s1 + 0x180]\n 20335: a0 = a0 + a1\n 20338: a1 = u64 [s1 + 0x1b8]\n 20342: a2 = a1 + 0x20\n 20345: u64 [s1 + 0x180] = a2\n 20349: a3 = a2 <u a1\n 20352: a1 = u64 [s1 + 0x160]\n 20356: a2 = a1 + a3\n 20359: u64 [s1 + 0x168] = a2\n 20363: a4 = a2 <u a1\n 20366: a4 = a3 if a3 == 0\n 20369: a1 = u64 [s1 + 0x1b0]\n 20373: t2 = a1 + a4\n 20376: a4 = t2 <u a1\n 20379: a1 = u64 [s1 + 0x1a8]\n 20383: a1 = a1 + a4\n 20386: u64 [s1 + 0x1a8] = a1\n 20390: a1 = u64 [s1 + 0x178]\n 20394: a4 = a1 + 0x20\n 20397: a5 = a4 <u a1\n 20400: a2 = u64 [s1 + 0x170]\n 20404: a1 = a2 + a5\n 20407: a2 = a1 <u a2\n 20410: a2 = a5 if a5 == 0\n 20413: a3 = u64 [s1 + 0x158]\n 20417: a2 = a2 + a3\n 20420: a5 = a2 <u a3\n 20423: a3 = u64 [s1 + 0x1a0]\n 20427: a3 = a3 + a5\n 20430: u64 [s1 + 0x1a0] = a3\n 20434: u64 [s1 + 0x190] = t0\n 20438: a5 = u64 [s1 + 0x198]\n 20442: u64 [a5 + 0x8] = t0\n 20445: a3 = ra\n 20447: u64 [a5] = ra\n 20449: u64 [a5 + 0x10] = t1\n 20452: ra = a0\n 20454: u64 [a5 + 0x18] = a0\n 20457: u64 [s1 + 0x188] = t1\n 20461: a0 = u64 [s1 + 0x180]\n 20465: u64 [s1 + 0x1b8] = a0\n 20469: t0 = u64 [s1 + 0x168]\n 20473: u64 [s1 + 0x1b0] = t2\n 20477: a5 = a1\n 20479: t2 = a2\n 20481: jump @588\n      : @595 (gas: 9)\n 20484: a2 = s1 + 0x100\n 20488: a3 = u64 [a2 + 0x48]\n 20491: a0 = u64 [a2 + 0x38]\n 20494: a0 = a0 | a3\n 20497: a1 = u64 [a2]\n 20499: a1 = a1 | a4\n 20502: a0 = a0 | a1\n 20505: a2 = u64 [s1 + 0xe0]\n 20509: jump @615 if a0 != 0\n      : @596 (gas: 1)\n 20513: t0 = 630, jump @1172\n      : @597 [@dyn 315] (gas: 1)\n 20519: jump @620\n      : @598 (gas: 4)\n 20522: a0 = a1 | a2\n 20525: a0 = a0 | t0\n 20528: a2 = u64 [s1 + 0x138]\n 20532: jump @683 if a0 != 0\n      : @599 (gas: 1)\n 20536: t0 = 632, jump @1172\n      : @600 [@dyn 316] (gas: 5)\n 20542: t0 = u64 [s1 + 0x88]\n 20546: a3 = u64 [s1 + 0x80]\n 20550: a2 = u64 [s1 + 0x70]\n 20553: a0 = u64 [s1 + 0x68]\n 20556: jump @688\n      : @601 (gas: 11)\n 20559: t2 = t0\n 20561: t0 = u64 [s1 + 0x148]\n 20565: a4 = u64 [s1 + 0x150]\n 20569: a4 = a4 ^ t0\n 20572: a5 = u64 [s1 + 0x138]\n 20576: t1 = a4 | a5\n 20579: a5 = u64 [s1 + 0x120]\n 20583: a4 = u64 [s1 + 0x100]\n 20587: a5 = a5 | a4\n 20590: a4 = t1 | a5\n 20593: jump @614 if a4 == 0\n      : @602 (gas: 11)\n 20597: a4 = u64 [s1 + 0x1b8]\n 20601: a4 = a1 <u a4\n 20604: a3 = a3 + a4\n 20607: t0 = a3 ^ t2\n 20610: a5 = a3 <u t2\n 20613: a5 = a4 if t0 == 0\n 20616: a5 = a5 + a2\n 20619: a4 = a5 <u a2\n 20622: a2 = a2 <u ra\n 20625: a0 = a0 + a2\n 20628: t0 = 634, jump @1161\n      : @603 [@dyn 317] (gas: 1)\n 20634: jump @605 if a0 == 0\n      : @604 (gas: 1)\n 20637: jump @929\n      : @605 (gas: 2)\n 20640: a0 = s1 + 0x18e0\n 20644: ra = 636, jump @17\n      : @606 [@dyn 318] (gas: 12)\n 20650: a0 = s1 + 0x1138\n 20654: a2 = a0 + 0x700\n 20658: a1 = u64 [a2 + 0xc0]\n 20662: u64 [s1 + 0x1b0] = a1\n 20666: a1 = u64 [a2 + 0xb8]\n 20670: u64 [s1 + 0x1a8] = a1\n 20674: a1 = u64 [a2 + 0xb0]\n 20678: u64 [s1 + 0x1a0] = a1\n 20682: a0 = u64 [a2 + 0xa8]\n 20686: u64 [s1 + 0x198] = a0\n 20690: a0 = u64 [s1 + 0x148]\n 20694: t0 = 638, jump @1158\n      : @607 [@dyn 319] (gas: 1)\n 20700: ra = 640, jump @1221\n      : @608 [@dyn 320] (gas: 1)\n 20706: t0 = 642, jump @1165\n      : @609 [@dyn 321] (gas: 1)\n 20712: ra = 644, jump @1216\n      : @610 [@dyn 322] (gas: 1)\n 20718: t0 = 646, jump @1154\n      : @611 [@dyn 323] (gas: 1)\n 20724: ra = 648, jump @1216\n      : @612 [@dyn 324] (gas: 30)\n 20730: a4 = u64 [s1 + 0x1b8]\n 20734: a2 = a4 <u 0x80\n 20738: a3 = u64 [s1 + 0x170]\n 20742: a1 = a3 if a2 != 0\n 20745: a5 = u64 [s1 + 0x178]\n 20749: a3 = u64 [s1 + 0x188]\n 20753: a3 = a3 | a5\n 20756: a3 = a0 if a2 == 0\n 20759: a1 = 0xffffffffffffffff if a4 == 0\n 20762: a3 = 0xffffffffffffffff if a4 == 0\n 20765: a4 = u64 [s1 + 0x180]\n 20769: a4 = 0 if a2 == 0\n 20771: a5 = 0 if a2 == 0\n 20773: a0 = u64 [s1 + 0x198]\n 20777: a0 = a0 & ~a3\n 20780: a2 = u64 [s1 + 0x1a0]\n 20784: a1 = a2 & ~a1\n 20787: a2 = u64 [s1 + 0x1a8]\n 20791: a2 = a2 & ~a5\n 20794: a3 = u64 [s1 + 0x1b0]\n 20798: a3 = a3 & ~a4\n 20801: a4 = s1 + 0x2938\n 20805: u64 [a4 + 0x200] = a3\n 20809: a3 = a4 + 0x100\n 20813: u64 [a3 + 0xf8] = a2\n 20817: u64 [a3 + 0xf0] = a1\n 20821: u64 [a3 + 0xe8] = a0\n 20825: a1 = s1 + 0x2b20\n 20829: a0 = u64 [s1 + 0x190]\n 20833: ra = 650, jump @23\n      : @613 [@dyn 325] (gas: 2)\n 20839: t0 = u64 [s1 + 0x148]\n 20843: fallthrough\n      : @614 (gas: 23)\n 20844: a4 = s1 + 0x100\n 20848: a2 = u64 [a4 + 0x38]\n 20851: a0 = a2 >> 0x3f\n 20854: a1 = u64 [a4]\n 20856: a1 = a1 << 0x1\n 20859: a0 = a0 | a1\n 20862: a3 = u64 [a4 + 0x20]\n 20865: a1 = a3 >> 0x3f\n 20868: a2 = a2 << 0x1\n 20871: a1 = a1 | a2\n 20874: a2 = t0 >> 0x3f\n 20877: a3 = a3 << 0x1\n 20880: a2 = a2 | a3\n 20883: a3 = t0 << 0x1\n 20886: a3 = a3 + 0x1\n 20889: a4 = s1 + 0x2938\n 20893: a5 = a4 + 0x200\n 20897: u64 [a5 + 0x8] = a3\n 20900: u64 [a5 + 0x10] = a2\n 20903: u64 [a5 + 0x18] = a1\n 20906: u64 [a5 + 0x20] = a0\n 20909: a0 = 0x2b40\n 20913: jump @627\n      : @615 (gas: 3)\n 20916: a0 = u64 [s1 + 0xd0]\n 20920: a1 = u64 [s1 + 0xc8]\n 20924: t0 = 652, jump @1215\n      : @616 [@dyn 326] (gas: 4)\n 20930: a3 = u64 [s1 + 0xd8]\n 20934: a1 = 0 if a3 != 0\n 20936: a1 = 0 if a0 != 0\n 20938: jump @618 if a1 != 0\n      : @617 (gas: 1)\n 20941: jump @929\n      : @618 (gas: 3)\n 20944: i32 a1 = a2 + 0x20\n 20947: a0 = s1 + 0x1920\n 20951: ra = 654, jump @17\n      : @619 [@dyn 327] (gas: 14)\n 20957: a2 = s1 + 0x100\n 20961: a4 = u64 [a2 + 0x20]\n 20964: a3 = u64 [a2 + 0x48]\n 20967: a0 = s1 + 0x1938\n 20971: a1 = u64 [a0]\n 20973: u64 [a2 + 0xb0] = a1\n 20977: a5 = a0 + 0xffffffffffffff00\n 20981: a1 = u64 [a5 + 0xf8]\n 20985: u64 [a2 + 0xa8] = a1\n 20989: a1 = u64 [a5 + 0xf0]\n 20993: u64 [a2 + 0x98] = a1\n 20997: a0 = u64 [a5 + 0xe8]\n 21001: u64 [a2 + 0xa0] = a0\n 21005: fallthrough\n      : @620 (gas: 18)\n 21006: a0 = a4 >> 0x3f\n 21009: a2 = u64 [s1 + 0x138]\n 21013: a1 = a2 << 0x1\n 21016: a0 = a0 | a1\n 21019: u64 [s1 + 0x190] = a0\n 21023: a0 = a2 >> 0x3f\n 21026: a1 = u64 [s1 + 0x100]\n 21030: a1 = a1 << 0x1\n 21033: a0 = a0 | a1\n 21036: u64 [s1 + 0x188] = a0\n 21040: a0 = a3 >> 0x3f\n 21043: a1 = a4 << 0x1\n 21046: a0 = a0 | a1\n 21049: u64 [s1 + 0x180] = a0\n 21053: a0 = a3 << 0x1\n 21056: u64 [s1 + 0x178] = a0\n 21060: a1 = a3 << 0x3\n 21063: t0 = 656, jump @1168\n      : @621 [@dyn 328] (gas: 1)\n 21069: ra = 658, jump @1221\n      : @622 [@dyn 329] (gas: 7)\n 21075: u64 [s1 + 0x158] = a0\n 21079: u64 [s1 + 0x170] = a1\n 21083: a0 = u64 [s1 + 0x148]\n 21087: i32 a2 = a0 << 0x3\n 21090: a0 = 0xffffffffffffffff\n 21093: a1 = 0xffffffffffffffff\n 21096: ra = 660, jump @1216\n      : @623 [@dyn 330] (gas: 10)\n 21102: u64 [s1 + 0x168] = a0\n 21106: u64 [s1 + 0x160] = a1\n 21110: a1 = u64 [s1 + 0x158]\n 21114: a0 = a0 | a1\n 21117: u64 [s1 + 0x158] = a0\n 21121: a0 = u64 [s1 + 0x1b8]\n 21125: i32 a2 = a0 + 0xffffffffffffff80\n 21128: a0 = 0xffffffffffffffff\n 21131: a1 = 0xffffffffffffffff\n 21134: ra = 662, jump @1216\n      : @624 [@dyn 331] (gas: 7)\n 21140: a4 = u64 [s1 + 0x1b8]\n 21144: a2 = a4 <u 0x80\n 21148: a3 = u64 [s1 + 0x158]\n 21152: a0 = a3 if a2 != 0\n 21155: a5 = u64 [s1 + 0x160]\n 21159: a3 = u64 [s1 + 0x170]\n 21163: t0 = 664, jump @1213\n      : @625 [@dyn 332] (gas: 14)\n 21169: a4 = u64 [s1 + 0x168]\n 21173: a4 = 0 if a2 == 0\n 21175: a1 = u64 [s1 + 0x198]\n 21179: a1 = a1 & ~a3\n 21182: a2 = u64 [s1 + 0x1a0]\n 21186: a0 = a2 & ~a0\n 21189: a2 = u64 [s1 + 0x1a8]\n 21193: a2 = a2 & ~a4\n 21196: a3 = u64 [s1 + 0x1b0]\n 21200: a3 = a3 & ~a5\n 21203: a5 = s1 + 0x100\n 21207: a4 = u64 [a5 + 0x78]\n 21210: a0 = a0 | a4\n 21213: t0 = 666, jump @1177\n      : @626 [@dyn 333] (gas: 7)\n 21219: a5 = a4 + 0x200\n 21223: u64 [a5 + 0x38] = a2\n 21226: u64 [a5 + 0x40] = a3\n 21229: u64 [a5 + 0x30] = a1\n 21232: u64 [a5 + 0x28] = a0\n 21235: a0 = 0x2b60\n 21239: fallthrough\n      : @627 (gas: 3)\n 21240: a1 = s1 + a0\n 21243: a0 = u64 [s1 + 0x140]\n 21247: ra = 668, jump @23\n      : @628 [@dyn 334] (gas: 3)\n 21253: a0 = s1 + 0x18c0\n 21257: a1 = 0x40\n 21260: ra = 670, jump @17\n      : @629 [@dyn 335] (gas: 16)\n 21266: a2 = s1 + 0x1138\n 21270: a5 = a2 + 0x700\n 21274: a3 = u64 [a5 + 0xa0]\n 21278: a4 = u64 [a5 + 0x98]\n 21282: a0 = u64 [a5 + 0x90]\n 21286: a1 = u64 [a5 + 0x88]\n 21290: u64 [s1 + 0x1b0] = a0\n 21294: a0 = a0 | a3\n 21297: u64 [s1 + 0x1b8] = a1\n 21301: a1 = a1 | a4\n 21304: a1 = a1 | a0\n 21307: a1 = a1 >> 0x20\n 21310: a0 = a0 | a4\n 21313: a0 = a0 << 0x20\n 21316: a0 = a0 | a1\n 21319: jump @631 if a0 == 0\n      : @630 (gas: 1)\n 21322: jump @929\n      : @631 (gas: 9)\n 21325: u64 [a2 + 1920] = 0\n 21329: u64 [a2 + 1912] = 0\n 21333: u64 [a2 + 1904] = 0\n 21337: a1 = s1 + 0x18a0\n 21341: u64 [a2 + 1896] = 0x20\n 21346: a0 = u64 [s1 + 0x1b8]\n 21350: u64 [s1 + 0x1a8] = a3\n 21354: u64 [s1 + 0x1a0] = a4\n 21358: ra = 672, jump @19\n      : @632 [@dyn 336] (gas: 3)\n 21364: a0 = s1 + 0x1880\n 21368: a1 = u64 [s1 + 0x90]\n 21372: ra = 674, jump @21\n      : @633 [@dyn 337] (gas: 5)\n 21378: a4 = s1 + 0x100\n 21382: a0 = u64 [a4 + 0xa8]\n 21386: a1 = u64 [a4 + 0xa0]\n 21390: a2 = a1 | a0\n 21393: t0 = 676, jump @1208\n      : @634 [@dyn 338] (gas: 3)\n 21399: u64 [a4 + 0x98] = a2\n 21403: a0 = 0 if a2 != 0\n 21405: jump @636 if a0 != 0\n      : @635 (gas: 1)\n 21408: jump @929\n      : @636 (gas: 17)\n 21411: a5 = s1 + 0x1138\n 21415: a1 = u64 [a5 + 0x758]\n 21419: a2 = u64 [a5 + 0x750]\n 21423: u64 [s1 + 0x190] = a3\n 21427: a3 = u64 [a5 + 0x748]\n 21431: a4 = 0xffffffff\n 21441: a4 = a4 & a1\n 21444: a2 = a2 & 0xffffffffffffffff\n 21447: a3 = a3 & 0xffffffffffffffff\n 21450: a0 = u64 [s1 + 0x1b8]\n 21454: i32 a0 = a0 + 0x20\n 21457: u64 [a5 + 1856] = 0\n 21461: u64 [a5 + 0x728] = a3\n 21465: u64 [a5 + 0x730] = a2\n 21469: a1 = s1 + 0x1860\n 21473: u64 [a5 + 0x738] = a4\n 21477: ra = 678, jump @19\n      : @637 [@dyn 339] (gas: 4)\n 21483: a2 = s1 + 0x100\n 21487: a0 = u64 [a2 + 0x90]\n 21491: a0 = a0 + 0xffffffffffffffc0\n 21494: t0 = 680, jump @1173\n      : @638 [@dyn 340] (gas: 1)\n 21500: jump @640 if a0 != 0\n      : @639 (gas: 1)\n 21503: jump @929\n      : @640 (gas: 4)\n 21506: a0 = u64 [s1 + 0x1b8]\n 21510: i32 a0 = a0 + 0x40\n 21513: a1 = 0x1138\n 21517: t0 = 682, jump @1207\n      : @641 [@dyn 341] (gas: 4)\n 21523: i32 a1 = a1 + 0xfffffffffffff840\n 21527: a1 = a1 + s1\n 21530: u64 [a2 + 1808] = 0\n 21534: ra = 684, jump @19\n      : @642 [@dyn 342] (gas: 3)\n 21540: a1 = u64 [s1 + 0x1b8]\n 21544: a0 = a1 + 0xe0\n 21548: t0 = 686, jump @1194\n      : @643 [@dyn 343] (gas: 21)\n 21554: a4 = u64 [s1 + 0x1a8]\n 21558: a4 = a4 + a1\n 21561: a1 = s1 + 0x1138\n 21565: a5 = a1 + 0x600\n 21569: u64 [a5 + 0xb0] = a2\n 21573: u64 [a5 + 0xa8] = a0\n 21577: a0 = u64 [s1 + 0x40]\n 21580: u64 [a5 + 0xe0] = a0\n 21584: a0 = u64 [s1 + 0x48]\n 21587: u64 [a5 + 0xd8] = a0\n 21591: a0 = u64 [s1 + 0x50]\n 21594: u64 [a5 + 0xd0] = a0\n 21598: a0 = u64 [s1 + 0x58]\n 21601: u64 [a5 + 0xc8] = a0\n 21605: u64 [a5 + 0xb8] = a3\n 21609: a3 = a1\n 21611: a0 = s1 + 0x1820\n 21615: a1 = s1 + 0x1800\n 21619: a2 = s1 + 0x17e0\n 21623: u64 [a3 + 0x6c0] = a4\n 21627: ra = 688, jump @1129\n      : @644 [@dyn 344] (gas: 13)\n 21633: a1 = s1 + 0x1138\n 21637: a0 = u64 [a1 + 0x700]\n 21641: u64 [s1 + 0x170] = a0\n 21645: a2 = a1 + 0x600\n 21649: a0 = u64 [a2 + 0xf8]\n 21653: u64 [s1 + 0x178] = a0\n 21657: a0 = u64 [a2 + 0xf0]\n 21661: u64 [s1 + 0x180] = a0\n 21665: a0 = u64 [a2 + 0xe8]\n 21669: u64 [s1 + 0x188] = a0\n 21673: a0 = s1 + 0x17c0\n 21677: a1 = u64 [s1 + 0x130]\n 21681: ra = 690, jump @21\n      : @645 [@dyn 345] (gas: 5)\n 21687: a0 = 0x100000000\n 21697: a2 = s1 + 0x100\n 21701: u64 [a2 + 0x90] = a0\n 21705: a0 = 0xffffffa0\n 21715: t0 = 692, jump @1173\n      : @646 [@dyn 346] (gas: 1)\n 21721: jump @648 if a0 != 0\n      : @647 (gas: 1)\n 21724: jump @929\n      : @648 (gas: 14)\n 21727: a5 = s1 + 0x1138\n 21731: t0 = u64 [a5 + 0x6a0]\n 21735: a2 = a5 + 0x600\n 21739: a1 = u64 [a2 + 0x98]\n 21743: a3 = u64 [a2 + 0x90]\n 21747: a4 = u64 [a2 + 0x88]\n 21751: a0 = u64 [s1 + 0x1b8]\n 21755: i32 a0 = a0 + 0x60\n 21758: u64 [a2 + 0x68] = a4\n 21761: u64 [a2 + 0x70] = a3\n 21764: u64 [a2 + 0x78] = a1\n 21767: a1 = s1 + 0x17a0\n 21771: u64 [a5 + 0x680] = t0\n 21775: ra = 694, jump @19\n      : @649 [@dyn 347] (gas: 4)\n 21781: a2 = s1 + 0x100\n 21785: a0 = u64 [a2 + 0x90]\n 21789: a0 = a0 + 0xffffffffffffff80\n 21792: t0 = 696, jump @1173\n      : @650 [@dyn 348] (gas: 1)\n 21798: jump @652 if a0 != 0\n      : @651 (gas: 1)\n 21801: jump @929\n      : @652 (gas: 46)\n 21804: a0 = u64 [s1 + 0x1b8]\n 21808: a1 = u64 [s1 + 0x188]\n 21812: a2 = a1 <u a0\n 21815: t2 = a0\n 21817: a3 = u64 [s1 + 0x1b0]\n 21821: a4 = u64 [s1 + 0x180]\n 21825: t0 = a4 ^ a3\n 21828: a0 = a4 <u a3\n 21831: a0 = a2 if t0 == 0\n 21834: t1 = u64 [s1 + 0x1a0]\n 21838: a5 = u64 [s1 + 0x178]\n 21842: t0 = a5 - t1\n 21845: ra = a5\n 21847: a3 = a4 - a3\n 21850: a3 = a3 - a2\n 21853: a4 = a1 - t2\n 21856: a2 = a4 + 0xffffffffffffffe0\n 21859: a4 = a2 <u a4\n 21862: a5 = a3 + a4\n 21865: a5 = a5 + 0xffffffffffffffff\n 21868: a1 = a5 ^ a3\n 21871: a3 = a5 <u a3\n 21874: a3 = a4 if a1 == 0\n 21877: t1 = ra <u t1\n 21880: a4 = u64 [s1 + 0x1a8]\n 21884: a1 = u64 [s1 + 0x170]\n 21888: a4 = a1 - a4\n 21891: a4 = a4 - t1\n 21894: a1 = t0 <u a0\n 21897: a4 = a4 - a1\n 21900: a0 = t0 - a0\n 21903: a1 = a0 <u 0x1\n 21906: a4 = a4 - a1\n 21909: a0 = a0 + 0xffffffffffffffff\n 21912: a3 = a3 + a0\n 21915: a0 = a3 <u a0\n 21918: t0 = a4 + a0\n 21921: i32 a0 = t2 + 0x80\n 21925: a4 = s1 + 0x1138\n 21929: a1 = a4 + 0x600\n 21933: u64 [a1 + 0x48] = a2\n 21936: u64 [a1 + 0x50] = a5\n 21939: u64 [a1 + 0x58] = a3\n 21942: a1 = s1 + 0x1780\n 21946: u64 [a4 + 0x660] = t0\n 21950: ra = 698, jump @19\n      : @653 [@dyn 349] (gas: 24)\n 21956: a1 = s1 + 0x1138\n 21960: a0 = u64 [s1 + 0x170]\n 21964: a2 = a1 + 0x600\n 21968: u64 [a2] = a0\n 21970: a0 = u64 [s1 + 0x178]\n 21974: a3 = a1 + 0x500\n 21978: u64 [a3 + 0xf8] = a0\n 21982: a0 = u64 [s1 + 0x180]\n 21986: u64 [a3 + 0xf0] = a0\n 21990: a0 = u64 [s1 + 0x188]\n 21994: u64 [a3 + 0xe8] = a0\n 21998: a0 = u64 [s1 + 0x88]\n 22002: u64 [a2 + 0x20] = a0\n 22005: a0 = u64 [s1 + 0x98]\n 22009: u64 [a2 + 0x18] = a0\n 22012: a0 = u64 [s1 + 0xb8]\n 22016: u64 [a2 + 0x10] = a0\n 22019: a4 = a1\n 22021: a0 = s1 + 0x1760\n 22025: a1 = s1 + 0x1740\n 22029: a2 = s1 + 0x1720\n 22033: a3 = u64 [s1 + 0x128]\n 22037: u64 [a4 + 0x608] = a3\n 22041: ra = 700, jump @1129\n      : @654 [@dyn 350] (gas: 5)\n 22047: a0 = 0x100000000\n 22057: a2 = s1 + 0x100\n 22061: u64 [a2 + 0x90] = a0\n 22065: a0 = 0xffffff60\n 22075: t0 = 702, jump @1173\n      : @655 [@dyn 351] (gas: 1)\n 22081: jump @657 if a0 != 0\n      : @656 (gas: 1)\n 22084: jump @929\n      : @657 (gas: 53)\n 22087: a0 = s1 + 0x1138\n 22091: a3 = a0 + 0x600\n 22095: a2 = u64 [a3 + 0x28]\n 22098: a5 = u64 [a3 + 0x30]\n 22101: a1 = u64 [a3 + 0x40]\n 22104: u64 [s1 + 0x188] = a1\n 22108: ra = u64 [a0 + 0x638]\n 22112: u64 [s1 + 0x170] = ra\n 22116: a0 = u64 [s1 + 0x1b8]\n 22120: a1 = a2 <u a0\n 22123: a4 = a2\n 22125: u64 [s1 + 0x178] = a2\n 22129: t0 = a0\n 22131: a3 = u64 [s1 + 0x1b0]\n 22135: a2 = a5 ^ a3\n 22138: a0 = a5 <u a3\n 22141: u64 [s1 + 0x180] = a5\n 22145: a0 = a1 if a2 == 0\n 22148: a2 = a5 - a3\n 22151: a3 = a2 - a1\n 22154: a2 = a4 - t0\n 22157: t2 = t0\n 22159: t0 = a2 + 0xffffffffffffffe0\n 22162: a4 = t0 <u a2\n 22165: a2 = a3 + a4\n 22168: a2 = a2 + 0xffffffffffffffff\n 22171: a5 = a2 ^ a3\n 22174: a3 = a2 <u a3\n 22177: a3 = a4 if a5 == 0\n 22180: a4 = u64 [s1 + 0x1a0]\n 22184: t1 = ra <u a4\n 22187: a1 = u64 [s1 + 0x1a8]\n 22191: a5 = u64 [s1 + 0x188]\n 22195: a5 = a5 - a1\n 22198: a5 = a5 - t1\n 22201: a4 = ra - a4\n 22204: a1 = a4 <u a0\n 22207: a5 = a5 - a1\n 22210: a4 = a4 - a0\n 22213: a0 = a4 <u 0x1\n 22216: a5 = a5 - a0\n 22219: a4 = a4 + 0xffffffffffffffff\n 22222: a3 = a3 + a4\n 22225: a0 = a3 <u a4\n 22228: a5 = a5 + a0\n 22231: i32 a0 = t2 + 0xa0\n 22235: a4 = s1 + 0x1138\n 22239: u64 [a4 + 0x5c8] = t0\n 22243: u64 [a4 + 0x5d0] = a2\n 22247: u64 [a4 + 0x5d8] = a3\n 22251: a1 = s1 + 0x1700\n 22255: u64 [a4 + 0x5e0] = a5\n 22259: ra = 704, jump @19\n      : @658 [@dyn 352] (gas: 23)\n 22265: a1 = s1 + 0x1138\n 22269: a0 = u64 [s1 + 0x188]\n 22273: a2 = a1 + 0x500\n 22277: u64 [a2 + 0x80] = a0\n 22281: a0 = u64 [s1 + 0x170]\n 22285: u64 [a2 + 0x78] = a0\n 22288: a0 = u64 [s1 + 0x180]\n 22292: u64 [a2 + 0x70] = a0\n 22295: a0 = u64 [s1 + 0x178]\n 22299: u64 [a2 + 0x68] = a0\n 22302: a0 = u64 [s1 + 0x70]\n 22305: u64 [a2 + 0xa0] = a0\n 22309: a0 = u64 [s1 + 0x108]\n 22313: u64 [a2 + 0x98] = a0\n 22317: a0 = u64 [s1 + 0x110]\n 22321: u64 [a2 + 0x90] = a0\n 22325: a4 = a1\n 22327: a0 = s1 + 0x16e0\n 22331: a1 = s1 + 0x16c0\n 22335: a2 = s1 + 0x16a0\n 22339: a3 = u64 [s1 + 0x118]\n 22343: u64 [a4 + 0x588] = a3\n 22347: ra = 706, jump @1129\n      : @659 [@dyn 353] (gas: 4)\n 22353: a2 = s1 + 0x100\n 22357: a0 = u64 [a2 + 0x90]\n 22361: a0 = a0 + 0xffffffffffffff40\n 22365: t0 = 708, jump @1173\n      : @660 [@dyn 354] (gas: 1)\n 22371: jump @662 if a0 != 0\n      : @661 (gas: 1)\n 22374: jump @929\n      : @662 (gas: 53)\n 22377: a0 = s1 + 0x1138\n 22381: a3 = a0 + 0x500\n 22385: a2 = u64 [a3 + 0xa8]\n 22389: a5 = u64 [a3 + 0xb0]\n 22393: a1 = u64 [a3 + 0xc0]\n 22397: u64 [s1 + 0x198] = a1\n 22401: ra = u64 [a0 + 0x5b8]\n 22405: u64 [s1 + 0x180] = ra\n 22409: a0 = u64 [s1 + 0x1b8]\n 22413: a1 = a2 <u a0\n 22416: a4 = a2\n 22418: u64 [s1 + 0x188] = a2\n 22422: t0 = a0\n 22424: a3 = u64 [s1 + 0x1b0]\n 22428: a2 = a5 ^ a3\n 22431: a0 = a5 <u a3\n 22434: u64 [s1 + 0x190] = a5\n 22438: a0 = a1 if a2 == 0\n 22441: a2 = a5 - a3\n 22444: a3 = a2 - a1\n 22447: a2 = a4 - t0\n 22450: t1 = t0\n 22452: t0 = a2 + 0xffffffffffffffe0\n 22455: a4 = t0 <u a2\n 22458: a2 = a3 + a4\n 22461: t2 = a2 + 0xffffffffffffffff\n 22464: a5 = t2 ^ a3\n 22467: a3 = t2 <u a3\n 22470: a3 = a4 if a5 == 0\n 22473: a2 = u64 [s1 + 0x1a0]\n 22477: a4 = ra <u a2\n 22480: a1 = u64 [s1 + 0x1a8]\n 22484: a5 = u64 [s1 + 0x198]\n 22488: a5 = a5 - a1\n 22491: a5 = a5 - a4\n 22494: a4 = ra - a2\n 22497: a1 = a4 <u a0\n 22500: a5 = a5 - a1\n 22503: a4 = a4 - a0\n 22506: a0 = a4 <u 0x1\n 22509: a5 = a5 - a0\n 22512: a4 = a4 + 0xffffffffffffffff\n 22515: a3 = a3 + a4\n 22518: a0 = a3 <u a4\n 22521: a5 = a5 + a0\n 22524: i32 a0 = t1 + 0xc0\n 22528: a2 = s1 + 0x1138\n 22532: u64 [a2 + 0x548] = t0\n 22536: u64 [a2 + 0x550] = t2\n 22540: u64 [a2 + 0x558] = a3\n 22544: a1 = s1 + 0x1680\n 22548: u64 [a2 + 0x560] = a5\n 22552: ra = 710, jump @19\n      : @663 [@dyn 355] (gas: 33)\n 22558: a0 = u64 [s1 + 0xa0]\n 22562: ecalli 3 // 'caller'\n 22564: a0 = u64 [s1 + 0xc0]\n 22568: a1 = u32 [a0 + 0x10]\n 22571: u64 [s1 + 0x170] = a1\n 22575: a1 = u64 [a0 + 0x8]\n 22578: u64 [s1 + 0x168] = a1\n 22582: a0 = u64 [a0]\n 22584: u64 [s1 + 0x178] = a0\n 22588: a1 = s1 + 0x1138\n 22592: a0 = u64 [s1 + 0x198]\n 22596: a2 = a1 + 0x500\n 22600: u64 [a2] = a0\n 22602: a0 = u64 [s1 + 0x180]\n 22606: a3 = a1 + 0x400\n 22610: u64 [a3 + 0xf8] = a0\n 22614: a0 = u64 [s1 + 0x190]\n 22618: u64 [a3 + 0xf0] = a0\n 22622: a0 = u64 [s1 + 0x188]\n 22626: u64 [a3 + 0xe8] = a0\n 22630: a0 = u64 [s1 + 0x80]\n 22634: u64 [a2 + 0x20] = a0\n 22637: a0 = u64 [s1 + 0xe8]\n 22641: u64 [a2 + 0x18] = a0\n 22644: a0 = u64 [s1 + 0xf0]\n 22648: u64 [a2 + 0x10] = a0\n 22651: a4 = a1\n 22653: a0 = s1 + 0x1660\n 22657: a1 = s1 + 0x1640\n 22661: a2 = s1 + 0x1620\n 22665: a3 = u64 [s1 + 0xf8]\n 22669: u64 [a4 + 0x508] = a3\n 22673: ra = 712, jump @1129\n      : @664 [@dyn 356] (gas: 2)\n 22679: a1 = s1 + 0x1138\n 22683: fallthrough\n      : @665 (gas: 31)\n 22684: a0 = u64 [a1 + 0x530]\n 22688: t0 = u64 [a1 + 0x540]\n 22692: t1 = u64 [a1 + 0x528]\n 22696: a3 = u64 [a1 + 0x538]\n 22700: a1 = u64 [s1 + 0x1b0]\n 22704: a4 = a0 ^ a1\n 22707: a5 = a0 <u a1\n 22710: ra = a1\n 22712: t2 = u64 [s1 + 0x1b8]\n 22716: a1 = t1 <u t2\n 22719: a5 = a1 if a4 == 0\n 22722: a2 = u64 [s1 + 0x1a0]\n 22726: a4 = a3 - a2\n 22729: a3 = a3 <u a2\n 22732: a2 = u64 [s1 + 0x1a8]\n 22736: a2 = t0 - a2\n 22739: a2 = a2 - a3\n 22742: a3 = a4 <u a5\n 22745: a2 = a2 - a3\n 22748: a4 = a4 - a5\n 22751: a0 = a0 - ra\n 22754: a0 = a0 - a1\n 22757: a1 = t1 - t2\n 22760: a0 = a0 | a2\n 22763: a2 = a1 | a4\n 22766: a2 = a2 | a0\n 22769: a0 = a0 | a4\n 22772: a2 = a2 >> 0x20\n 22775: a0 = a0 << 0x20\n 22778: a0 = a0 | a2\n 22781: jump @667 if a0 == 0\n      : @666 (gas: 1)\n 22784: jump @929\n      : @667 (gas: 31)\n 22787: a0 = u64 [s1 + 0x168]\n 22791: a2 = reverse a0\n 22793: a0 = a2 << 0x20\n 22796: a3 = u64 [s1 + 0x170]\n 22800: a3 = reverse a3\n 22802: a3 = a3 >> 0x20\n 22805: t0 = a3 | a0\n 22808: a0 = u64 [s1 + 0x178]\n 22812: a3 = reverse a0\n 22814: a4 = a3 << 0x20\n 22817: a2 = a2 >> 0x20\n 22820: a2 = a2 | a4\n 22823: a3 = a3 >> 0x20\n 22826: a4 = u64 [0x20000]\n 22831: t1 = s1 + 0x1138\n 22835: u64 [t1 + 0x4e0] = a4\n 22839: a4 = u64 [0x20008]\n 22844: a5 = u64 [0x20010]\n 22849: a0 = u64 [0x20018]\n 22854: u64 [t1 + 0x4d8] = a4\n 22858: a4 = t1 + 0x400\n 22862: u64 [a4 + 0xd0] = a5\n 22866: u64 [t1 + 1216] = 0\n 22870: u64 [a4 + 0xc8] = a0\n 22874: u64 [a4 + 0xb8] = a3\n 22878: u64 [a4 + 0xb0] = a2\n 22882: a2 = s1 + 0x1600\n 22886: a3 = s1 + 0x15e0\n 22890: u64 [t1 + 0x4a8] = t0\n 22894: a0 = u64 [s1 + 0x1b8]\n 22898: ra = 714, jump @24\n      : @668 [@dyn 357] (gas: 6)\n 22904: a0 = 0\n 22906: a1 = u64 [s1 + 0xb0]\n 22910: a2 = 0\n 22912: ecalli 7 // 'seal_return'\n 22914: a1 = 0x20070\n 22919: jump @931\n      : @669 (gas: 7)\n 22922: a4 = u64 [s1 + 0xb0]\n 22926: a5 = u64 [s1 + 0x130]\n 22930: a4 = a4 ^ a5\n 22933: a5 = u64 [s1 + 0x90]\n 22937: a4 = a4 | a5\n 22940: a4 = a4 | a0\n 22943: jump @682 if a4 == 0\n      : @670 (gas: 13)\n 22947: a0 = u64 [s1 + 0x1b8]\n 22951: a4 = a1 <u a0\n 22954: a3 = a3 + a4\n 22957: a0 = t0\n 22959: t0 = a3 ^ t0\n 22962: a5 = a3 <u a0\n 22965: a5 = a4 if t0 == 0\n 22968: a5 = a5 + a2\n 22971: a4 = a5 <u a2\n 22974: a0 = u64 [s1 + 0x1b0]\n 22978: a2 = a2 <u a0\n 22981: a0 = t1 + a2\n 22984: t0 = 716, jump @1161\n      : @671 [@dyn 358] (gas: 1)\n 22990: jump @673 if a0 == 0\n      : @672 (gas: 1)\n 22993: jump @929\n      : @673 (gas: 3)\n 22996: a0 = s1 + 0x7ff\n 23000: a0 = a0 + 0x181\n 23004: ra = 718, jump @17\n      : @674 [@dyn 359] (gas: 12)\n 23010: a0 = s1 + 0x7ff\n 23014: a0 = a0 + 0x139\n 23018: a1 = u64 [a0 + 0x60]\n 23021: u64 [s1 + 0x1b0] = a1\n 23025: a1 = u64 [a0 + 0x58]\n 23028: u64 [s1 + 0x1a8] = a1\n 23032: a1 = u64 [a0 + 0x50]\n 23035: u64 [s1 + 0x1a0] = a1\n 23039: a0 = u64 [a0 + 0x48]\n 23042: u64 [s1 + 0x190] = a0\n 23046: a0 = u64 [s1 + 0xb0]\n 23050: t0 = 720, jump @1158\n      : @675 [@dyn 360] (gas: 1)\n 23056: ra = 722, jump @1221\n      : @676 [@dyn 361] (gas: 1)\n 23062: t0 = 724, jump @1165\n      : @677 [@dyn 362] (gas: 1)\n 23068: ra = 726, jump @1216\n      : @678 [@dyn 363] (gas: 1)\n 23074: t0 = 728, jump @1154\n      : @679 [@dyn 364] (gas: 1)\n 23080: ra = 730, jump @1216\n      : @680 [@dyn 365] (gas: 15)\n 23086: a4 = u64 [s1 + 0x1b8]\n 23090: a2 = a4 <u 0x80\n 23094: a3 = u64 [s1 + 0x170]\n 23098: a1 = a3 if a2 != 0\n 23101: a5 = u64 [s1 + 0x178]\n 23105: a3 = u64 [s1 + 0x188]\n 23109: a3 = a3 | a5\n 23112: a3 = a0 if a2 == 0\n 23115: a1 = 0xffffffffffffffff if a4 == 0\n 23118: a3 = 0xffffffffffffffff if a4 == 0\n 23121: a4 = u64 [s1 + 0x180]\n 23125: a4 = 0 if a2 == 0\n 23127: a5 = 0 if a2 == 0\n 23129: a0 = u64 [s1 + 0x190]\n 23133: t0 = 732, jump @1187\n      : @681 [@dyn 366] (gas: 8)\n 23139: a5 = a4 + 0x400\n 23143: u64 [a5 + 0x40] = a3\n 23146: u64 [a5 + 0x38] = a2\n 23149: u64 [a5 + 0x30] = a1\n 23152: u64 [a5 + 0x28] = a0\n 23155: a1 = s1 + 0x2560\n 23159: a0 = u64 [s1 + 0x198]\n 23163: ra = 734, jump @23\n      : @682 [@dyn 367] (gas: 19)\n 23169: a0 = u64 [s1 + 0x88]\n 23173: a1 = u64 [s1 + 0x80]\n 23177: a0 = a0 | a1\n 23180: a1 = u64 [s1 + 0x68]\n 23183: a2 = u64 [s1 + 0x60]\n 23186: a1 = a1 | a2\n 23189: a2 = u64 [s1 + 0x70]\n 23192: a3 = u64 [s1 + 0x50]\n 23195: a2 = a2 | a3\n 23198: a3 = u64 [s1 + 0x58]\n 23201: a3 = a3 + 0x1\n 23204: a4 = s1 + 0x2138\n 23208: a5 = a4 + 0x400\n 23212: u64 [a5 + 0x48] = a3\n 23215: u64 [a5 + 0x50] = a2\n 23218: u64 [a5 + 0x58] = a1\n 23221: u64 [a5 + 0x60] = a0\n 23224: a0 = 0x2580\n 23228: jump @694\n      : @683 (gas: 5)\n 23231: u64 [s1 + 0x50] = a4\n 23234: a4 = s1 + 0x100\n 23238: a0 = u64 [a4 + 0x48]\n 23241: a1 = u64 [a4 + 0x40]\n 23244: t0 = 736, jump @1215\n      : @684 [@dyn 368] (gas: 4)\n 23250: a3 = u64 [a4 + 0x50]\n 23253: a1 = 0 if a3 != 0\n 23255: a1 = 0 if a0 != 0\n 23257: jump @686 if a1 != 0\n      : @685 (gas: 1)\n 23260: jump @929\n      : @686 (gas: 4)\n 23263: i32 a1 = a2 + 0x20\n 23266: a0 = s1 + 0x7ff\n 23270: a0 = a0 + 0x1c1\n 23274: ra = 738, jump @17\n      : @687 [@dyn 369] (gas: 18)\n 23280: a0 = s1 + 0x7ff\n 23284: a0 = a0 + 0x139\n 23288: a1 = u64 [a0 + 0xa0]\n 23292: a2 = s1 + 0x100\n 23296: u64 [a2 + 0xb0] = a1\n 23300: a1 = u64 [a0 + 0x98]\n 23304: u64 [a2 + 0xa8] = a1\n 23308: a1 = u64 [a0 + 0x90]\n 23312: u64 [a2 + 0x98] = a1\n 23316: a0 = u64 [a0 + 0x88]\n 23320: u64 [a2 + 0xa0] = a0\n 23324: a1 = u64 [s1 + 0xb0]\n 23328: t0 = u64 [s1 + 0x88]\n 23332: a3 = u64 [s1 + 0x80]\n 23336: a2 = u64 [s1 + 0x70]\n 23339: a0 = u64 [s1 + 0x68]\n 23342: a4 = u64 [s1 + 0x50]\n 23345: fallthrough\n      : @688 (gas: 13)\n 23346: a5 = u64 [s1 + 0x60]\n 23349: a0 = a0 | a5\n 23352: u64 [s1 + 0x190] = a0\n 23356: a0 = a3 | t0\n 23359: u64 [s1 + 0x188] = a0\n 23363: a0 = a4 | a2\n 23366: u64 [s1 + 0x180] = a0\n 23370: a2 = a1 << 0x3\n 23373: u64 [s1 + 0x1b8] = a2\n 23377: i32 a2 = 0x80 - a2\n 23381: a0 = 0xffffffffffffffff\n 23384: a1 = 0xffffffffffffffff\n 23387: ra = 740, jump @1221\n      : @689 [@dyn 370] (gas: 7)\n 23393: u64 [s1 + 0x160] = a0\n 23397: u64 [s1 + 0x178] = a1\n 23401: a0 = u64 [s1 + 0xb0]\n 23405: i32 a2 = a0 << 0x3\n 23408: a0 = 0xffffffffffffffff\n 23411: a1 = 0xffffffffffffffff\n 23414: ra = 742, jump @1216\n      : @690 [@dyn 371] (gas: 1)\n 23420: t0 = 744, jump @1156\n      : @691 [@dyn 372] (gas: 1)\n 23426: ra = 746, jump @1216\n      : @692 [@dyn 373] (gas: 1)\n 23432: t0 = 748, jump @1151\n      : @693 [@dyn 374] (gas: 17)\n 23438: a4 = u64 [s1 + 0x58]\n 23441: a0 = a0 | a4\n 23444: a5 = s1 + 0x100\n 23448: a4 = u64 [a5 + 0x80]\n 23452: a1 = a1 | a4\n 23455: a4 = u64 [a5 + 0x88]\n 23459: a3 = a3 | a4\n 23462: a4 = u64 [a5 + 0x90]\n 23466: a2 = a2 | a4\n 23469: a4 = s1 + 0x2138\n 23473: a5 = a4 + 0x400\n 23477: u64 [a5 + 0x78] = a2\n 23480: u64 [a5 + 0x80] = a3\n 23484: u64 [a5 + 0x70] = a1\n 23487: u64 [a5 + 0x68] = a0\n 23490: a0 = 0x25a0\n 23494: fallthrough\n      : @694 (gas: 3)\n 23495: a1 = s1 + a0\n 23498: a0 = u64 [s1 + 0x98]\n 23502: ra = 750, jump @23\n      : @695 [@dyn 375] (gas: 4)\n 23508: a0 = s1 + 0x7ff\n 23512: a0 = a0 + 0x161\n 23516: a1 = u64 [s1 + 0xd0]\n 23520: ra = 752, jump @17\n      : @696 [@dyn 376] (gas: 32)\n 23526: a0 = s1 + 0x7ff\n 23530: a0 = a0 + 0x139\n 23534: t0 = u64 [a0 + 0x28]\n 23537: t1 = u64 [a0 + 0x30]\n 23540: t2 = u64 [a0 + 0x38]\n 23543: a1 = a0\n 23545: a0 = u64 [s1 + 0xb8]\n 23549: a3 = a0 + 0x2\n 23552: a4 = a3 <u a0\n 23555: a0 = u64 [s1 + 0xe0]\n 23559: a2 = a0 + a4\n 23562: a0 = a2 <u a0\n 23565: a0 = a4 if a4 == 0\n 23568: a4 = u64 [a1 + 0x40]\n 23571: a1 = s1 + 0x2138\n 23575: a5 = a1 + 0x400\n 23579: u64 [a5 + 0x90] = a2\n 23583: u64 [a5 + 0x88] = a3\n 23587: a2 = u64 [s1 + 0xf0]\n 23591: a0 = a0 + a2\n 23594: u64 [a5 + 0x98] = a0\n 23598: a0 = a0 <u a2\n 23601: a2 = u64 [s1 + 0xe8]\n 23605: a0 = a0 + a2\n 23608: u64 [a5 + 0xa0] = a0\n 23612: u64 [a5 + 0xc0] = a4\n 23616: u64 [a1 + 0x4b8] = t2\n 23620: u64 [a1 + 0x4b0] = t1\n 23624: u64 [a1 + 0x4a8] = t0\n 23628: a0 = s1 + 0x25c0\n 23632: a1 = s1 + 0x25e0\n 23636: ra = 754, jump @23\n      : @697 [@dyn 377] (gas: 28)\n 23642: a0 = sp + 0xffffffffffffffe0\n 23645: a2 = a0 & 0xffffffffffffffe0\n 23648: sp = a2\n 23650: a0 = u64 [s1 + 0xb8]\n 23654: a3 = a0 + 0x3\n 23657: a0 = a3 <u a0\n 23660: a1 = u64 [s1 + 0xe0]\n 23664: a4 = a1 + a0\n 23667: a1 = a4 <u a1\n 23670: a1 = a0 if a0 == 0\n 23673: a0 = u64 [s1 + 0xf0]\n 23677: a1 = a1 + a0\n 23680: a0 = a1 <u a0\n 23683: a5 = u64 [s1 + 0xe8]\n 23687: a0 = a0 + a5\n 23690: u64 [s1 + 0x160] = a0\n 23694: u64 [a2 + 0x18] = a0\n 23697: u64 [s1 + 0x158] = a1\n 23701: u64 [a2 + 0x10] = a1\n 23704: u64 [s1 + 0x168] = a4\n 23708: u64 [a2 + 0x8] = a4\n 23711: u64 [s1 + 0xb0] = a2\n 23715: u64 [s1 + 0x170] = a3\n 23719: u64 [a2] = a3\n 23721: a0 = s1 + 0x7ff\n 23725: a0 = a0 + 0x141\n 23729: a1 = u64 [s1 + 0xc0]\n 23733: ra = 756, jump @17\n      : @698 [@dyn 378] (gas: 18)\n 23739: a1 = s1 + 0x7ff\n 23743: a1 = a1 + 0x139\n 23747: a3 = u64 [a1 + 0x20]\n 23750: a4 = u64 [a1 + 0x18]\n 23753: a0 = u64 [a1 + 0x10]\n 23756: a1 = u64 [a1 + 0x8]\n 23759: a2 = s1 + 0x100\n 23763: u64 [a2 + 0x50] = a0\n 23766: u64 [a2 + 0x48] = a3\n 23769: a0 = a0 | a3\n 23772: a3 = a1 | a4\n 23775: a3 = a3 | a0\n 23778: a3 = a3 >> 0x20\n 23781: u64 [a2 + 0x40] = a4\n 23784: a0 = a0 | a4\n 23787: a0 = a0 << 0x20\n 23790: a0 = a0 | a3\n 23793: jump @700 if a0 == 0\n      : @699 (gas: 1)\n 23796: jump @929\n      : @700 (gas: 4)\n 23799: a0 = s1 + 0x7ff\n 23803: a0 = a0 + 0x121\n 23807: u64 [s1 + 0x138] = a1\n 23811: ra = 758, jump @17\n      : @701 [@dyn 379] (gas: 7)\n 23817: a0 = s1 + 0x7ff\n 23821: a0 = a0 + 0x139\n 23825: a3 = u64 [a0]\n 23827: a1 = u64 [a0 + 0xfffffffffffffff8]\n 23830: a0 = s1 + 0x1000\n 23834: a2 = u64 [a0 + 0xfffffffffffff928]\n 23838: t0 = 760, jump @1209\n      : @702 [@dyn 380] (gas: 7)\n 23844: u64 [s1 + 0xc0] = a3\n 23848: a1 = a1 | a3\n 23851: u64 [s1 + 0x80] = a0\n 23855: u64 [s1 + 0x88] = a4\n 23859: u64 [s1 + 0x98] = a1\n 23863: a0 = a4 if a1 != 0\n 23866: jump @704 if a0 == 0\n      : @703 (gas: 1)\n 23869: jump @966\n      : @704 (gas: 7)\n 23872: a0 = s1 + 0x1000\n 23876: a0 = u64 [a0 + 0xfffffffffffff920]\n 23880: u64 [s1 + 0x128] = a0\n 23884: a0 = s1 + 0x7ff\n 23888: a0 = a0 + 0x101\n 23892: a1 = u64 [s1 + 0xb0]\n 23896: ra = 762, jump @21\n      : @705 [@dyn 381] (gas: 21)\n 23902: a0 = s1 + 0x1000\n 23906: a2 = u64 [a0 + 0xfffffffffffff900]\n 23910: a0 = s1 + 0x1000\n 23914: a0 = u64 [a0 + 0xfffffffffffff908]\n 23918: a1 = s1 + 0x1000\n 23922: a1 = u64 [a1 + 0xfffffffffffff910]\n 23926: a3 = s1 + 0x1000\n 23930: a3 = u64 [a3 + 0xfffffffffffff918]\n 23934: a4 = s1 + 0x1000\n 23938: u64 [a4 + 0xfffffffffffff8d8] = a3\n 23942: a3 = s1 + 0x1000\n 23946: u64 [a3 + 0xfffffffffffff8d0] = a1\n 23950: a1 = s1 + 0x1000\n 23954: u64 [a1 + 0xfffffffffffff8c8] = a0\n 23958: a0 = s1 + 0x7ff\n 23962: a0 = a0 + 0xe1\n 23966: a1 = s1 + 0x7ff\n 23970: a1 = a1 + 0xc1\n 23974: a3 = s1 + 0x1000\n 23978: u64 [a3 + 0xfffffffffffff8c0] = a2\n 23982: ra = 764, jump @1120\n      : @706 [@dyn 382] (gas: 9)\n 23988: a0 = s1 + 0x1000\n 23992: a3 = u64 [a0 + 0xfffffffffffff8f8]\n 23996: a0 = s1 + 0x1000\n 24000: a4 = u64 [a0 + 0xfffffffffffff8f0]\n 24004: a0 = s1 + 0x1000\n 24008: a5 = u64 [a0 + 0xfffffffffffff8e8]\n 24012: a0 = s1 + 0x1000\n 24016: a2 = u64 [a0 + 0xfffffffffffff8e0]\n 24020: t0 = 766, jump @1157\n      : @707 [@dyn 383] (gas: 2)\n 24026: u64 [s1 + 0x90] = a0\n 24030: jump @719 if a2 == 0\n      : @708 (gas: 16)\n 24034: a0 = u64 [s1 + 0x170]\n 24038: a1 = s1 + 0x1000\n 24042: u64 [a1 + 0xfffffffffffff8a0] = a0\n 24046: a0 = u64 [s1 + 0x168]\n 24050: a1 = s1 + 0x1000\n 24054: u64 [a1 + 0xfffffffffffff8a8] = a0\n 24058: a0 = u64 [s1 + 0x158]\n 24062: a1 = s1 + 0x1000\n 24066: u64 [a1 + 0xfffffffffffff8b0] = a0\n 24070: a1 = s1 + 0x7ff\n 24074: a1 = a1 + 0xa1\n 24078: a0 = u64 [s1 + 0x160]\n 24082: a2 = s1 + 0x1000\n 24086: u64 [a2 + 0xfffffffffffff8b8] = a0\n 24090: a0 = 0\n 24092: ra = 768, jump @19\n      : @709 [@dyn 384] (gas: 3)\n 24098: a0 = u64 [s1 + 0x100]\n 24102: a0 = i32 [a0]\n 24104: jump @711 if a0 >u 31\n      : @710 (gas: 3)\n 24108: a1 = u64 [s1 + 0x100]\n 24112: u32 [a1 + 0] = 0x20\n 24115: fallthrough\n      : @711 (gas: 11)\n 24116: a0 = sp + 0xffffffffffffffe0\n 24119: a0 = a0 & 0xffffffffffffffe0\n 24122: u64 [s1 + 0x188] = a0\n 24126: sp = a0\n 24128: i32 a2 = a0 + 0\n 24130: a1 = 0x20\n 24133: a0 = u64 [s1 + 0xf8]\n 24137: ra = 0x302\n 24141: ecalli 6 // 'hash_keccak_256'\n 24143: t0 = 0x304\n 24147: jump @1192\n      : @712 [@dyn 385] (gas: 1)\n 24150: t0 = 772, jump @1192\n      : @713 [@dyn 386] (gas: 6)\n 24156: u64 [s1 + 0x180] = a3\n 24160: a3 = a3 << 0x3b\n 24163: a4 = a2 >> 0x5\n 24166: a4 = a4 | a3\n 24169: a0 = u64 [s1 + 0x188]\n 24173: t0 = 774, jump @1166\n      : @714 [@dyn 387] (gas: 4)\n 24179: a1 = u64 [s1 + 0x90]\n 24183: a1 = 0 if a5 != 0\n 24185: a3 = u64 [s1 + 0x98]\n 24189: t0 = 776, jump @1186\n      : @715 [@dyn 388] (gas: 82)\n 24195: t0 = t2 + a0\n 24198: a0 = t0 <u t2\n 24201: a5 = a2 + a0\n 24204: a4 = a4 + a5\n 24207: u64 [s1 + 0x1b8] = a4\n 24211: a5 = a4 ^ a2\n 24214: a3 = a4 <u a2\n 24217: a3 = a0 if a5 == 0\n 24220: u64 [s1 + 0x178] = a3\n 24224: a0 = u64 [s1 + 0x198]\n 24228: ra = a0 + 0x1f\n 24231: a4 = ra <u a0\n 24234: a3 = u64 [s1 + 0x1a0]\n 24238: a0 = a3 + a4\n 24241: a5 = a0 <u a3\n 24244: a5 = a4 if a4 == 0\n 24247: t1 = u64 [s1 + 0x1b0]\n 24251: t1 = t1 + a5\n 24254: a4 = t1 << 0x3b\n 24257: a3 = a0 >> 0x5\n 24260: a3 = a3 | a4\n 24263: a0 = a0 << 0x3b\n 24266: a4 = ra >> 0x5\n 24269: a0 = a0 | a4\n 24272: a0 = a0 + t2\n 24275: u64 [s1 + 0x198] = a0\n 24279: a0 = a0 <u t2\n 24282: t2 = t0\n 24284: a4 = a2 + a0\n 24287: a4 = a4 + a3\n 24290: a3 = a4 ^ a2\n 24293: u64 [s1 + 0x190] = a4\n 24297: a2 = a4 <u a2\n 24300: a2 = a0 if a3 == 0\n 24303: a4 = u64 [s1 + 0x180]\n 24307: a0 = u64 [s1 + 0xd0]\n 24311: a0 = a4 <u a0\n 24314: a3 = u64 [s1 + 0xc0]\n 24318: a0 = a0 + a3\n 24321: a3 = a4 >> 0x5\n 24324: a4 = a0 << 0x3b\n 24327: a3 = a3 | a4\n 24330: a4 = u64 [s1 + 0x188]\n 24334: t0 = u64 [a4]\n 24336: a4 = u64 [a4 + 0x8]\n 24339: a0 = a0 >> 0x5\n 24342: a3 = 0 if a1 != 0\n 24344: a0 = 0 if a1 != 0\n 24346: a1 = reverse a4\n 24348: a4 = reverse t0\n 24350: a0 = a0 + a4\n 24353: a3 = a3 + a1\n 24356: a5 = a3 <u a1\n 24359: a0 = a0 + a5\n 24362: ra = u64 [s1 + 0x178]\n 24366: ra = ra + a3\n 24369: a3 = ra <u a3\n 24372: t0 = a0 + a3\n 24375: a0 = u64 [s1 + 0x1b0]\n 24379: a0 = t1 <u a0\n 24382: a3 = u64 [s1 + 0x1a8]\n 24386: a0 = a0 + a3\n 24389: a3 = t1 >> 0x5\n 24392: a5 = a0 << 0x3b\n 24395: a3 = a3 | a5\n 24398: a0 = a0 >> 0x5\n 24401: a0 = a0 + a4\n 24404: a5 = s1 + 0x100\n 24408: a4 = u64 [a5 + 0xb8]\n 24412: a3 = a3 + a1\n 24415: a1 = a3 <u a1\n 24418: a0 = a0 + a1\n 24421: a2 = a2 + a3\n 24424: u64 [a5 + 0x88] = a2\n 24428: a1 = a2 <u a3\n 24431: a0 = a0 + a1\n 24434: u64 [a5 + 0x80] = a0\n 24438: a0 = sp + 0xffffffffffffffe0\n 24441: t1 = a0 & 0xffffffffffffffe0\n 24444: sp = t1\n 24446: u64 [s1 + 0x178] = t1\n 24450: fallthrough\n      : @716 (gas: 24)\n 24451: a0 = u64 [s1 + 0x198]\n 24455: a0 = t2 <u a0\n 24458: a2 = u64 [s1 + 0x190]\n 24462: a1 = a4 ^ a2\n 24465: a2 = a4 <u a2\n 24468: a2 = a0 if a1 == 0\n 24471: a5 = u64 [s1 + 0x188]\n 24475: a0 = ra <u a5\n 24478: a3 = u64 [s1 + 0x180]\n 24482: a1 = t0 ^ a3\n 24485: a3 = t0 <u a3\n 24488: a3 = a0 if a1 == 0\n 24491: a0 = ra ^ a5\n 24494: a0 = a0 | a1\n 24497: a3 = a2 if a0 == 0\n 24500: u64 [s1 + 0x1b0] = t2\n 24504: u64 [t1] = t2\n 24506: u64 [s1 + 0x1b8] = a4\n 24510: u64 [t1 + 0x8] = a4\n 24513: u64 [s1 + 0x1a0] = ra\n 24517: u64 [t1 + 0x10] = ra\n 24520: u64 [s1 + 0x1a8] = t0\n 24524: u64 [t1 + 0x18] = t0\n 24527: jump @719 if a3 == 0\n      : @717 (gas: 8)\n 24530: a0 = s1 + 0x2138\n 24534: u64 [a0 + 1248] = 0\n 24538: u64 [a0 + 1240] = 0\n 24542: u64 [a0 + 1232] = 0\n 24546: u64 [a0 + 1224] = 0\n 24550: a1 = s1 + 0x2600\n 24554: a0 = t1\n 24556: ra = 778, jump @23\n      : @718 [@dyn 389] (gas: 15)\n 24562: t1 = u64 [s1 + 0x178]\n 24566: t2 = u64 [s1 + 0x1b0]\n 24570: t2 = t2 + 0x1\n 24573: a0 = t2 <u 0x1\n 24576: a4 = u64 [s1 + 0x1b8]\n 24580: a4 = a4 + a0\n 24583: a0 = t2 | a4\n 24586: a0 = a0 <u 0x1\n 24589: a1 = u64 [s1 + 0x1a0]\n 24593: a0 = a0 + a1\n 24596: a1 = a0 <u a1\n 24599: t0 = u64 [s1 + 0x1a8]\n 24603: t0 = t0 + a1\n 24606: ra = a0\n 24608: jump @716\n      : @719 (gas: 11)\n 24611: a0 = u64 [s1 + 0x90]\n 24615: a0 = a0 ^ 0x1\n 24618: a3 = u64 [s1 + 0x130]\n 24622: a1 = u64 [s1 + 0x80]\n 24626: a0 = a1 if a3 != 0\n 24629: a1 = u64 [s1 + 0x88]\n 24633: a2 = u64 [s1 + 0x98]\n 24637: a0 = a1 if a2 != 0\n 24640: a4 = u64 [s1 + 0xc0]\n 24644: a5 = a3 | a4\n 24647: t0 = 780, jump @1175\n      : @720 [@dyn 390] (gas: 2)\n 24653: u64 [s1 + 0xc0] = a2\n 24657: jump @738 if a0 == 0\n      : @721 (gas: 19)\n 24661: u64 [s1 + 0x60] = a5\n 24664: a1 = a1 & 0xffffffffffffffe0\n 24667: u64 [s1 + 0x130] = a1\n 24671: a0 = u64 [s1 + 0x170]\n 24675: a1 = s1 + 0x1000\n 24679: u64 [a1 + 0xfffffffffffff860] = a0\n 24683: a0 = u64 [s1 + 0x168]\n 24687: a1 = s1 + 0x1000\n 24691: u64 [a1 + 0xfffffffffffff868] = a0\n 24695: a0 = u64 [s1 + 0x158]\n 24699: a1 = s1 + 0x1000\n 24703: u64 [a1 + 0xfffffffffffff870] = a0\n 24707: a1 = s1 + 0x7ff\n 24711: a1 = a1 + 0x61\n 24714: a0 = u64 [s1 + 0x160]\n 24718: a2 = s1 + 0x1000\n 24722: u64 [a2 + 0xfffffffffffff878] = a0\n 24726: a0 = 0\n 24728: ra = 782, jump @19\n      : @722 [@dyn 391] (gas: 1)\n 24734: t0 = 784, jump @1182\n      : @723 [@dyn 392] (gas: 1)\n 24740: ra = 786, jump @26\n      : @724 [@dyn 393] (gas: 1)\n 24746: t0 = 788, jump @1169\n      : @725 [@dyn 394] (gas: 4)\n 24752: ra = 0x316\n 24756: ecalli 6 // 'hash_keccak_256'\n 24758: t0 = 0x318\n 24762: jump @1184\n      : @726 [@dyn 395] (gas: 1)\n 24765: t0 = 792, jump @1184\n      : @727 [@dyn 396] (gas: 1)\n 24771: t0 = 794, jump @1164\n      : @728 [@dyn 397] (gas: 9)\n 24777: t0 = a0\n 24779: a1 = u64 [s1 + 0x190]\n 24783: u64 [a1 + 0x18] = a0\n 24786: u64 [s1 + 0x170] = ra\n 24790: u64 [a1 + 0x10] = ra\n 24793: u64 [a1 + 0x8] = t2\n 24796: u64 [a1] = t1\n 24798: u64 [s1 + 0x188] = t0\n 24802: t0 = 796, jump @1162\n      : @729 [@dyn 398] (gas: 1)\n 24808: jump @741 if a4 != 0\n      : @730 (gas: 16)\n 24812: a4 = u64 [s1 + 0x1b8]\n 24816: a4 = a1 <u a4\n 24819: ra = ra + a4\n 24822: t0 = ra ^ a3\n 24825: u64 [s1 + 0x158] = a3\n 24829: a5 = ra <u a3\n 24832: a5 = a4 if t0 == 0\n 24835: a5 = a5 + a2\n 24838: t0 = a5 <u a2\n 24841: a3 = u64 [s1 + 0x1b0]\n 24845: a2 = a2 <u a3\n 24848: a0 = a0 + a2\n 24851: a0 = a0 + t0\n 24854: a2 = a1 | a5\n 24857: a0 = ra | a0\n 24860: t0 = 798, jump @1195\n      : @731 [@dyn 399] (gas: 1)\n 24866: jump @733 if a0 == 0\n      : @732 (gas: 1)\n 24869: jump @929\n      : @733 (gas: 2)\n 24872: a0 = s1 + 0x340\n 24876: ra = 800, jump @17\n      : @734 [@dyn 400] (gas: 14)\n 24882: a4 = s1 + 0x300\n 24886: a0 = u64 [a4 + 0x58]\n 24889: a1 = u64 [a4 + 0x50]\n 24892: a2 = u64 [a4 + 0x48]\n 24895: a3 = u64 [a4 + 0x40]\n 24898: a4 = s1 + 0x2138\n 24902: u64 [a4 + 0x500] = a0\n 24906: a0 = a4 + 0x400\n 24910: u64 [a0 + 0xf8] = a1\n 24914: u64 [a0 + 0xf0] = a2\n 24918: u64 [a0 + 0xe8] = a3\n 24922: a1 = s1 + 0x2620\n 24926: a0 = u64 [s1 + 0x190]\n 24930: ra = 802, jump @23\n      : @735 [@dyn 401] (gas: 1)\n 24936: t0 = 804, jump @1152\n      : @736 [@dyn 402] (gas: 4)\n 24942: t0 = u64 [s1 + 0x1a0]\n 24946: t0 = t0 + a5\n 24949: u64 [s1 + 0x1a0] = t0\n 24953: t0 = 806, jump @1202\n      : @737 [@dyn 403] (gas: 11)\n 24959: t0 = a0\n 24961: u64 [a5 + 0x18] = a0\n 24964: u64 [s1 + 0x170] = ra\n 24968: a0 = u64 [s1 + 0x188]\n 24972: u64 [s1 + 0x1b8] = a0\n 24976: a5 = u64 [s1 + 0x168]\n 24980: u64 [s1 + 0x1b0] = a3\n 24984: a3 = a1\n 24986: u64 [s1 + 0x188] = t0\n 24990: t0 = 0x31c\n 24994: jump @1162\n      : @738 (gas: 4)\n 24997: a0 = u64 [s1 + 0xd0]\n 25001: a0 = a0 | a1\n 25004: a0 = a0 | a5\n 25007: jump @755 if a0 != 0\n      : @739 (gas: 1)\n 25011: t0 = 808, jump @1172\n      : @740 [@dyn 404] (gas: 1)\n 25017: jump @760\n      : @741 (gas: 10)\n 25020: t1 = u64 [s1 + 0x1b0]\n 25024: t0 = u64 [s1 + 0x1b8]\n 25028: a4 = u64 [s1 + 0x128]\n 25032: a5 = u64 [s1 + 0x130]\n 25036: a4 = a4 ^ a5\n 25039: a5 = u64 [s1 + 0xd0]\n 25043: a4 = a4 | a5\n 25046: a5 = u64 [s1 + 0x60]\n 25049: a4 = a4 | a5\n 25052: jump @754 if a4 == 0\n      : @742 (gas: 11)\n 25056: t2 = a3\n 25058: a4 = a1 <u t0\n 25061: a3 = ra + a4\n 25064: t0 = a3 ^ t2\n 25067: a5 = a3 <u t2\n 25070: a5 = a4 if t0 == 0\n 25073: a5 = a5 + a2\n 25076: a4 = a5 <u a2\n 25079: a2 = a2 <u t1\n 25082: a0 = a0 + a2\n 25085: t0 = 810, jump @1161\n      : @743 [@dyn 405] (gas: 1)\n 25091: jump @745 if a0 == 0\n      : @744 (gas: 1)\n 25094: jump @929\n      : @745 (gas: 3)\n 25097: a0 = s1 + 0x7ff\n 25101: a0 = a0 + 0x41\n 25104: ra = 812, jump @17\n      : @746 [@dyn 406] (gas: 14)\n 25110: a0 = s1 + 0x1000\n 25114: a0 = u64 [a0 + 0xfffffffffffff858]\n 25118: u64 [s1 + 0x1b0] = a0\n 25122: a0 = s1 + 0x1000\n 25126: a0 = u64 [a0 + 0xfffffffffffff850]\n 25130: u64 [s1 + 0x1a8] = a0\n 25134: a0 = s1 + 0x1000\n 25138: a0 = u64 [a0 + 0xfffffffffffff848]\n 25142: u64 [s1 + 0x1a0] = a0\n 25146: a0 = s1 + 0x1000\n 25150: a0 = u64 [a0 + 0xfffffffffffff840]\n 25154: u64 [s1 + 0x198] = a0\n 25158: a0 = u64 [s1 + 0x128]\n 25162: t0 = 814, jump @1158\n      : @747 [@dyn 407] (gas: 1)\n 25168: ra = 816, jump @1221\n      : @748 [@dyn 408] (gas: 1)\n 25174: t0 = 818, jump @1165\n      : @749 [@dyn 409] (gas: 1)\n 25180: ra = 820, jump @1216\n      : @750 [@dyn 410] (gas: 1)\n 25186: t0 = 822, jump @1154\n      : @751 [@dyn 411] (gas: 1)\n 25192: ra = 824, jump @1216\n      : @752 [@dyn 412] (gas: 1)\n 25198: t0 = 826, jump @1159\n      : @753 [@dyn 413] (gas: 7)\n 25204: u64 [a5 + 0x20] = a3\n 25207: u64 [a5 + 0x18] = a2\n 25210: u64 [a5 + 0x10] = a1\n 25213: u64 [a5 + 0x8] = a0\n 25216: a1 = s1 + 0x2640\n 25220: a0 = u64 [s1 + 0x190]\n 25224: ra = 828, jump @23\n      : @754 [@dyn 414] (gas: 19)\n 25230: a0 = u64 [s1 + 0x98]\n 25234: a1 = u64 [s1 + 0x90]\n 25238: a0 = a0 | a1\n 25241: a1 = u64 [s1 + 0x80]\n 25245: a2 = u64 [s1 + 0x68]\n 25248: a1 = a1 | a2\n 25251: a2 = u64 [s1 + 0x88]\n 25255: a3 = u64 [s1 + 0x70]\n 25258: a2 = a2 | a3\n 25261: a3 = u64 [s1 + 0xc0]\n 25265: a3 = a3 + 0x1\n 25268: a4 = s1 + 0x2138\n 25272: a5 = a4 + 0x500\n 25276: u64 [a5 + 0x28] = a3\n 25279: u64 [a5 + 0x30] = a2\n 25282: u64 [a5 + 0x38] = a1\n 25285: u64 [a5 + 0x40] = a0\n 25288: a0 = 0x2660\n 25292: jump @768\n      : @755 (gas: 1)\n 25295: t0 = 830, jump @1191\n      : @756 [@dyn 415] (gas: 1)\n 25301: jump @758 if a1 != 0\n      : @757 (gas: 1)\n 25304: jump @929\n      : @758 (gas: 5)\n 25307: a0 = u64 [s1 + 0x138]\n 25311: i32 a1 = a0 + 0x20\n 25314: a0 = s1 + 0x7ff\n 25318: a0 = a0 + 0x81\n 25322: ra = 832, jump @17\n      : @759 [@dyn 416] (gas: 14)\n 25328: a0 = s1 + 0x1000\n 25332: a0 = u64 [a0 + 0xfffffffffffff898]\n 25336: a1 = s1 + 0x100\n 25340: u64 [a1 + 0xb0] = a0\n 25344: a0 = s1 + 0x1000\n 25348: a0 = u64 [a0 + 0xfffffffffffff890]\n 25352: u64 [a1 + 0xa8] = a0\n 25356: a0 = s1 + 0x1000\n 25360: a0 = u64 [a0 + 0xfffffffffffff888]\n 25364: u64 [a1 + 0x98] = a0\n 25368: a0 = s1 + 0x1000\n 25372: a0 = u64 [a0 + 0xfffffffffffff880]\n 25376: u64 [a1 + 0xa0] = a0\n 25380: fallthrough\n      : @760 (gas: 15)\n 25381: a0 = u64 [s1 + 0x80]\n 25385: a1 = u64 [s1 + 0x68]\n 25388: a0 = a0 | a1\n 25391: u64 [s1 + 0x190] = a0\n 25395: a0 = u64 [s1 + 0x98]\n 25399: a1 = u64 [s1 + 0x90]\n 25403: a0 = a0 | a1\n 25406: u64 [s1 + 0x188] = a0\n 25410: a0 = u64 [s1 + 0x88]\n 25414: a1 = u64 [s1 + 0x70]\n 25417: a0 = a0 | a1\n 25420: u64 [s1 + 0x180] = a0\n 25424: a1 = u64 [s1 + 0x128]\n 25428: a1 = a1 << 0x3\n 25431: t0 = 834, jump @1168\n      : @761 [@dyn 417] (gas: 1)\n 25437: ra = 836, jump @1221\n      : @762 [@dyn 418] (gas: 1)\n 25443: t0 = 838, jump @1212\n      : @763 [@dyn 419] (gas: 1)\n 25449: ra = 840, jump @1216\n      : @764 [@dyn 420] (gas: 1)\n 25455: t0 = 842, jump @1156\n      : @765 [@dyn 421] (gas: 1)\n 25461: ra = 844, jump @1216\n      : @766 [@dyn 422] (gas: 1)\n 25467: t0 = 846, jump @1151\n      : @767 [@dyn 423] (gas: 17)\n 25473: a4 = u64 [s1 + 0xc0]\n 25477: a0 = a0 | a4\n 25480: a5 = s1 + 0x100\n 25484: a4 = u64 [a5 + 0x80]\n 25488: a1 = a1 | a4\n 25491: a4 = u64 [a5 + 0x88]\n 25495: a3 = a3 | a4\n 25498: a4 = u64 [a5 + 0x90]\n 25502: a2 = a2 | a4\n 25505: a4 = s1 + 0x2138\n 25509: a5 = a4 + 0x500\n 25513: u64 [a5 + 0x58] = a2\n 25516: u64 [a5 + 0x60] = a3\n 25519: u64 [a5 + 0x50] = a1\n 25522: u64 [a5 + 0x48] = a0\n 25525: a0 = 0x2680\n 25529: fallthrough\n      : @768 (gas: 3)\n 25530: a1 = s1 + a0\n 25533: a0 = u64 [s1 + 0xb0]\n 25537: ra = 848, jump @23\n      : @769 [@dyn 424] (gas: 6)\n 25543: a0 = sp + 0xffffffffffffffe0\n 25546: a2 = a0 & 0xffffffffffffffe0\n 25549: sp = a2\n 25551: a0 = u64 [s1 + 0xb8]\n 25555: a3 = a0 + 0x4\n 25558: t0 = 850, jump @1171\n      : @770 [@dyn 425] (gas: 7)\n 25564: u64 [s1 + 0xc0] = a2\n 25568: u64 [s1 + 0x160] = a0\n 25572: u64 [a2 + 0x18] = a0\n 25575: a0 = s1 + 0x7ff\n 25579: a0 = a0 + 0x21\n 25582: a1 = u64 [s1 + 0xa8]\n 25586: ra = 852, jump @17\n      : @771 [@dyn 426] (gas: 20)\n 25592: a0 = s1 + 0x1000\n 25596: a2 = u64 [a0 + 0xfffffffffffff838]\n 25600: a0 = s1 + 0x1000\n 25604: a3 = u64 [a0 + 0xfffffffffffff830]\n 25608: a0 = s1 + 0x1000\n 25612: a0 = u64 [a0 + 0xfffffffffffff828]\n 25616: a1 = s1 + 0x1000\n 25620: a1 = u64 [a1 + 0xfffffffffffff820]\n 25624: a4 = s1 + 0x100\n 25628: u64 [a4 + 0x50] = a0\n 25631: u64 [a4 + 0x48] = a2\n 25634: a0 = a0 | a2\n 25637: a2 = a1 | a3\n 25640: a2 = a2 | a0\n 25643: a2 = a2 >> 0x20\n 25646: u64 [a4 + 0x40] = a3\n 25649: a0 = a0 | a3\n 25652: a0 = a0 << 0x20\n 25655: a0 = a0 | a2\n 25658: jump @773 if a0 == 0\n      : @772 (gas: 1)\n 25661: jump @929\n      : @773 (gas: 4)\n 25664: a0 = s1 + 0x7ff\n 25668: a0 = a0 + 0x1\n 25671: u64 [s1 + 0x138] = a1\n 25675: ra = 854, jump @17\n      : @774 [@dyn 427] (gas: 7)\n 25681: a0 = s1 + 0x1000\n 25685: a3 = u64 [a0 + 0xfffffffffffff818]\n 25689: a0 = s1 + 0x1000\n 25693: a1 = u64 [a0 + 0xfffffffffffff810]\n 25697: a0 = s1 + 0x1000\n 25701: a2 = u64 [a0 + 0xfffffffffffff808]\n 25705: t0 = 856, jump @1209\n      : @775 [@dyn 428] (gas: 7)\n 25711: u64 [s1 + 0xb0] = a3\n 25715: a1 = a1 | a3\n 25718: u64 [s1 + 0x88] = a0\n 25722: u64 [s1 + 0x90] = a4\n 25726: u64 [s1 + 0xa8] = a1\n 25730: a0 = a4 if a1 != 0\n 25733: jump @777 if a0 == 0\n      : @776 (gas: 1)\n 25736: jump @969\n      : @777 (gas: 6)\n 25739: a0 = s1 + 0x1000\n 25743: a0 = u64 [a0 + 0xfffffffffffff800]\n 25747: u64 [s1 + 0x128] = a0\n 25751: a0 = s1 + 0x7e0\n 25755: a1 = u64 [s1 + 0xc0]\n 25759: ra = 858, jump @21\n      : @778 [@dyn 429] (gas: 11)\n 25765: a2 = u64 [s1 + 0x7e0]\n 25769: a0 = u64 [s1 + 0x7e8]\n 25773: a1 = u64 [s1 + 0x7f0]\n 25777: a3 = u64 [s1 + 0x7f8]\n 25781: u64 [s1 + 0x7b8] = a3\n 25785: u64 [s1 + 0x7b0] = a1\n 25789: u64 [s1 + 0x7a8] = a0\n 25793: a0 = s1 + 0x7c0\n 25797: a1 = s1 + 0x7a0\n 25801: u64 [s1 + 0x7a0] = a2\n 25805: ra = 860, jump @1120\n      : @779 [@dyn 430] (gas: 6)\n 25811: a0 = s1 + 0x700\n 25815: a3 = u64 [a0 + 0xd8]\n 25819: a4 = u64 [a0 + 0xd0]\n 25823: a5 = u64 [a0 + 0xc8]\n 25827: a2 = u64 [a0 + 0xc0]\n 25831: t0 = 862, jump @1157\n      : @780 [@dyn 431] (gas: 2)\n 25837: u64 [s1 + 0x98] = a0\n 25841: jump @795 if a2 == 0\n      : @781 (gas: 12)\n 25845: a0 = u64 [s1 + 0x170]\n 25849: a2 = s1 + 0x700\n 25853: u64 [a2 + 0x80] = a0\n 25857: a0 = u64 [s1 + 0x168]\n 25861: u64 [a2 + 0x88] = a0\n 25865: a0 = u64 [s1 + 0x158]\n 25869: u64 [a2 + 0x90] = a0\n 25873: a1 = s1 + 0x780\n 25877: a0 = u64 [s1 + 0x160]\n 25881: u64 [a2 + 0x98] = a0\n 25885: a0 = 0\n 25887: ra = 864, jump @19\n      : @782 [@dyn 432] (gas: 3)\n 25893: a0 = u64 [s1 + 0x100]\n 25897: a0 = i32 [a0]\n 25899: jump @784 if a0 >u 31\n      : @783 (gas: 4)\n 25903: a1 = u64 [s1 + 0x100]\n 25907: u32 [a1 + 0] = 0x20\n 25910: t0 = 0x362\n 25914: jump @1206\n      : @784 (gas: 1)\n 25917: t0 = 866, jump @1206\n      : @785 [@dyn 433] (gas: 4)\n 25923: ra = 0x364\n 25927: ecalli 6 // 'hash_keccak_256'\n 25929: t0 = 0x366\n 25933: jump @1192\n      : @786 [@dyn 434] (gas: 1)\n 25936: t0 = 870, jump @1192\n      : @787 [@dyn 435] (gas: 6)\n 25942: u64 [s1 + 0x178] = a3\n 25946: a3 = a3 << 0x3b\n 25949: a4 = a2 >> 0x5\n 25952: a4 = a4 | a3\n 25955: a0 = u64 [s1 + 0x180]\n 25959: t0 = 872, jump @1166\n      : @788 [@dyn 436] (gas: 4)\n 25965: a1 = u64 [s1 + 0x98]\n 25969: a1 = 0 if a5 != 0\n 25971: a3 = u64 [s1 + 0xa8]\n 25975: t0 = 874, jump @1186\n      : @789 [@dyn 437] (gas: 29)\n 25981: t0 = t2 + a0\n 25984: a0 = t0 <u t2\n 25987: a5 = a2 + a0\n 25990: a4 = a4 + a5\n 25993: u64 [s1 + 0x1b8] = a4\n 25997: a5 = a4 ^ a2\n 26000: a3 = a4 <u a2\n 26003: a3 = a0 if a5 == 0\n 26006: u64 [s1 + 0x80] = a3\n 26010: a0 = u64 [s1 + 0x198]\n 26014: ra = a0 + 0x1f\n 26017: a4 = ra <u a0\n 26020: a3 = u64 [s1 + 0x1a0]\n 26024: a0 = a3 + a4\n 26027: a5 = a0 <u a3\n 26030: a5 = a4 if a4 == 0\n 26033: t1 = u64 [s1 + 0x1b0]\n 26037: t1 = t1 + a5\n 26040: a4 = t1 << 0x3b\n 26043: a3 = a0 >> 0x5\n 26046: a3 = a3 | a4\n 26049: a0 = a0 << 0x3b\n 26052: a4 = ra >> 0x5\n 26055: a0 = a0 | a4\n 26058: a0 = a0 + t2\n 26061: u64 [s1 + 0x190] = a0\n 26065: a0 = a0 <u t2\n 26068: t2 = t0\n 26070: t0 = 876, jump @1198\n      : @790 [@dyn 438] (gas: 47)\n 26076: a0 = u64 [s1 + 0xd0]\n 26080: a0 = a4 <u a0\n 26083: a3 = u64 [s1 + 0xb0]\n 26087: a0 = a0 + a3\n 26090: a3 = a4 >> 0x5\n 26093: a4 = a0 << 0x3b\n 26096: a3 = a3 | a4\n 26099: a4 = u64 [s1 + 0x180]\n 26103: t0 = u64 [a4]\n 26105: a4 = u64 [a4 + 0x8]\n 26108: a0 = a0 >> 0x5\n 26111: a3 = 0 if a1 != 0\n 26113: a0 = 0 if a1 != 0\n 26115: a1 = reverse a4\n 26117: a4 = reverse t0\n 26119: a0 = a0 + a4\n 26122: a3 = a3 + a1\n 26125: a5 = a3 <u a1\n 26128: a0 = a0 + a5\n 26131: ra = u64 [s1 + 0x80]\n 26135: ra = ra + a3\n 26138: a3 = ra <u a3\n 26141: t0 = a0 + a3\n 26144: a0 = u64 [s1 + 0x1b0]\n 26148: a0 = t1 <u a0\n 26151: a3 = u64 [s1 + 0x1a8]\n 26155: a0 = a0 + a3\n 26158: a3 = t1 >> 0x5\n 26161: a5 = a0 << 0x3b\n 26164: a3 = a3 | a5\n 26167: a0 = a0 >> 0x5\n 26170: a0 = a0 + a4\n 26173: a5 = s1 + 0x100\n 26177: a4 = u64 [a5 + 0xb8]\n 26181: a3 = a3 + a1\n 26184: a1 = a3 <u a1\n 26187: a0 = a0 + a1\n 26190: a2 = a2 + a3\n 26193: u64 [a5 + 0x80] = a2\n 26197: a1 = a2 <u a3\n 26200: a0 = a0 + a1\n 26203: u64 [a5 + 0x78] = a0\n 26206: a0 = sp + 0xffffffffffffffe0\n 26209: a0 = a0 & 0xffffffffffffffe0\n 26212: u64 [a5 + 0xb0] = a0\n 26216: sp = a0\n 26218: fallthrough\n      : @791 (gas: 25)\n 26219: a0 = u64 [s1 + 0x190]\n 26223: a0 = t2 <u a0\n 26226: a2 = u64 [s1 + 0x188]\n 26230: a1 = a4 ^ a2\n 26233: a2 = a4 <u a2\n 26236: a2 = a0 if a1 == 0\n 26239: a5 = u64 [s1 + 0x180]\n 26243: a0 = ra <u a5\n 26246: a3 = u64 [s1 + 0x178]\n 26250: a1 = t0 ^ a3\n 26253: a3 = t0 <u a3\n 26256: a3 = a0 if a1 == 0\n 26259: a0 = ra ^ a5\n 26262: a0 = a0 | a1\n 26265: a3 = a2 if a0 == 0\n 26268: u64 [s1 + 0x1a8] = t2\n 26272: a0 = u64 [s1 + 0x1b0]\n 26276: u64 [a0] = t2\n 26278: u64 [s1 + 0x1b8] = a4\n 26282: u64 [a0 + 0x8] = a4\n 26285: u64 [s1 + 0x198] = ra\n 26289: u64 [a0 + 0x10] = ra\n 26292: u64 [s1 + 0x1a0] = t0\n 26296: u64 [a0 + 0x18] = t0\n 26299: jump @795 if a3 == 0\n      : @792 (gas: 8)\n 26302: a0 = s1 + 0x2138\n 26306: u64 [a0 + 1408] = 0\n 26310: u64 [a0 + 1400] = 0\n 26314: u64 [a0 + 1392] = 0\n 26318: u64 [a0 + 1384] = 0\n 26322: a1 = s1 + 0x26a0\n 26326: a0 = u64 [s1 + 0x1b0]\n 26330: ra = 878, jump @23\n      : @793 [@dyn 439] (gas: 1)\n 26336: t0 = 880, jump @1188\n      : @794 [@dyn 440] (gas: 4)\n 26342: t0 = u64 [s1 + 0x1a0]\n 26346: t0 = t0 + a1\n 26349: ra = a0\n 26351: jump @791\n      : @795 (gas: 12)\n 26354: a0 = u64 [s1 + 0x98]\n 26358: a0 = a0 ^ 0x1\n 26361: a3 = u64 [s1 + 0x130]\n 26365: a1 = u64 [s1 + 0x88]\n 26369: a0 = a1 if a3 != 0\n 26372: a1 = u64 [s1 + 0x90]\n 26376: a2 = u64 [s1 + 0xa8]\n 26380: a0 = a1 if a2 != 0\n 26383: a4 = u64 [s1 + 0xb0]\n 26387: a1 = a3 | a4\n 26390: u64 [s1 + 0xa8] = a1\n 26394: t0 = 882, jump @1175\n      : @796 [@dyn 441] (gas: 2)\n 26400: u64 [s1 + 0xb0] = a2\n 26404: jump @814 if a0 == 0\n      : @797 (gas: 14)\n 26408: a1 = a1 & 0xffffffffffffffe0\n 26411: u64 [s1 + 0x130] = a1\n 26415: a0 = u64 [s1 + 0x170]\n 26419: a2 = s1 + 0x700\n 26423: u64 [a2 + 0x40] = a0\n 26426: a0 = u64 [s1 + 0x168]\n 26430: u64 [a2 + 0x48] = a0\n 26433: a0 = u64 [s1 + 0x158]\n 26437: u64 [a2 + 0x50] = a0\n 26440: a1 = s1 + 0x740\n 26444: a0 = u64 [s1 + 0x160]\n 26448: u64 [a2 + 0x58] = a0\n 26451: a0 = 0\n 26453: ra = 884, jump @19\n      : @798 [@dyn 442] (gas: 1)\n 26459: t0 = 886, jump @1182\n      : @799 [@dyn 443] (gas: 1)\n 26465: ra = 888, jump @26\n      : @800 [@dyn 444] (gas: 1)\n 26471: t0 = 890, jump @1169\n      : @801 [@dyn 445] (gas: 4)\n 26477: ra = 0x37c\n 26481: ecalli 6 // 'hash_keccak_256'\n 26483: t0 = 0x37e\n 26487: jump @1184\n      : @802 [@dyn 446] (gas: 1)\n 26490: t0 = 894, jump @1184\n      : @803 [@dyn 447] (gas: 1)\n 26496: t0 = 896, jump @1164\n      : @804 [@dyn 448] (gas: 9)\n 26502: t0 = a0\n 26504: a1 = u64 [s1 + 0x190]\n 26508: u64 [a1 + 0x18] = a0\n 26511: u64 [s1 + 0x170] = ra\n 26515: u64 [a1 + 0x10] = ra\n 26518: u64 [a1 + 0x8] = t2\n 26521: u64 [a1] = t1\n 26523: u64 [s1 + 0x188] = t0\n 26527: t0 = 898, jump @1162\n      : @805 [@dyn 449] (gas: 1)\n 26533: jump @817 if a4 != 0\n      : @806 (gas: 16)\n 26537: a4 = u64 [s1 + 0x1b8]\n 26541: a4 = a1 <u a4\n 26544: ra = ra + a4\n 26547: t0 = ra ^ a3\n 26550: u64 [s1 + 0x158] = a3\n 26554: a5 = ra <u a3\n 26557: a5 = a4 if t0 == 0\n 26560: a5 = a5 + a2\n 26563: t0 = a5 <u a2\n 26566: a3 = u64 [s1 + 0x1b0]\n 26570: a2 = a2 <u a3\n 26573: a0 = a0 + a2\n 26576: a0 = a0 + t0\n 26579: a2 = a1 | a5\n 26582: a0 = ra | a0\n 26585: t0 = 900, jump @1195\n      : @807 [@dyn 450] (gas: 1)\n 26591: jump @809 if a0 == 0\n      : @808 (gas: 1)\n 26594: jump @929\n      : @809 (gas: 2)\n 26597: a0 = s1 + 0x3a0\n 26601: ra = 902, jump @17\n      : @810 [@dyn 451] (gas: 14)\n 26607: a4 = s1 + 0x300\n 26611: a0 = u64 [a4 + 0xb8]\n 26615: a1 = u64 [a4 + 0xb0]\n 26619: a2 = u64 [a4 + 0xa8]\n 26623: a3 = u64 [a4 + 0xa0]\n 26627: a4 = s1 + 0x2138\n 26631: a5 = a4 + 0x500\n 26635: u64 [a5 + 0xa0] = a0\n 26639: u64 [a5 + 0x98] = a1\n 26643: u64 [a5 + 0x90] = a2\n 26647: u64 [a5 + 0x88] = a3\n 26651: a1 = s1 + 0x26c0\n 26655: a0 = u64 [s1 + 0x190]\n 26659: ra = 904, jump @23\n      : @811 [@dyn 452] (gas: 1)\n 26665: t0 = 906, jump @1152\n      : @812 [@dyn 453] (gas: 4)\n 26671: t0 = u64 [s1 + 0x1a0]\n 26675: t0 = t0 + a5\n 26678: u64 [s1 + 0x1a0] = t0\n 26682: t0 = 908, jump @1202\n      : @813 [@dyn 454] (gas: 11)\n 26688: t0 = a0\n 26690: u64 [a5 + 0x18] = a0\n 26693: u64 [s1 + 0x170] = ra\n 26697: a0 = u64 [s1 + 0x188]\n 26701: u64 [s1 + 0x1b8] = a0\n 26705: a5 = u64 [s1 + 0x168]\n 26709: u64 [s1 + 0x1b0] = a3\n 26713: a3 = a1\n 26715: u64 [s1 + 0x188] = t0\n 26719: t0 = 0x382\n 26723: jump @1162\n      : @814 (gas: 5)\n 26726: a0 = u64 [s1 + 0xd0]\n 26730: a0 = a0 | a1\n 26733: a1 = u64 [s1 + 0xa8]\n 26737: a0 = a0 | a1\n 26740: jump @831 if a0 != 0\n      : @815 (gas: 1)\n 26744: t0 = 910, jump @1172\n      : @816 [@dyn 455] (gas: 1)\n 26750: jump @836\n      : @817 (gas: 10)\n 26753: t1 = u64 [s1 + 0x1b0]\n 26757: t0 = u64 [s1 + 0x1b8]\n 26761: a4 = u64 [s1 + 0x128]\n 26765: a5 = u64 [s1 + 0x130]\n 26769: a4 = a4 ^ a5\n 26772: a5 = u64 [s1 + 0xd0]\n 26776: a4 = a4 | a5\n 26779: a5 = u64 [s1 + 0xa8]\n 26783: a4 = a4 | a5\n 26786: jump @830 if a4 == 0\n      : @818 (gas: 11)\n 26790: t2 = a3\n 26792: a4 = a1 <u t0\n 26795: a3 = ra + a4\n 26798: t0 = a3 ^ t2\n 26801: a5 = a3 <u t2\n 26804: a5 = a4 if t0 == 0\n 26807: a5 = a5 + a2\n 26810: a4 = a5 <u a2\n 26813: a2 = a2 <u t1\n 26816: a0 = a0 + a2\n 26819: t0 = 912, jump @1161\n      : @819 [@dyn 456] (gas: 1)\n 26825: jump @821 if a0 == 0\n      : @820 (gas: 1)\n 26828: jump @929\n      : @821 (gas: 2)\n 26831: a0 = s1 + 0x720\n 26835: ra = 914, jump @17\n      : @822 [@dyn 457] (gas: 11)\n 26841: a1 = s1 + 0x700\n 26845: a0 = u64 [a1 + 0x38]\n 26848: u64 [s1 + 0x1b0] = a0\n 26852: a0 = u64 [a1 + 0x30]\n 26855: u64 [s1 + 0x1a8] = a0\n 26859: a0 = u64 [a1 + 0x28]\n 26862: u64 [s1 + 0x1a0] = a0\n 26866: a0 = u64 [a1 + 0x20]\n 26869: u64 [s1 + 0x198] = a0\n 26873: a0 = u64 [s1 + 0x128]\n 26877: t0 = 916, jump @1158\n      : @823 [@dyn 458] (gas: 1)\n 26883: ra = 918, jump @1221\n      : @824 [@dyn 459] (gas: 1)\n 26889: t0 = 920, jump @1165\n      : @825 [@dyn 460] (gas: 1)\n 26895: ra = 922, jump @1216\n      : @826 [@dyn 461] (gas: 1)\n 26901: t0 = 924, jump @1154\n      : @827 [@dyn 462] (gas: 1)\n 26907: ra = 926, jump @1216\n      : @828 [@dyn 463] (gas: 1)\n 26913: t0 = 928, jump @1159\n      : @829 [@dyn 464] (gas: 7)\n 26919: u64 [a5 + 0xc0] = a3\n 26923: u64 [a5 + 0xb8] = a2\n 26927: u64 [a5 + 0xb0] = a1\n 26931: u64 [a5 + 0xa8] = a0\n 26935: a1 = s1 + 0x26e0\n 26939: a0 = u64 [s1 + 0x190]\n 26943: ra = 930, jump @23\n      : @830 [@dyn 465] (gas: 19)\n 26949: a0 = u64 [s1 + 0x98]\n 26953: a1 = u64 [s1 + 0x90]\n 26957: a0 = a0 | a1\n 26960: a1 = u64 [s1 + 0x80]\n 26964: a2 = u64 [s1 + 0x68]\n 26967: a1 = a1 | a2\n 26970: a2 = u64 [s1 + 0x88]\n 26974: a3 = u64 [s1 + 0x70]\n 26977: a2 = a2 | a3\n 26980: a3 = u64 [s1 + 0xb0]\n 26984: a3 = a3 + 0x1\n 26987: a4 = s1 + 0x2138\n 26991: a5 = a4 + 0x500\n 26995: u64 [a5 + 0xc8] = a3\n 26999: u64 [a5 + 0xd0] = a2\n 27003: u64 [a5 + 0xd8] = a1\n 27007: u64 [a5 + 0xe0] = a0\n 27011: a0 = 0x2700\n 27015: jump @844\n      : @831 (gas: 1)\n 27018: t0 = 932, jump @1191\n      : @832 [@dyn 466] (gas: 1)\n 27024: jump @834 if a1 != 0\n      : @833 (gas: 1)\n 27027: jump @929\n      : @834 (gas: 4)\n 27030: a0 = u64 [s1 + 0x138]\n 27034: i32 a1 = a0 + 0x20\n 27037: a0 = s1 + 0x760\n 27041: ra = 934, jump @17\n      : @835 [@dyn 467] (gas: 11)\n 27047: a1 = s1 + 0x700\n 27051: a0 = u64 [a1 + 0x78]\n 27054: a2 = s1 + 0x100\n 27058: u64 [a2 + 0xb0] = a0\n 27062: a0 = u64 [a1 + 0x70]\n 27065: u64 [a2 + 0xa8] = a0\n 27069: a0 = u64 [a1 + 0x68]\n 27072: u64 [a2 + 0x98] = a0\n 27076: a0 = u64 [a1 + 0x60]\n 27079: u64 [a2 + 0xa0] = a0\n 27083: fallthrough\n      : @836 (gas: 15)\n 27084: a0 = u64 [s1 + 0x80]\n 27088: a1 = u64 [s1 + 0x68]\n 27091: a0 = a0 | a1\n 27094: u64 [s1 + 0x190] = a0\n 27098: a0 = u64 [s1 + 0x98]\n 27102: a1 = u64 [s1 + 0x90]\n 27106: a0 = a0 | a1\n 27109: u64 [s1 + 0x188] = a0\n 27113: a0 = u64 [s1 + 0x88]\n 27117: a1 = u64 [s1 + 0x70]\n 27120: a0 = a0 | a1\n 27123: u64 [s1 + 0x180] = a0\n 27127: a1 = u64 [s1 + 0x128]\n 27131: a1 = a1 << 0x3\n 27134: t0 = 936, jump @1168\n      : @837 [@dyn 468] (gas: 1)\n 27140: ra = 938, jump @1221\n      : @838 [@dyn 469] (gas: 1)\n 27146: t0 = 940, jump @1212\n      : @839 [@dyn 470] (gas: 1)\n 27152: ra = 942, jump @1216\n      : @840 [@dyn 471] (gas: 1)\n 27158: t0 = 944, jump @1156\n      : @841 [@dyn 472] (gas: 1)\n 27164: ra = 946, jump @1216\n      : @842 [@dyn 473] (gas: 1)\n 27170: t0 = 948, jump @1151\n      : @843 [@dyn 474] (gas: 17)\n 27176: a4 = u64 [s1 + 0xb0]\n 27180: a0 = a0 | a4\n 27183: a5 = s1 + 0x100\n 27187: a4 = u64 [a5 + 0x80]\n 27191: a1 = a1 | a4\n 27194: a4 = u64 [a5 + 0x88]\n 27198: a3 = a3 | a4\n 27201: a4 = u64 [a5 + 0x90]\n 27205: a2 = a2 | a4\n 27208: a4 = s1 + 0x2138\n 27212: a5 = a4 + 0x500\n 27216: u64 [a5 + 0xf8] = a2\n 27220: u64 [a4 + 0x600] = a3\n 27224: u64 [a5 + 0xf0] = a1\n 27228: u64 [a5 + 0xe8] = a0\n 27232: a0 = 0x2720\n 27236: fallthrough\n      : @844 (gas: 3)\n 27237: a1 = s1 + a0\n 27240: a0 = u64 [s1 + 0xc0]\n 27244: ra = 950, jump @23\n      : @845 [@dyn 475] (gas: 6)\n 27250: a0 = sp + 0xffffffffffffffe0\n 27253: a2 = a0 & 0xffffffffffffffe0\n 27256: sp = a2\n 27258: a0 = u64 [s1 + 0xb8]\n 27262: a3 = a0 + 0x5\n 27265: t0 = 952, jump @1171\n      : @846 [@dyn 476] (gas: 6)\n 27271: u64 [s1 + 0xe8] = a2\n 27275: u64 [s1 + 0x160] = a0\n 27279: u64 [a2 + 0x18] = a0\n 27282: a0 = s1 + 0x700\n 27286: a1 = u64 [s1 + 0x78]\n 27289: ra = 954, jump @17\n      : @847 [@dyn 477] (gas: 18)\n 27295: a4 = s1 + 0x700\n 27299: a2 = u64 [a4 + 0x18]\n 27302: a3 = u64 [a4 + 0x10]\n 27305: a0 = u64 [a4 + 0x8]\n 27308: a1 = u64 [a4]\n 27310: a4 = s1 + 0x100\n 27314: u64 [a4 + 0x48] = a0\n 27317: u64 [a4 + 0x40] = a2\n 27320: a0 = a0 | a2\n 27323: u64 [a4 + 0x50] = a1\n 27326: a1 = a1 | a3\n 27329: a1 = a1 | a0\n 27332: a1 = a1 >> 0x20\n 27335: u64 [a4 + 0x38] = a3\n 27338: a0 = a0 | a3\n 27341: a0 = a0 << 0x20\n 27344: a0 = a0 | a1\n 27347: jump @929 if a0 != 0\n      : @848 (gas: 3)\n 27351: a0 = s1 + 0x6e0\n 27355: a1 = u64 [s1 + 0x150]\n 27359: ra = 956, jump @17\n      : @849 [@dyn 478] (gas: 17)\n 27365: a0 = s1 + 0x600\n 27369: a3 = u64 [a0 + 0xf8]\n 27373: a2 = u64 [a0 + 0xf0]\n 27377: a1 = u64 [a0 + 0xe8]\n 27381: a0 = a3 >u 0\n 27383: a4 = a2 >u 0\n 27385: a4 = a0 if a3 != 0\n 27388: u64 [s1 + 0xf0] = a1\n 27392: a0 = a1 >u 0\n 27394: u64 [s1 + 0xe0] = a2\n 27398: u64 [s1 + 0xd0] = a3\n 27402: a2 = a2 | a3\n 27405: u64 [s1 + 0xb0] = a0\n 27409: u64 [s1 + 0xb8] = a4\n 27413: u64 [s1 + 0x130] = a2\n 27417: a0 = a4 if a2 != 0\n 27420: jump @851 if a0 == 0\n      : @850 (gas: 1)\n 27423: jump @972\n      : @851 (gas: 5)\n 27426: a0 = u64 [s1 + 0x6e0]\n 27430: u64 [s1 + 0x128] = a0\n 27434: a0 = s1 + 0x6c0\n 27438: a1 = u64 [s1 + 0xe8]\n 27442: ra = 958, jump @21\n      : @852 [@dyn 479] (gas: 11)\n 27448: a2 = u64 [s1 + 0x6c0]\n 27452: a0 = u64 [s1 + 0x6c8]\n 27456: a1 = u64 [s1 + 0x6d0]\n 27460: a3 = u64 [s1 + 0x6d8]\n 27464: u64 [s1 + 0x698] = a3\n 27468: u64 [s1 + 0x690] = a1\n 27472: u64 [s1 + 0x688] = a0\n 27476: a0 = s1 + 0x6a0\n 27480: a1 = s1 + 0x680\n 27484: u64 [s1 + 0x680] = a2\n 27488: ra = 960, jump @1120\n      : @853 [@dyn 480] (gas: 6)\n 27494: a0 = s1 + 0x600\n 27498: a3 = u64 [a0 + 0xb8]\n 27502: a4 = u64 [a0 + 0xb0]\n 27506: a5 = u64 [a0 + 0xa8]\n 27510: a2 = u64 [a0 + 0xa0]\n 27514: t0 = 962, jump @1157\n      : @854 [@dyn 481] (gas: 2)\n 27520: u64 [s1 + 0xc0] = a0\n 27524: jump @868 if a2 == 0\n      : @855 (gas: 12)\n 27528: a0 = u64 [s1 + 0x170]\n 27532: a2 = s1 + 0x600\n 27536: u64 [a2 + 0x60] = a0\n 27539: a0 = u64 [s1 + 0x168]\n 27543: u64 [a2 + 0x68] = a0\n 27546: a0 = u64 [s1 + 0x158]\n 27550: u64 [a2 + 0x70] = a0\n 27553: a1 = s1 + 0x660\n 27557: a0 = u64 [s1 + 0x160]\n 27561: u64 [a2 + 0x78] = a0\n 27564: a0 = 0\n 27566: ra = 964, jump @19\n      : @856 [@dyn 482] (gas: 3)\n 27572: a0 = u64 [s1 + 0x100]\n 27576: a0 = i32 [a0]\n 27578: jump @858 if a0 >u 31\n      : @857 (gas: 4)\n 27582: a1 = u64 [s1 + 0x100]\n 27586: u32 [a1 + 0] = 0x20\n 27589: t0 = 0x3c6\n 27593: jump @1206\n      : @858 (gas: 1)\n 27596: t0 = 966, jump @1206\n      : @859 [@dyn 483] (gas: 3)\n 27602: ra = 0x3c8\n 27606: ecalli 6 // 'hash_keccak_256'\n 27608: fallthrough\n      : @860 [@dyn 484] (gas: 15)\n 27609: a0 = u64 [s1 + 0x128]\n 27613: a1 = a0 + 0x1f\n 27616: a0 = a1 <u a0\n 27619: a5 = u64 [s1 + 0xf0]\n 27623: a2 = a5 + a0\n 27626: a3 = a2 <u a5\n 27629: a3 = a0 if a0 == 0\n 27632: a4 = u64 [s1 + 0xe0]\n 27636: a3 = a3 + a4\n 27639: u64 [s1 + 0x178] = a3\n 27643: a3 = a3 << 0x3b\n 27646: a4 = a2 >> 0x5\n 27649: a4 = a4 | a3\n 27652: a0 = u64 [s1 + 0x180]\n 27656: t0 = 970, jump @1166\n      : @861 [@dyn 485] (gas: 4)\n 27662: a1 = u64 [s1 + 0xc0]\n 27666: a1 = 0 if a5 != 0\n 27668: a3 = u64 [s1 + 0x130]\n 27672: t0 = 972, jump @1186\n      : @862 [@dyn 486] (gas: 29)\n 27678: t0 = t2 + a0\n 27681: a0 = t0 <u t2\n 27684: a5 = a2 + a0\n 27687: a4 = a4 + a5\n 27690: u64 [s1 + 0x1b8] = a4\n 27694: a5 = a4 ^ a2\n 27697: a3 = a4 <u a2\n 27700: a3 = a0 if a5 == 0\n 27703: u64 [s1 + 0xa8] = a3\n 27707: a0 = u64 [s1 + 0x198]\n 27711: ra = a0 + 0x1f\n 27714: a4 = ra <u a0\n 27717: a3 = u64 [s1 + 0x1a0]\n 27721: a0 = a3 + a4\n 27724: a5 = a0 <u a3\n 27727: a5 = a4 if a4 == 0\n 27730: t1 = u64 [s1 + 0x1b0]\n 27734: t1 = t1 + a5\n 27737: a4 = t1 << 0x3b\n 27740: a3 = a0 >> 0x5\n 27743: a3 = a3 | a4\n 27746: a0 = a0 << 0x3b\n 27749: a4 = ra >> 0x5\n 27752: a0 = a0 | a4\n 27755: a0 = a0 + t2\n 27758: u64 [s1 + 0x190] = a0\n 27762: a0 = a0 <u t2\n 27765: t2 = t0\n 27767: t0 = 974, jump @1198\n      : @863 [@dyn 487] (gas: 47)\n 27773: a0 = u64 [s1 + 0xe0]\n 27777: a0 = a4 <u a0\n 27780: a3 = u64 [s1 + 0xd0]\n 27784: a0 = a0 + a3\n 27787: a3 = a4 >> 0x5\n 27790: a4 = a0 << 0x3b\n 27793: a3 = a3 | a4\n 27796: a4 = u64 [s1 + 0x180]\n 27800: t0 = u64 [a4]\n 27802: a4 = u64 [a4 + 0x8]\n 27805: a0 = a0 >> 0x5\n 27808: a3 = 0 if a1 != 0\n 27810: a0 = 0 if a1 != 0\n 27812: a1 = reverse a4\n 27814: a4 = reverse t0\n 27816: a0 = a0 + a4\n 27819: a3 = a3 + a1\n 27822: a5 = a3 <u a1\n 27825: a0 = a0 + a5\n 27828: ra = u64 [s1 + 0xa8]\n 27832: ra = ra + a3\n 27835: a3 = ra <u a3\n 27838: t0 = a0 + a3\n 27841: a0 = u64 [s1 + 0x1b0]\n 27845: a0 = t1 <u a0\n 27848: a3 = u64 [s1 + 0x1a8]\n 27852: a0 = a0 + a3\n 27855: a3 = t1 >> 0x5\n 27858: a5 = a0 << 0x3b\n 27861: a3 = a3 | a5\n 27864: a0 = a0 >> 0x5\n 27867: a0 = a0 + a4\n 27870: a5 = s1 + 0x100\n 27874: a4 = u64 [a5 + 0xb8]\n 27878: a3 = a3 + a1\n 27881: a1 = a3 <u a1\n 27884: a0 = a0 + a1\n 27887: a2 = a2 + a3\n 27890: u64 [a5 + 0x80] = a2\n 27894: a1 = a2 <u a3\n 27897: a0 = a0 + a1\n 27900: u64 [a5 + 0x78] = a0\n 27903: a0 = sp + 0xffffffffffffffe0\n 27906: a0 = a0 & 0xffffffffffffffe0\n 27909: u64 [a5 + 0xb0] = a0\n 27913: sp = a0\n 27915: fallthrough\n      : @864 (gas: 25)\n 27916: a0 = u64 [s1 + 0x190]\n 27920: a0 = t2 <u a0\n 27923: a2 = u64 [s1 + 0x188]\n 27927: a1 = a4 ^ a2\n 27930: a2 = a4 <u a2\n 27933: a2 = a0 if a1 == 0\n 27936: a5 = u64 [s1 + 0x180]\n 27940: a0 = ra <u a5\n 27943: a3 = u64 [s1 + 0x178]\n 27947: a1 = t0 ^ a3\n 27950: a3 = t0 <u a3\n 27953: a3 = a0 if a1 == 0\n 27956: a0 = ra ^ a5\n 27959: a0 = a0 | a1\n 27962: a3 = a2 if a0 == 0\n 27965: u64 [s1 + 0x1a8] = t2\n 27969: a0 = u64 [s1 + 0x1b0]\n 27973: u64 [a0] = t2\n 27975: u64 [s1 + 0x1b8] = a4\n 27979: u64 [a0 + 0x8] = a4\n 27982: u64 [s1 + 0x198] = ra\n 27986: u64 [a0 + 0x10] = ra\n 27989: u64 [s1 + 0x1a0] = t0\n 27993: u64 [a0 + 0x18] = t0\n 27996: jump @868 if a3 == 0\n      : @865 (gas: 8)\n 27999: a0 = s1 + 0x2138\n 28003: u64 [a0 + 1568] = 0\n 28007: u64 [a0 + 1560] = 0\n 28011: u64 [a0 + 1552] = 0\n 28015: u64 [a0 + 1544] = 0\n 28019: a1 = s1 + 0x2740\n 28023: a0 = u64 [s1 + 0x1b0]\n 28027: ra = 976, jump @23\n      : @866 [@dyn 488] (gas: 1)\n 28033: t0 = 978, jump @1188\n      : @867 [@dyn 489] (gas: 4)\n 28039: t0 = u64 [s1 + 0x1a0]\n 28043: t0 = t0 + a1\n 28046: ra = a0\n 28048: jump @864\n      : @868 (gas: 9)\n 28051: a0 = u64 [s1 + 0xc0]\n 28055: a0 = a0 ^ 0x1\n 28058: a1 = u64 [s1 + 0xf0]\n 28062: a2 = u64 [s1 + 0xb0]\n 28066: a0 = a2 if a1 != 0\n 28069: a1 = u64 [s1 + 0xb8]\n 28073: a2 = u64 [s1 + 0x130]\n 28077: a0 = a1 if a2 != 0\n 28080: jump @885 if a0 == 0\n      : @869 (gas: 15)\n 28084: a0 = u64 [s1 + 0x128]\n 28088: a0 = a0 & 0xffffffffffffffe0\n 28091: u64 [s1 + 0x130] = a0\n 28095: a0 = u64 [s1 + 0x170]\n 28099: a2 = s1 + 0x600\n 28103: u64 [a2 + 0x20] = a0\n 28106: a0 = u64 [s1 + 0x168]\n 28110: u64 [a2 + 0x28] = a0\n 28113: a0 = u64 [s1 + 0x158]\n 28117: u64 [a2 + 0x30] = a0\n 28120: a1 = s1 + 0x620\n 28124: a0 = u64 [s1 + 0x160]\n 28128: u64 [a2 + 0x38] = a0\n 28131: a0 = 0\n 28133: ra = 980, jump @19\n      : @870 [@dyn 490] (gas: 1)\n 28139: t0 = 982, jump @1182\n      : @871 [@dyn 491] (gas: 1)\n 28145: ra = 984, jump @26\n      : @872 [@dyn 492] (gas: 1)\n 28151: t0 = 986, jump @1169\n      : @873 [@dyn 493] (gas: 4)\n 28157: ra = 0x3dc\n 28161: ecalli 6 // 'hash_keccak_256'\n 28163: t0 = 0x3de\n 28167: jump @1184\n      : @874 [@dyn 494] (gas: 1)\n 28170: t0 = 990, jump @1184\n      : @875 [@dyn 495] (gas: 1)\n 28176: t0 = 992, jump @1164\n      : @876 [@dyn 496] (gas: 8)\n 28182: t0 = a0\n 28184: a1 = u64 [s1 + 0x190]\n 28188: u64 [a1 + 0x18] = a0\n 28191: u64 [s1 + 0x170] = ra\n 28195: u64 [a1 + 0x10] = ra\n 28198: u64 [a1 + 0x8] = t2\n 28201: u64 [a1] = t1\n 28203: fallthrough\n      : @877 (gas: 24)\n 28204: u64 [s1 + 0x188] = t0\n 28208: a0 = u64 [s1 + 0x130]\n 28212: u64 [s1 + 0x198] = a4\n 28216: a0 = a4 <u a0\n 28219: a4 = a0 ^ 0x1\n 28222: u64 [s1 + 0x178] = a3\n 28226: a4 = 0x1 if a3 != 0\n 28229: u64 [s1 + 0x180] = a2\n 28233: a0 = u64 [s1 + 0x1a0]\n 28237: a0 = a0 | a2\n 28240: a4 = 0x1 if a0 != 0\n 28243: a1 = u64 [s1 + 0x150]\n 28247: a0 = u64 [s1 + 0x1b8]\n 28251: a1 = a1 + a0\n 28254: a3 = u64 [s1 + 0x148]\n 28258: a3 = a3 + a5\n 28261: a2 = u64 [s1 + 0x138]\n 28265: a0 = u64 [s1 + 0x1b0]\n 28269: a2 = a2 + a0\n 28272: a0 = u64 [s1 + 0x140]\n 28276: ra = a5\n 28278: a5 = u64 [s1 + 0x1a8]\n 28282: a0 = a0 + a5\n 28285: jump @887 if a4 != 0\n      : @878 (gas: 16)\n 28289: a4 = u64 [s1 + 0x1b8]\n 28293: a4 = a1 <u a4\n 28296: a3 = a3 + a4\n 28299: t0 = a3 ^ ra\n 28302: u64 [s1 + 0x158] = ra\n 28306: a5 = a3 <u ra\n 28309: a5 = a4 if t0 == 0\n 28312: a5 = a5 + a2\n 28315: t0 = a5 <u a2\n 28318: a4 = u64 [s1 + 0x1b0]\n 28322: a2 = a2 <u a4\n 28325: a0 = a0 + a2\n 28328: a0 = a0 + t0\n 28331: a2 = a1 | a5\n 28334: a0 = a0 | a3\n 28337: t0 = 994, jump @1195\n      : @879 [@dyn 497] (gas: 1)\n 28343: jump @929 if a0 != 0\n      : @880 (gas: 2)\n 28347: a0 = s1 + 0x400\n 28351: ra = 996, jump @17\n      : @881 [@dyn 498] (gas: 14)\n 28357: a4 = s1 + 0x400\n 28361: a0 = u64 [a4 + 0x18]\n 28364: a1 = u64 [a4 + 0x10]\n 28367: a2 = u64 [a4 + 0x8]\n 28370: a3 = u64 [a4]\n 28372: a4 = s1 + 0x2138\n 28376: a5 = a4 + 0x600\n 28380: u64 [a5 + 0x40] = a0\n 28383: u64 [a5 + 0x38] = a1\n 28386: u64 [a5 + 0x30] = a2\n 28389: u64 [a5 + 0x28] = a3\n 28392: a1 = s1 + 0x2760\n 28396: a0 = u64 [s1 + 0x190]\n 28400: ra = 998, jump @23\n      : @882 [@dyn 499] (gas: 1)\n 28406: t0 = 1000, jump @1152\n      : @883 [@dyn 500] (gas: 4)\n 28412: t0 = u64 [s1 + 0x1a0]\n 28416: t0 = t0 + a5\n 28419: u64 [s1 + 0x1a0] = t0\n 28423: t0 = 1002, jump @1202\n      : @884 [@dyn 501] (gas: 9)\n 28429: t0 = a0\n 28431: u64 [a5 + 0x18] = a0\n 28434: u64 [s1 + 0x170] = ra\n 28438: a0 = u64 [s1 + 0x188]\n 28442: u64 [s1 + 0x1b8] = a0\n 28446: a5 = u64 [s1 + 0x168]\n 28450: u64 [s1 + 0x1b0] = a3\n 28454: a3 = a1\n 28456: jump @877\n      : @885 (gas: 8)\n 28459: a0 = u64 [s1 + 0x128]\n 28463: a1 = u64 [s1 + 0xe0]\n 28467: a0 = a0 | a1\n 28470: a1 = u64 [s1 + 0xf0]\n 28474: a2 = u64 [s1 + 0xd0]\n 28478: a1 = a1 | a2\n 28481: a0 = a0 | a1\n 28484: jump @900 if a0 != 0\n      : @886 (gas: 5)\n 28488: u64 [s1 + 352] = 0\n 28492: u64 [s1 + 344] = 0\n 28496: u64 [s1 + 360] = 0\n 28500: u64 [s1 + 368] = 0\n 28504: jump @903\n      : @887 (gas: 12)\n 28507: t2 = u64 [s1 + 0x1b0]\n 28511: t1 = u64 [s1 + 0x1b8]\n 28515: a4 = u64 [s1 + 0x128]\n 28519: a5 = u64 [s1 + 0x130]\n 28523: a4 = a4 ^ a5\n 28526: a5 = u64 [s1 + 0xe0]\n 28530: t0 = a4 | a5\n 28533: a5 = u64 [s1 + 0xf0]\n 28537: a4 = u64 [s1 + 0xd0]\n 28541: a5 = a5 | a4\n 28544: a4 = t0 | a5\n 28547: jump @899 if a4 == 0\n      : @888 (gas: 10)\n 28551: a4 = a1 <u t1\n 28554: a3 = a3 + a4\n 28557: t0 = a3 ^ ra\n 28560: a5 = a3 <u ra\n 28563: a5 = a4 if t0 == 0\n 28566: a5 = a5 + a2\n 28569: a4 = a5 <u a2\n 28572: a2 = a2 <u t2\n 28575: a0 = a0 + a2\n 28578: t0 = 1004, jump @1161\n      : @889 [@dyn 502] (gas: 1)\n 28584: jump @929 if a0 != 0\n      : @890 (gas: 2)\n 28588: a0 = s1 + 0x600\n 28592: ra = 1006, jump @17\n      : @891 [@dyn 503] (gas: 11)\n 28598: a1 = s1 + 0x600\n 28602: a0 = u64 [a1 + 0x18]\n 28605: u64 [s1 + 0x1b0] = a0\n 28609: a0 = u64 [a1 + 0x10]\n 28612: u64 [s1 + 0x1a8] = a0\n 28616: a0 = u64 [a1 + 0x8]\n 28619: u64 [s1 + 0x1a0] = a0\n 28623: a0 = u64 [a1]\n 28625: u64 [s1 + 0x198] = a0\n 28629: a0 = u64 [s1 + 0x128]\n 28633: t0 = 1008, jump @1158\n      : @892 [@dyn 504] (gas: 1)\n 28639: ra = 1010, jump @1221\n      : @893 [@dyn 505] (gas: 1)\n 28645: t0 = 1012, jump @1165\n      : @894 [@dyn 506] (gas: 1)\n 28651: ra = 1014, jump @1216\n      : @895 [@dyn 507] (gas: 1)\n 28657: t0 = 1016, jump @1154\n      : @896 [@dyn 508] (gas: 1)\n 28663: ra = 1018, jump @1216\n      : @897 [@dyn 509] (gas: 15)\n 28669: a4 = u64 [s1 + 0x1b8]\n 28673: a2 = a4 <u 0x80\n 28677: a3 = u64 [s1 + 0x170]\n 28681: a1 = a3 if a2 != 0\n 28684: a5 = u64 [s1 + 0x178]\n 28688: a3 = u64 [s1 + 0x188]\n 28692: a3 = a3 | a5\n 28695: a3 = a0 if a2 == 0\n 28698: a1 = 0xffffffffffffffff if a4 == 0\n 28701: a3 = 0xffffffffffffffff if a4 == 0\n 28704: a4 = u64 [s1 + 0x180]\n 28708: a4 = 0 if a2 == 0\n 28710: a5 = 0 if a2 == 0\n 28712: a0 = u64 [s1 + 0x198]\n 28716: t0 = 1020, jump @1187\n      : @898 [@dyn 510] (gas: 8)\n 28722: a5 = a4 + 0x600\n 28726: u64 [a5 + 0x60] = a3\n 28729: u64 [a5 + 0x58] = a2\n 28732: u64 [a5 + 0x50] = a1\n 28735: u64 [a5 + 0x48] = a0\n 28738: a1 = s1 + 0x2780\n 28742: a0 = u64 [s1 + 0x190]\n 28746: ra = 1022, jump @23\n      : @899 [@dyn 511] (gas: 23)\n 28752: a2 = u64 [s1 + 0xe0]\n 28756: a0 = a2 >> 0x3f\n 28759: a1 = u64 [s1 + 0xd0]\n 28763: a1 = a1 << 0x1\n 28766: a0 = a0 | a1\n 28769: a3 = u64 [s1 + 0xf0]\n 28773: a1 = a3 >> 0x3f\n 28776: a2 = a2 << 0x1\n 28779: a1 = a1 | a2\n 28782: a4 = u64 [s1 + 0x128]\n 28786: a2 = a4 >> 0x3f\n 28789: a3 = a3 << 0x1\n 28792: a2 = a2 | a3\n 28795: a3 = a4 << 0x1\n 28798: a3 = a3 + 0x1\n 28801: a4 = s1 + 0x2138\n 28805: a5 = a4 + 0x600\n 28809: u64 [a5 + 0x68] = a3\n 28812: u64 [a5 + 0x70] = a2\n 28815: u64 [a5 + 0x78] = a1\n 28818: u64 [a5 + 0x80] = a0\n 28822: a0 = 0x27a0\n 28826: jump @909\n      : @900 (gas: 11)\n 28829: a3 = s1 + 0x100\n 28833: a0 = u64 [a3 + 0x40]\n 28836: a1 = u64 [a3 + 0x38]\n 28839: a0 = a0 | a1\n 28842: a1 = 0xffffffe0\n 28852: a2 = u64 [a3 + 0x50]\n 28855: a1 = a2 <u a1\n 28858: a2 = u64 [a3 + 0x48]\n 28861: a1 = 0 if a2 != 0\n 28863: a1 = 0 if a0 != 0\n 28865: jump @929 if a1 == 0\n      : @901 (gas: 4)\n 28869: a0 = u64 [s1 + 0x150]\n 28873: i32 a1 = a0 + 0x20\n 28876: a0 = s1 + 0x640\n 28880: ra = 1024, jump @17\n      : @902 [@dyn 512] (gas: 11)\n 28886: a1 = s1 + 0x600\n 28890: a0 = u64 [a1 + 0x58]\n 28893: a2 = s1 + 0x100\n 28897: u64 [a2 + 0x70] = a0\n 28900: a0 = u64 [a1 + 0x50]\n 28903: u64 [a2 + 0x68] = a0\n 28906: a0 = u64 [a1 + 0x48]\n 28909: u64 [a2 + 0x58] = a0\n 28912: a0 = u64 [a1 + 0x40]\n 28915: u64 [a2 + 0x60] = a0\n 28918: fallthrough\n      : @903 (gas: 20)\n 28919: a2 = u64 [s1 + 0xf0]\n 28923: a0 = a2 >> 0x3f\n 28926: a3 = u64 [s1 + 0xe0]\n 28930: a1 = a3 << 0x1\n 28933: a0 = a0 | a1\n 28936: u64 [s1 + 0x1b0] = a0\n 28940: a0 = a3 >> 0x3f\n 28943: a1 = u64 [s1 + 0xd0]\n 28947: a1 = a1 << 0x1\n 28950: a0 = a0 | a1\n 28953: u64 [s1 + 0x1a8] = a0\n 28957: a3 = u64 [s1 + 0x128]\n 28961: a0 = a3 >> 0x3f\n 28964: a1 = a2 << 0x1\n 28967: a0 = a0 | a1\n 28970: u64 [s1 + 0x1a0] = a0\n 28974: a0 = a3 << 0x1\n 28977: u64 [s1 + 0x198] = a0\n 28981: a1 = a3 << 0x3\n 28984: t0 = 1026, jump @1168\n      : @904 [@dyn 513] (gas: 1)\n 28990: ra = 1028, jump @1221\n      : @905 [@dyn 514] (gas: 7)\n 28996: u64 [s1 + 0x178] = a0\n 29000: u64 [s1 + 0x190] = a1\n 29004: a0 = u64 [s1 + 0x128]\n 29008: i32 a2 = a0 << 0x3\n 29011: a0 = 0xffffffffffffffff\n 29014: a1 = 0xffffffffffffffff\n 29017: ra = 1030, jump @1216\n      : @906 [@dyn 515] (gas: 10)\n 29023: u64 [s1 + 0x188] = a0\n 29027: u64 [s1 + 0x180] = a1\n 29031: a1 = u64 [s1 + 0x178]\n 29035: a0 = a0 | a1\n 29038: u64 [s1 + 0x178] = a0\n 29042: a0 = u64 [s1 + 0x1b8]\n 29046: i32 a2 = a0 + 0xffffffffffffff80\n 29049: a0 = 0xffffffffffffffff\n 29052: a1 = 0xffffffffffffffff\n 29055: ra = 1032, jump @1216\n      : @907 [@dyn 516] (gas: 7)\n 29061: a4 = u64 [s1 + 0x1b8]\n 29065: a2 = a4 <u 0x80\n 29069: a3 = u64 [s1 + 0x178]\n 29073: a0 = a3 if a2 != 0\n 29076: a5 = u64 [s1 + 0x180]\n 29080: a3 = u64 [s1 + 0x190]\n 29084: t0 = 1034, jump @1213\n      : @908 [@dyn 517] (gas: 27)\n 29090: a4 = u64 [s1 + 0x188]\n 29094: a4 = 0 if a2 == 0\n 29096: a1 = u64 [s1 + 0x158]\n 29100: a1 = a1 & ~a3\n 29103: a2 = u64 [s1 + 0x160]\n 29107: a0 = a2 & ~a0\n 29110: a2 = u64 [s1 + 0x168]\n 29114: a2 = a2 & ~a4\n 29117: a3 = u64 [s1 + 0x170]\n 29121: a3 = a3 & ~a5\n 29124: a5 = s1 + 0x100\n 29128: a4 = u64 [a5 + 0x98]\n 29132: a0 = a0 | a4\n 29135: a4 = u64 [a5 + 0xa0]\n 29139: a1 = a1 | a4\n 29142: a4 = u64 [a5 + 0xa8]\n 29146: a3 = a3 | a4\n 29149: a4 = u64 [a5 + 0xb0]\n 29153: a2 = a2 | a4\n 29156: a4 = s1 + 0x2138\n 29160: a5 = a4 + 0x600\n 29164: u64 [a5 + 0x98] = a2\n 29168: u64 [a5 + 0xa0] = a3\n 29172: u64 [a5 + 0x90] = a1\n 29176: u64 [a5 + 0x88] = a0\n 29180: a0 = 0x27c0\n 29184: fallthrough\n      : @909 (gas: 3)\n 29185: a1 = s1 + a0\n 29188: a0 = u64 [s1 + 0xe8]\n 29192: ra = 1036, jump @23\n      : @910 [@dyn 518] (gas: 8)\n 29198: a0 = s1 + 0x2138\n 29202: u64 [a0 + 1728] = 0\n 29206: u64 [a0 + 1720] = 0\n 29210: u64 [a0 + 1712] = 0\n 29214: u64 [a0 + 1704] = 0x1\n 29219: a0 = s1 + 0x5e0\n 29223: a1 = s1 + 0x27e0\n 29227: ra = 1038, jump @21\n      : @911 [@dyn 519] (gas: 13)\n 29233: a0 = s1 + 0x500\n 29237: a5 = u64 [a0 + 0xf8]\n 29241: a3 = u64 [a0 + 0xf0]\n 29245: a2 = u64 [a0 + 0xe8]\n 29249: a0 = a5 >u 0\n 29251: a1 = a3 >u 0\n 29253: a1 = a0 if a5 != 0\n 29256: a4 = a3\n 29258: a0 = a3 | a5\n 29261: a3 = a2\n 29263: a2 = a2 >u 0\n 29265: a2 = a1 if a0 != 0\n 29268: jump @975 if a2 != 0\n      : @912 (gas: 26)\n 29272: a0 = u64 [s1 + 0x5e0]\n 29276: u64 [s1 + 0x1b8] = a0\n 29280: a0 = a0 + 0x1\n 29283: a1 = a0 <u 0x1\n 29286: u64 [s1 + 0x1b0] = a3\n 29290: a1 = a1 + a3\n 29293: a2 = a0 | a1\n 29296: a2 = a2 <u 0x1\n 29299: u64 [s1 + 0x1a8] = a4\n 29303: a2 = a2 + a4\n 29306: a3 = a2 <u a4\n 29309: u64 [s1 + 0x1a0] = a5\n 29313: a3 = a3 + a5\n 29316: a4 = s1 + 0x2138\n 29320: u64 [a4 + 1760] = 0\n 29324: u64 [a4 + 1752] = 0\n 29328: u64 [a4 + 1744] = 0\n 29332: u64 [a4 + 1736] = 0x1\n 29337: a5 = a4 + 0x600\n 29341: u64 [a5 + 0xe8] = a0\n 29345: u64 [a5 + 0xf0] = a1\n 29349: u64 [a5 + 0xf8] = a2\n 29353: u64 [a4 + 0x700] = a3\n 29357: a0 = s1 + 0x2800\n 29361: a1 = s1 + 0x2820\n 29365: ra = 1040, jump @23\n      : @913 [@dyn 520] (gas: 15)\n 29371: a0 = sp + 0xffffffffffffffe0\n 29374: a0 = a0 & 0xffffffffffffffe0\n 29377: u64 [s1 + 0x190] = a0\n 29381: sp = a0\n 29383: a0 = u64 [s1 + 0x1a0]\n 29387: u64 [s1 + 0x598] = a0\n 29391: a0 = u64 [s1 + 0x1a8]\n 29395: u64 [s1 + 0x590] = a0\n 29399: a0 = u64 [s1 + 0x1b0]\n 29403: u64 [s1 + 0x588] = a0\n 29407: a0 = s1 + 0x5a0\n 29411: a1 = s1 + 0x580\n 29415: a2 = u64 [s1 + 0x1b8]\n 29419: u64 [s1 + 0x580] = a2\n 29423: ra = 1042, jump @983\n      : @914 [@dyn 521] (gas: 19)\n 29429: a0 = u64 [s1 + 0x5d8]\n 29433: u64 [s1 + 0x1b8] = a0\n 29437: a0 = u64 [s1 + 0x5d0]\n 29441: u64 [s1 + 0x198] = a0\n 29445: a0 = u64 [s1 + 0x5c8]\n 29449: u64 [s1 + 0x1a8] = a0\n 29453: a0 = u64 [s1 + 0x5c0]\n 29457: u64 [s1 + 0x1b0] = a0\n 29461: a0 = u64 [s1 + 0x5b0]\n 29465: a4 = u64 [s1 + 0x5b8]\n 29469: a2 = u64 [s1 + 0x5a0]\n 29473: a3 = u64 [s1 + 0x5a8]\n 29477: a1 = u64 [s1 + 0x190]\n 29481: u64 [a1 + 0x10] = a0\n 29484: u64 [a1 + 0x18] = a4\n 29487: u64 [a1] = a2\n 29489: u64 [a1 + 0x8] = a3\n 29492: a0 = s1 + 0x560\n 29496: ra = 1044, jump @21\n      : @915 [@dyn 522] (gas: 64)\n 29502: a0 = u64 [s1 + 0x560]\n 29506: u64 [s1 + 0x170] = a0\n 29510: a0 = u64 [s1 + 0x568]\n 29514: u64 [s1 + 0x168] = a0\n 29518: a0 = u64 [s1 + 0x570]\n 29522: u64 [s1 + 0x160] = a0\n 29526: a0 = u64 [s1 + 0x578]\n 29530: u64 [s1 + 0x158] = a0\n 29534: a2 = u64 [s1 + 0x1b0]\n 29538: a0 = a2 >> 0x3d\n 29541: a3 = u64 [s1 + 0x1a8]\n 29545: a1 = a3 << 0x3\n 29548: a0 = a0 | a1\n 29551: u64 [s1 + 0x1a0] = a0\n 29555: a0 = a3 >> 0x3d\n 29558: a3 = u64 [s1 + 0x198]\n 29562: a1 = a3 << 0x3\n 29565: a0 = a0 | a1\n 29568: u64 [s1 + 0x1a8] = a0\n 29572: a0 = a3 >> 0x3d\n 29575: a1 = u64 [s1 + 0x1b8]\n 29579: a1 = a1 << 0x3\n 29582: a0 = a0 | a1\n 29585: u64 [s1 + 0x198] = a0\n 29589: a2 = a2 << 0x3\n 29592: u64 [s1 + 0x1b8] = a2\n 29596: a0 = u64 [s1 + 0x108]\n 29600: ecalli 3 // 'caller'\n 29602: a2 = u64 [s1 + 0x1a0]\n 29606: a0 = a2 >u 0\n 29608: a5 = u64 [s1 + 0x1b8]\n 29612: a1 = a5 <u 0x100\n 29616: a3 = a1 ^ 0x1\n 29619: a3 = a0 if a2 != 0\n 29622: a4 = u64 [s1 + 0x198]\n 29626: a0 = a4 >u 0\n 29628: a2 = u64 [s1 + 0x1a8]\n 29632: a1 = a2 >u 0\n 29634: a1 = a0 if a4 != 0\n 29637: a0 = a4\n 29639: a4 = u64 [s1 + 0x120]\n 29643: t1 = u64 [a4 + 0x8]\n 29646: a2 = a2 | a0\n 29649: t0 = i32 [a4 + 0x10]\n 29652: a3 = a1 if a2 != 0\n 29655: u64 [s1 + 0x188] = a3\n 29659: a1 = u64 [a4]\n 29661: a0 = reverse t1\n 29663: a2 = a0 << 0x20\n 29666: a3 = reverse t0\n 29668: a3 = a3 >> 0x20\n 29671: a3 = a3 | a2\n 29674: u64 [s1 + 0x180] = a3\n 29678: a0 = a0 >> 0x20\n 29681: a4 = reverse a1\n 29683: a2 = a4 << 0x20\n 29686: a1 = a2 | a0\n 29689: u64 [s1 + 0x178] = a1\n 29693: a4 = a4 >> 0x20\n 29696: u64 [s1 + 0x1a8] = a4\n 29700: i32 a2 = 0x80 - a5\n 29704: u64 [s1 + 0x150] = a2\n 29708: a0 = a3\n 29710: ra = 1046, jump @1216\n      : @916 [@dyn 523] (gas: 8)\n 29716: u64 [s1 + 0x198] = a0\n 29720: u64 [s1 + 0x140] = a1\n 29724: a0 = u64 [s1 + 0x1b0]\n 29728: i32 a2 = a0 << 0x3\n 29731: u64 [s1 + 0x1a0] = a2\n 29735: a0 = u64 [s1 + 0x1a8]\n 29739: a1 = 0\n 29741: ra = 1048, jump @1221\n      : @917 [@dyn 524] (gas: 10)\n 29747: u64 [s1 + 0x138] = a1\n 29751: a1 = u64 [s1 + 0x198]\n 29755: a0 = a0 | a1\n 29758: u64 [s1 + 0x1b0] = a0\n 29762: a0 = u64 [s1 + 0x1b8]\n 29766: i32 a2 = a0 + 0xffffffffffffff80\n 29769: u64 [s1 + 0x148] = a2\n 29773: a0 = u64 [s1 + 0x180]\n 29777: a1 = u64 [s1 + 0x178]\n 29781: ra = 1050, jump @1221\n      : @918 [@dyn 525] (gas: 18)\n 29787: a2 = u64 [s1 + 0x1b8]\n 29791: a4 = a2 <u 0x80\n 29795: u64 [s1 + 0x198] = a4\n 29799: a3 = u64 [s1 + 0x1b0]\n 29803: a0 = a3 if a4 != 0\n 29806: a3 = u64 [s1 + 0x1a8]\n 29810: a0 = a3 if a2 == 0\n 29813: u64 [s1 + 0x1b0] = a0\n 29817: a0 = u64 [s1 + 0x140]\n 29821: a3 = u64 [s1 + 0x138]\n 29825: a0 = a0 | a3\n 29828: a0 = a1 if a4 == 0\n 29831: a0 = 0 if a2 == 0\n 29833: u64 [s1 + 0x1a8] = a0\n 29837: a0 = u64 [s1 + 0x180]\n 29841: a1 = u64 [s1 + 0x178]\n 29845: a2 = u64 [s1 + 0x1a0]\n 29849: ra = 1052, jump @1221\n      : @919 [@dyn 526] (gas: 19)\n 29855: a2 = a1\n 29857: a1 = u64 [s1 + 0x198]\n 29861: a0 = 0 if a1 == 0\n 29863: a2 = 0 if a1 == 0\n 29865: a3 = u64 [s1 + 0x188]\n 29869: a1 = u64 [s1 + 0x1a8]\n 29873: a1 = 0 if a3 != 0\n 29875: u64 [s1 + 0x1a8] = a1\n 29879: a1 = u64 [s1 + 0x1b0]\n 29883: a1 = 0 if a3 != 0\n 29885: u64 [s1 + 0x1b0] = a1\n 29889: a2 = 0 if a3 != 0\n 29891: u64 [s1 + 0x180] = a2\n 29895: a0 = 0 if a3 != 0\n 29897: u64 [s1 + 0x178] = a0\n 29901: a0 = 0xffffffffffffffff\n 29904: a1 = 0xffffffffffffffff\n 29907: a2 = u64 [s1 + 0x148]\n 29911: ra = 1054, jump @1221\n      : @920 [@dyn 527] (gas: 6)\n 29917: u64 [s1 + 0x140] = a0\n 29921: u64 [s1 + 0x148] = a1\n 29925: a0 = u64 [s1 + 0xa0]\n 29929: a1 = 0\n 29931: a2 = u64 [s1 + 0x1a0]\n 29935: ra = 1056, jump @1221\n      : @921 [@dyn 528] (gas: 6)\n 29941: u64 [s1 + 0x130] = a0\n 29945: u64 [s1 + 0x138] = a1\n 29949: a0 = 0xffffffffffffffff\n 29952: a1 = 0xffffffffffffffff\n 29955: a2 = u64 [s1 + 0x150]\n 29959: ra = 1058, jump @1216\n      : @922 [@dyn 529] (gas: 19)\n 29965: a3 = u64 [s1 + 0x130]\n 29969: a3 = a3 | a0\n 29972: a2 = u64 [s1 + 0x198]\n 29976: a0 = u64 [s1 + 0x140]\n 29980: a3 = a0 if a2 == 0\n 29983: a0 = u64 [s1 + 0x1b8]\n 29987: a4 = u64 [s1 + 0xa0]\n 29991: a3 = a4 if a0 == 0\n 29994: u64 [s1 + 0x150] = a3\n 29998: a3 = u64 [s1 + 0x138]\n 30002: a3 = a3 | a1\n 30005: a1 = u64 [s1 + 0x148]\n 30009: a3 = a1 if a2 == 0\n 30012: a3 = 0 if a0 == 0\n 30014: u64 [s1 + 0x1b8] = a3\n 30018: a0 = 0xffffffffffffffff\n 30021: a1 = 0xffffffffffffffff\n 30024: a2 = u64 [s1 + 0x1a0]\n 30028: ra = 1060, jump @1221\n      : @923 [@dyn 530] (gas: 39)\n 30034: a2 = u64 [s1 + 0x198]\n 30038: a0 = 0 if a2 == 0\n 30040: a1 = 0 if a2 == 0\n 30042: a2 = u64 [s1 + 0x1b8]\n 30046: a2 = a2 ^ 0xffffffffffffffff\n 30049: a3 = u64 [s1 + 0x150]\n 30053: a3 = a3 ^ 0xffffffffffffffff\n 30056: a1 = a1 ^ 0xffffffffffffffff\n 30059: a0 = a0 ^ 0xffffffffffffffff\n 30062: a5 = u64 [s1 + 0x188]\n 30066: a3 = 0xffffffffffffffff if a5 != 0\n 30069: a2 = 0xffffffffffffffff if a5 != 0\n 30072: a0 = 0xffffffffffffffff if a5 != 0\n 30075: a1 = 0xffffffffffffffff if a5 != 0\n 30078: a4 = u64 [s1 + 0x158]\n 30082: a2 = a2 & a4\n 30085: a4 = u64 [s1 + 0x160]\n 30089: a3 = a3 & a4\n 30092: a4 = u64 [s1 + 0x168]\n 30096: a1 = a1 & a4\n 30099: a4 = u64 [s1 + 0x170]\n 30103: a0 = a0 & a4\n 30106: a4 = u64 [s1 + 0x1b0]\n 30110: a3 = a3 | a4\n 30113: a4 = u64 [s1 + 0x1a8]\n 30117: a2 = a2 | a4\n 30120: a4 = u64 [s1 + 0x178]\n 30124: a0 = a0 | a4\n 30127: a4 = u64 [s1 + 0x180]\n 30131: a1 = a1 | a4\n 30134: a4 = s1 + 0x2138\n 30138: a5 = a4 + 0x700\n 30142: u64 [a5 + 0x10] = a1\n 30145: u64 [a5 + 0x8] = a0\n 30148: u64 [a5 + 0x20] = a2\n 30151: u64 [a5 + 0x18] = a3\n 30154: a1 = s1 + 0x2840\n 30158: a0 = u64 [s1 + 0x190]\n 30162: ra = 1062, jump @23\n      : @924 [@dyn 531] (gas: 3)\n 30168: a0 = s1 + 0x540\n 30172: a1 = 0x40\n 30175: ra = 1064, jump @17\n      : @925 [@dyn 532] (gas: 42)\n 30181: a0 = u64 [s1 + 0x558]\n 30185: u64 [s1 + 0x1b0] = a0\n 30189: a0 = u64 [s1 + 0x550]\n 30193: u64 [s1 + 0x1a8] = a0\n 30197: a0 = u64 [s1 + 0x548]\n 30201: u64 [s1 + 0x1a0] = a0\n 30205: a0 = u64 [s1 + 0x540]\n 30209: u64 [s1 + 0x1b8] = a0\n 30213: a0 = u64 [s1 + 0x108]\n 30217: ecalli 3 // 'caller'\n 30219: a2 = u64 [s1 + 0x120]\n 30223: a0 = u64 [a2 + 0x8]\n 30226: a1 = i32 [a2 + 0x10]\n 30229: a2 = u64 [a2]\n 30231: a3 = reverse a0\n 30233: a0 = a3 << 0x20\n 30236: a1 = reverse a1\n 30238: a1 = a1 >> 0x20\n 30241: t0 = a1 | a0\n 30244: a3 = a3 >> 0x20\n 30247: a1 = reverse a2\n 30249: a2 = a1 << 0x20\n 30252: a2 = a2 | a3\n 30255: a1 = a1 >> 0x20\n 30258: u64 [s1 + 1304] = 0\n 30262: a3 = u64 [0x20038]\n 30267: a4 = u64 [0x20040]\n 30272: a5 = u64 [0x20048]\n 30277: a0 = u64 [0x20050]\n 30282: u64 [s1 + 0x538] = a3\n 30286: a3 = s1 + 0x500\n 30290: u64 [a3 + 0x30] = a4\n 30293: u64 [a3 + 0x28] = a5\n 30296: u64 [a3 + 0x20] = a0\n 30299: u64 [a3 + 0x10] = a1\n 30302: u64 [a3 + 0x8] = a2\n 30305: a2 = s1 + 0x520\n 30309: a3 = s1 + 0x500\n 30313: u64 [s1 + 0x500] = t0\n 30317: a0 = 0\n 30319: a1 = 0\n 30321: ra = 1066, jump @24\n      : @926 [@dyn 533] (gas: 30)\n 30327: a0 = u64 [s1 + 0x108]\n 30331: ecalli 3 // 'caller'\n 30333: a1 = u64 [s1 + 0x120]\n 30337: a0 = u32 [a1 + 0x10]\n 30340: u64 [s1 + 0x190] = a0\n 30344: a0 = u64 [a1 + 0x8]\n 30347: u64 [s1 + 0x188] = a0\n 30351: a0 = u64 [a1]\n 30353: u64 [s1 + 0x198] = a0\n 30357: a0 = u64 [s1 + 0xc8]\n 30361: a4 = s1 + 0x400\n 30365: u64 [a4 + 0xb8] = a0\n 30369: a0 = u64 [s1 + 0xd8]\n 30373: u64 [a4 + 0xb0] = a0\n 30377: a0 = u64 [s1 + 0x110]\n 30381: u64 [a4 + 0xa8] = a0\n 30385: a0 = u64 [s1 + 0x118]\n 30389: u64 [a4 + 0xa0] = a0\n 30393: a0 = u64 [s1 + 0x1b0]\n 30397: u64 [a4 + 0xd8] = a0\n 30401: a0 = u64 [s1 + 0x1a8]\n 30405: u64 [a4 + 0xd0] = a0\n 30409: a0 = u64 [s1 + 0x1a0]\n 30413: u64 [a4 + 0xc8] = a0\n 30417: a0 = s1 + 0x4e0\n 30421: a1 = s1 + 0x4c0\n 30425: a2 = s1 + 0x4a0\n 30429: a3 = u64 [s1 + 0x1b8]\n 30433: u64 [a4 + 0xc0] = a3\n 30437: ra = 1068, jump @1084\n      : @927 [@dyn 534] (gas: 14)\n 30443: a4 = s1 + 0x100\n 30447: a1 = u64 [a4 + 0xa0]\n 30451: a2 = a1\n 30453: a0 = u64 [a4 + 0xb0]\n 30457: a0 = a0 | a1\n 30460: a3 = u64 [a4 + 0xa8]\n 30464: a1 = u64 [a4 + 0xb8]\n 30468: a1 = a1 | a3\n 30471: a1 = a1 | a0\n 30474: a1 = a1 >> 0x20\n 30477: a0 = a0 | a3\n 30480: a0 = a0 << 0x20\n 30483: a0 = a0 | a1\n 30486: jump @929 if a0 != 0\n      : @928 (gas: 34)\n 30489: t0 = a3\n 30491: a4 = s1 + 0x400\n 30495: a0 = u64 [a4 + 0xe8]\n 30499: a1 = u64 [a4 + 0xf8]\n 30503: u64 [s1 + 0x180] = a1\n 30507: t1 = u64 [s1 + 0x4e0]\n 30511: a3 = u64 [a4 + 0xf0]\n 30515: ra = a0 ^ a2\n 30518: a5 = a0 <u a2\n 30521: t2 = u64 [s1 + 0x1b8]\n 30525: a1 = t1 <u t2\n 30528: a5 = a1 if ra == 0\n 30531: a4 = a3 - t0\n 30534: ra = a4 - a5\n 30537: a4 = a4 <u a5\n 30540: u64 [s1 + 0x178] = a4\n 30544: a3 = a3 <u t0\n 30547: a5 = u64 [s1 + 0x1b0]\n 30551: a4 = u64 [s1 + 0x180]\n 30555: a5 = a4 - a5\n 30558: a5 = a5 - a3\n 30561: a3 = u64 [s1 + 0x178]\n 30565: a5 = a5 - a3\n 30568: a0 = a0 - a2\n 30571: a0 = a0 - a1\n 30574: a1 = t1 - t2\n 30577: a0 = a0 | a5\n 30580: a3 = a1 | ra\n 30583: a3 = a3 | a0\n 30586: a0 = a0 | ra\n 30589: a3 = a3 >> 0x20\n 30592: a0 = a0 << 0x20\n 30595: a0 = a0 | a3\n 30598: jump @981 if a0 == 0\n      : @929 (gas: 1)\n 30602: trap\n      : @930 (gas: 4)\n 30603: a1 = 0x20070\n 30608: i32 a1 = a1 + 0\n 30610: a0 = 0x1\n 30613: jump @932\n      : @931 (gas: 6)\n 30615: i32 a1 = a1 + 0\n 30617: a0 = 0x1\n 30620: a2 = 0\n 30622: ecalli 7 // 'seal_return'\n 30624: a1 = 0x20070\n 30629: jump @931\n      : @932 (gas: 4)\n 30631: a2 = 0\n 30633: ecalli 7 // 'seal_return'\n 30635: a1 = 0x20070\n 30640: jump @931\n      : @933 (gas: 2)\n 30642: a1 = 0x20070\n 30647: jump @931\n      : @934 (gas: 2)\n 30649: a1 = 0x20070\n 30654: jump @931\n      : @935 (gas: 6)\n 30656: a1 = 0x20070\n 30661: i32 a1 = a1 + 0\n 30663: a0 = 0x1\n 30666: ecalli 7 // 'seal_return'\n 30668: a1 = 0x20070\n 30673: jump @931\n      : @936 (gas: 2)\n 30675: a1 = 0x20070\n 30680: jump @931\n      : @937 (gas: 2)\n 30682: a1 = 0x20070\n 30687: jump @931\n      : @938 (gas: 2)\n 30689: a1 = 0x20070\n 30694: jump @931\n      : @939 (gas: 2)\n 30696: a1 = 0x20070\n 30701: jump @931\n      : @940 (gas: 2)\n 30703: a1 = 0x20070\n 30708: jump @931\n      : @941 (gas: 2)\n 30710: a1 = 0x20070\n 30715: jump @931\n      : @942 (gas: 2)\n 30717: a1 = 0x20070\n 30722: jump @931\n      : @943 (gas: 2)\n 30724: a1 = 0x20070\n 30729: jump @931\n      : @944 (gas: 5)\n 30731: a0 = s1 + 0x1138\n 30735: u64 [a0 + 856] = 0\n 30739: u64 [a0 + 848] = 0\n 30743: u64 [a0 + 840] = 0\n 30747: t0 = 1070, jump @1199\n      : @945 [@dyn 535] (gas: 5)\n 30753: i32 a1 = a1 + 0x480\n 30757: a1 = a1 + s1\n 30760: u64 [a2 + 0x360] = a0\n 30764: a0 = 0\n 30766: ra = 1072, jump @19\n      : @946 [@dyn 536] (gas: 3)\n 30772: t0 = 0x432\n 30776: a1 = s1 + 0x1138\n 30780: fallthrough\n      : @947 [@dyn 537] (gas: 9)\n 30781: u64 [a1 + 832] = 0\n 30785: u64 [a1 + 824] = 0\n 30789: u64 [a1 + 808] = 0x41\n 30794: a2 = a1\n 30796: a0 = 0x4\n 30799: a1 = s1 + 0x1460\n 30803: u64 [a2 + 816] = 0\n 30807: ra = 0x44a\n 30811: jump @19\n      : @948 (gas: 5)\n 30814: a0 = s1 + 0x1138\n 30818: u64 [a0 + 952] = 0\n 30822: u64 [a0 + 944] = 0\n 30826: u64 [a0 + 936] = 0\n 30830: t0 = 1076, jump @1199\n      : @949 [@dyn 538] (gas: 5)\n 30836: i32 a1 = a1 + 0x4e0\n 30840: a1 = a1 + s1\n 30843: u64 [a2 + 0x3c0] = a0\n 30847: a0 = 0\n 30849: ra = 1078, jump @19\n      : @950 [@dyn 539] (gas: 3)\n 30855: t0 = 0x438\n 30859: a1 = s1 + 0x1138\n 30863: fallthrough\n      : @951 [@dyn 540] (gas: 9)\n 30864: u64 [a1 + 928] = 0\n 30868: u64 [a1 + 920] = 0\n 30872: u64 [a1 + 904] = 0x41\n 30877: a2 = a1\n 30879: a0 = 0x4\n 30882: a1 = s1 + 0x14c0\n 30886: u64 [a2 + 912] = 0\n 30890: ra = 0x44a\n 30894: jump @19\n      : @952 (gas: 6)\n 30897: u64 [s1 + 720] = 0\n 30901: u64 [s1 + 712] = 0\n 30905: u64 [s1 + 704] = 0\n 30909: t0 = 0x43a\n 30913: a0 = 0x4e487b7100000000\n 30923: fallthrough\n      : @953 [@dyn 541] (gas: 4)\n 30924: a1 = s1 + 0x2c0\n 30928: u64 [s1 + 0x2d8] = a0\n 30932: a0 = 0\n 30934: ra = 1084, jump @19\n      : @954 [@dyn 542] (gas: 8)\n 30940: u64 [s1 + 696] = 0\n 30944: u64 [s1 + 688] = 0\n 30948: u64 [s1 + 672] = 0x41\n 30953: a0 = 0x4\n 30956: a1 = s1 + 0x2a0\n 30960: u64 [s1 + 680] = 0\n 30964: ra = 0x45c\n 30968: jump @19\n      : @955 (gas: 5)\n 30971: a0 = s1 + 0x1138\n 30975: u64 [a0 + 1048] = 0\n 30979: u64 [a0 + 1040] = 0\n 30983: u64 [a0 + 1032] = 0\n 30987: t0 = 1086, jump @1199\n      : @956 [@dyn 543] (gas: 5)\n 30993: i32 a1 = a1 + 0x540\n 30997: a1 = a1 + s1\n 31000: u64 [a2 + 0x420] = a0\n 31004: a0 = 0\n 31006: ra = 1088, jump @19\n      : @957 [@dyn 544] (gas: 3)\n 31012: t0 = 0x442\n 31016: a1 = s1 + 0x1138\n 31020: fallthrough\n      : @958 [@dyn 545] (gas: 9)\n 31021: u64 [a1 + 1024] = 0\n 31025: u64 [a1 + 1016] = 0\n 31029: u64 [a1 + 1000] = 0x41\n 31034: a2 = a1\n 31036: a0 = 0x4\n 31039: a1 = s1 + 0x1520\n 31043: u64 [a2 + 1008] = 0\n 31047: ra = 0x44a\n 31051: jump @19\n      : @959 (gas: 5)\n 31054: a0 = s1 + 0x1138\n 31058: u64 [a0 + 1144] = 0\n 31062: u64 [a0 + 1136] = 0\n 31066: u64 [a0 + 1128] = 0\n 31070: t0 = 1092, jump @1199\n      : @960 [@dyn 546] (gas: 5)\n 31076: i32 a1 = a1 + 0x5a0\n 31080: a1 = a1 + s1\n 31083: u64 [a2 + 0x480] = a0\n 31087: a0 = 0\n 31089: ra = 1094, jump @19\n      : @961 [@dyn 547] (gas: 3)\n 31095: t0 = 0x448\n 31099: a1 = s1 + 0x1138\n 31103: fallthrough\n      : @962 [@dyn 548] (gas: 8)\n 31104: u64 [a1 + 1120] = 0\n 31108: u64 [a1 + 1112] = 0\n 31112: u64 [a1 + 1096] = 0x41\n 31117: a2 = a1\n 31119: a0 = 0x4\n 31122: a1 = s1 + 0x1580\n 31126: u64 [a2 + 1104] = 0\n 31130: ra = 1098, jump @19\n      : @963 [@dyn 549] (gas: 3)\n 31136: a0 = u64 [s1 + 0xa8]\n 31140: a0 = i32 [a0]\n 31142: jump @965 if a0 >u 63\n      : @964 (gas: 3)\n 31146: a1 = u64 [s1 + 0xa8]\n 31150: u32 [a1 + 0] = 0x40\n 31153: fallthrough\n      : @965 (gas: 5)\n 31154: a0 = 0x1\n 31157: a2 = 0x24\n 31160: a1 = u64 [s1 + 0xb0]\n 31164: ecalli 7 // 'seal_return'\n 31166: fallthrough\n      : @966 (gas: 6)\n 31167: u64 [s1 + 816] = 0\n 31171: u64 [s1 + 808] = 0\n 31175: u64 [s1 + 800] = 0\n 31179: t0 = 0x44c\n 31183: a0 = 0x4e487b7100000000\n 31193: fallthrough\n      : @967 [@dyn 550] (gas: 4)\n 31194: a1 = s1 + 0x320\n 31198: u64 [s1 + 0x338] = a0\n 31202: a0 = 0\n 31204: ra = 1102, jump @19\n      : @968 [@dyn 551] (gas: 8)\n 31210: u64 [s1 + 792] = 0\n 31214: u64 [s1 + 784] = 0\n 31218: u64 [s1 + 768] = 0x41\n 31223: a0 = 0x4\n 31226: a1 = s1 + 0x300\n 31230: u64 [s1 + 776] = 0\n 31234: ra = 0x45c\n 31238: jump @19\n      : @969 (gas: 6)\n 31241: u64 [s1 + 912] = 0\n 31245: u64 [s1 + 904] = 0\n 31249: u64 [s1 + 896] = 0\n 31253: t0 = 0x450\n 31257: a0 = 0x4e487b7100000000\n 31267: fallthrough\n      : @970 [@dyn 552] (gas: 4)\n 31268: a1 = s1 + 0x380\n 31272: u64 [s1 + 0x398] = a0\n 31276: a0 = 0\n 31278: ra = 1106, jump @19\n      : @971 [@dyn 553] (gas: 8)\n 31284: u64 [s1 + 888] = 0\n 31288: u64 [s1 + 880] = 0\n 31292: u64 [s1 + 864] = 0x41\n 31297: a0 = 0x4\n 31300: a1 = s1 + 0x360\n 31304: u64 [s1 + 872] = 0\n 31308: ra = 0x45c\n 31312: jump @19\n      : @972 (gas: 6)\n 31315: u64 [s1 + 1008] = 0\n 31319: u64 [s1 + 1000] = 0\n 31323: u64 [s1 + 992] = 0\n 31327: t0 = 0x454\n 31331: a0 = 0x4e487b7100000000\n 31341: fallthrough\n      : @973 [@dyn 554] (gas: 4)\n 31342: a1 = s1 + 0x3e0\n 31346: u64 [s1 + 0x3f8] = a0\n 31350: a0 = 0\n 31352: ra = 1110, jump @19\n      : @974 [@dyn 555] (gas: 8)\n 31358: u64 [s1 + 984] = 0\n 31362: u64 [s1 + 976] = 0\n 31366: u64 [s1 + 960] = 0x41\n 31371: a0 = 0x4\n 31374: a1 = s1 + 0x3c0\n 31378: u64 [s1 + 968] = 0\n 31382: ra = 0x45c\n 31386: jump @19\n      : @975 (gas: 6)\n 31389: u64 [s1 + 1104] = 0\n 31393: u64 [s1 + 1096] = 0\n 31397: u64 [s1 + 1088] = 0\n 31401: t0 = 0x458\n 31405: a0 = 0x4e487b7100000000\n 31415: fallthrough\n      : @976 [@dyn 556] (gas: 4)\n 31416: a1 = s1 + 0x440\n 31420: u64 [s1 + 0x458] = a0\n 31424: a0 = 0\n 31426: ra = 1114, jump @19\n      : @977 [@dyn 557] (gas: 7)\n 31432: u64 [s1 + 1080] = 0\n 31436: u64 [s1 + 1072] = 0\n 31440: u64 [s1 + 1056] = 0x41\n 31445: a0 = 0x4\n 31448: a1 = s1 + 0x420\n 31452: u64 [s1 + 1064] = 0\n 31456: ra = 1116, jump @19\n      : @978 [@dyn 558] (gas: 3)\n 31462: a0 = u64 [s1 + 0x100]\n 31466: a0 = i32 [a0]\n 31468: jump @980 if a0 >u 63\n      : @979 (gas: 3)\n 31472: a1 = u64 [s1 + 0x100]\n 31476: u32 [a1 + 0] = 0x40\n 31479: fallthrough\n      : @980 (gas: 5)\n 31480: a0 = 0x1\n 31483: a2 = 0x24\n 31486: a1 = u64 [s1 + 0xf8]\n 31490: ecalli 7 // 'seal_return'\n 31492: fallthrough\n      : @981 (gas: 30)\n 31493: a0 = u64 [s1 + 0x188]\n 31497: a2 = reverse a0\n 31499: a0 = a2 << 0x20\n 31502: a3 = u64 [s1 + 0x190]\n 31506: a3 = reverse a3\n 31508: a3 = a3 >> 0x20\n 31511: t0 = a3 | a0\n 31514: a0 = u64 [s1 + 0x198]\n 31518: a3 = reverse a0\n 31520: a4 = a3 << 0x20\n 31523: a2 = a2 >> 0x20\n 31526: t1 = a4 | a2\n 31529: a3 = a3 >> 0x20\n 31532: u64 [s1 + 1144] = 0\n 31536: a4 = u64 [0x20000]\n 31541: a5 = u64 [0x20008]\n 31546: a0 = u64 [0x20010]\n 31551: a2 = u64 [0x20018]\n 31556: u64 [s1 + 0x498] = a4\n 31560: a4 = s1 + 0x400\n 31564: u64 [a4 + 0x90] = a5\n 31568: u64 [a4 + 0x88] = a0\n 31572: u64 [a4 + 0x80] = a2\n 31576: u64 [a4 + 0x70] = a3\n 31579: u64 [s1 + 0x468] = t1\n 31583: a2 = s1 + 0x480\n 31587: a3 = s1 + 0x460\n 31591: u64 [s1 + 0x460] = t0\n 31595: a0 = u64 [s1 + 0x1b8]\n 31599: ra = 1118, jump @24\n      : @982 [@dyn 559] (gas: 3)\n 31605: a0 = 0\n 31607: a1 = u64 [s1 + 0xf8]\n 31611: jump @932\n      : @983 (gas: 23)\n 31614: sp = sp + 0xffffffffffffff00\n 31618: u64 [sp + 0xf8] = ra\n 31622: u64 [sp + 0xf0] = s0\n 31626: u64 [sp + 0xe8] = s1\n 31630: s0 = sp + 0x100\n 31634: sp = sp & 0xffffffffffffffe0\n 31637: s1 = sp\n 31639: u64 [s1 + 0x18] = a0\n 31642: a0 = u64 [a1]\n 31644: u64 [s1 + 0x28] = a0\n 31647: a0 = u64 [a1 + 0x8]\n 31650: u64 [s1 + 0x20] = a0\n 31653: a0 = u64 [a1 + 0x10]\n 31656: u64 [s1 + 0x30] = a0\n 31659: a0 = u64 [a1 + 0x18]\n 31662: u64 [s1 + 0x38] = a0\n 31665: u64 [s1 + 216] = 0\n 31669: u64 [s1 + 208] = 0\n 31673: u64 [s1 + 200] = 0\n 31677: u64 [s1 + 192] = 0x1\n 31682: a0 = s1 + 0xa0\n 31686: a1 = s1 + 0xc0\n 31690: ra = 1120, jump @21\n      : @984 [@dyn 560] (gas: 20)\n 31696: a0 = u64 [s1 + 0xb8]\n 31700: t0 = u64 [s1 + 0xa0]\n 31704: a2 = u64 [s1 + 0xb0]\n 31708: a3 = u64 [s1 + 0xa8]\n 31712: a1 = u64 [s1 + 0x38]\n 31715: a4 = a0 ^ a1\n 31718: a1 = a1 <u a0\n 31721: a0 = u64 [s1 + 0x30]\n 31724: a5 = a0 <u a2\n 31727: a5 = a1 if a4 != 0\n 31730: a1 = u64 [s1 + 0x20]\n 31733: t1 = a3 ^ a1\n 31736: a3 = a1 <u a3\n 31739: a1 = u64 [s1 + 0x28]\n 31742: a1 = a1 <u t0\n 31745: a1 = a3 if t1 != 0\n 31748: a0 = a0 ^ a2\n 31751: a0 = a0 | a4\n 31754: a1 = a5 if a0 != 0\n 31757: jump @989 if a1 == 0\n      : @985 (gas: 7)\n 31761: u64 [s1 + 88] = 0\n 31764: u64 [s1 + 80] = 0\n 31767: u64 [s1 + 72] = 0\n 31770: a1 = s1 + 0x40\n 31773: u64 [s1 + 64] = 0x1\n 31777: a0 = 0\n 31779: ra = 1122, jump @19\n      : @986 [@dyn 561] (gas: 2)\n 31785: a1 = i32 [0x2005c]\n 31790: jump @988 if a1 >u 31\n      : @987 (gas: 2)\n 31794: u32 [0x2005c] = 0x20\n 31800: fallthrough\n      : @988 (gas: 52)\n 31801: a0 = sp + 0xffffffffffffffe0\n 31804: a2 = a0 & 0xffffffffffffffe0\n 31807: u64 [s1 + 0x10] = a2\n 31810: sp = a2\n 31812: a0 = 0x20070\n 31817: i32 a0 = a0 + 0\n 31819: i32 a2 = a2 + 0\n 31821: a1 = 0x20\n 31824: ecalli 6 // 'hash_keccak_256'\n 31826: a3 = u64 [s1 + 0x10]\n 31829: a0 = u64 [a3]\n 31831: a1 = u64 [a3 + 0x8]\n 31834: a2 = u64 [a3 + 0x18]\n 31837: a3 = u64 [a3 + 0x10]\n 31840: t0 = reverse a0\n 31842: a1 = reverse a1\n 31844: a2 = reverse a2\n 31846: a3 = reverse a3\n 31848: a4 = u64 [s1 + 0x20]\n 31851: a4 = a4 + a3\n 31854: t1 = u64 [s1 + 0x28]\n 31857: t1 = t1 + a2\n 31860: a2 = t1 <u a2\n 31863: a4 = a4 + a2\n 31866: a0 = a4 ^ a3\n 31869: a3 = a4 <u a3\n 31872: a3 = a2 if a0 == 0\n 31875: a0 = u64 [s1 + 0x30]\n 31878: a0 = a0 + a1\n 31881: a3 = a3 + a0\n 31884: a2 = a3 <u a0\n 31887: a5 = u64 [s1 + 0x38]\n 31890: t0 = t0 + a5\n 31893: a0 = a0 <u a1\n 31896: a0 = a0 + t0\n 31899: a0 = a0 + a2\n 31902: a1 = u64 [s1 + 0x18]\n 31905: a2 = 0\n 31907: u64 [a1 + 56] = 0\n 31910: u64 [a1 + 48] = 0\n 31913: u64 [a1 + 40] = 0\n 31916: u64 [a1 + 32] = 0\n 31919: u64 [a1] = t1\n 31921: u64 [a1 + 0x8] = a4\n 31924: u64 [a1 + 0x10] = a3\n 31927: u64 [a1 + 0x18] = a0\n 31930: sp = s0 + 0xffffffffffffff00\n 31934: ra = u64 [sp + 0xf8]\n 31938: s0 = u64 [sp + 0xf0]\n 31942: s1 = u64 [sp + 0xe8]\n 31946: sp = sp + 0x100\n 31950: ret\n      : @989 (gas: 6)\n 31952: u64 [s1 + 144] = 0\n 31956: u64 [s1 + 136] = 0\n 31960: u64 [s1 + 128] = 0\n 31964: t0 = 0x464\n 31968: a0 = 0x4e487b7100000000\n 31978: fallthrough\n      : @990 [@dyn 562] (gas: 4)\n 31979: a1 = s1 + 0x80\n 31983: u64 [s1 + 0x98] = a0\n 31987: a0 = 0\n 31989: ra = 1126, jump @19\n      : @991 [@dyn 563] (gas: 7)\n 31995: u64 [s1 + 120] = 0\n 31998: u64 [s1 + 112] = 0\n 32001: u64 [s1 + 96] = 0x32\n 32005: a0 = 0x4\n 32008: a1 = s1 + 0x60\n 32011: u64 [s1 + 104] = 0\n 32014: ra = 1128, jump @19\n      : @992 [@dyn 564] (gas: 2)\n 32020: a1 = i32 [0x2005c]\n 32025: jump @994 if a1 >u 63\n      : @993 (gas: 2)\n 32029: u32 [0x2005c] = 0x40\n 32035: fallthrough\n      : @994 (gas: 7)\n 32036: a1 = 0x20070\n 32041: i32 a1 = a1 + 0\n 32043: a0 = 0x1\n 32046: a2 = 0x24\n 32049: ra = 0x46a\n 32053: ecalli 7 // 'seal_return'\n 32055: fallthrough\n      : @995 [@dyn 565] (gas: 19)\n 32056: sp = sp + 0xffffffffffffff90\n 32059: u64 [sp + 0x68] = ra\n 32062: u64 [sp + 0x60] = s0\n 32065: s0 = sp + 0x70\n 32068: sp = sp & 0xfffffffffffffff0\n 32071: a3 = u64 [a0 + 0x18]\n 32074: a2 = u64 [a0 + 0x10]\n 32077: t1 = u64 [a0]\n 32079: a0 = u64 [a0 + 0x8]\n 32082: a4 = a3 >u 0\n 32084: a5 = a2 >u 0\n 32086: a5 = a4 if a3 != 0\n 32089: t0 = a0 >u 0\n 32091: a4 = t1 <u 0xffffffffffffff40\n 32095: a4 = a4 ^ 0x1\n 32098: a4 = t0 if a0 != 0\n 32101: a1 = a2 | a3\n 32104: a4 = a5 if a1 != 0\n 32107: jump @998 if a4 != 0\n      : @996 (gas: 15)\n 32110: a1 = t1 + 0xc0\n 32114: a4 = a1 <u t1\n 32117: a5 = a0 + a4\n 32120: a0 = a5 <u a0\n 32123: a0 = a4 if a4 == 0\n 32126: a0 = a0 + a2\n 32129: a2 = a0 <u a2\n 32132: a2 = a2 + a3\n 32135: u64 [sp + 0x40] = a1\n 32138: u64 [sp + 0x48] = a5\n 32141: u64 [sp + 0x50] = a0\n 32144: a0 = 0x40\n 32147: a1 = sp + a0\n 32150: u64 [sp + 0x58] = a2\n 32153: ra = 1132, jump @19\n      : @997 [@dyn 566] (gas: 5)\n 32159: sp = s0 + 0xffffffffffffff90\n 32162: ra = u64 [sp + 0x68]\n 32165: s0 = u64 [sp + 0x60]\n 32168: sp = sp + 0x70\n 32171: ret\n      : @998 (gas: 1)\n 32173: t0 = 1134, jump @1205\n      : @999 [@dyn 567] (gas: 1)\n 32179: ra = 1136, jump @19\n      : @1000 [@dyn 568] (gas: 7)\n 32185: u64 [sp + 24] = 0\n 32188: u64 [sp + 16] = 0\n 32191: u64 [sp + 0] = 0x41\n 32194: a0 = 0x4\n 32197: a1 = sp\n 32199: u64 [sp + 8] = 0\n 32202: ra = 1138, jump @19\n      : @1001 [@dyn 569] (gas: 2)\n 32208: a1 = i32 [0x2005c]\n 32213: jump @1003 if a1 >u 63\n      : @1002 (gas: 2)\n 32217: u32 [0x2005c] = 0x40\n 32223: fallthrough\n      : @1003 (gas: 7)\n 32224: a1 = 0x20070\n 32229: i32 a1 = a1 + 0\n 32231: a0 = 0x1\n 32234: a2 = 0x24\n 32237: ra = 0x474\n 32241: ecalli 7 // 'seal_return'\n 32243: fallthrough\n      : @1004 [@dyn 570] (gas: 46)\n 32244: sp = sp + 0xffffffffffffff70\n 32248: u64 [sp + 0x88] = ra\n 32252: u64 [sp + 0x80] = s0\n 32256: u64 [sp + 0x78] = s1\n 32259: s0 = sp + 0x90\n 32263: sp = sp & 0xfffffffffffffff0\n 32266: t0 = a0\n 32268: a2 = u64 [a1]\n 32270: t2 = u64 [a0 + 0x8]\n 32273: a5 = u64 [a1 + 0x8]\n 32276: t1 = u64 [a0]\n 32278: a3 = a2 + 0x1f\n 32281: ra = a3 <u a2\n 32284: a2 = a5 + ra\n 32287: a3 = a3 & 0xffffffffffffffe0\n 32290: u64 [sp + 0x8] = t1\n 32293: t1 = t1 + a3\n 32296: a4 = t1 <u a3\n 32299: a3 = a2 + t2\n 32302: a3 = a3 + a4\n 32305: s1 = a3 ^ a2\n 32308: a0 = a3 <u a2\n 32311: a0 = a4 if s1 == 0\n 32314: a4 = u64 [t0 + 0x18]\n 32317: a5 = a2 <u a5\n 32320: s1 = u64 [a1 + 0x10]\n 32323: t0 = u64 [t0 + 0x10]\n 32326: a1 = u64 [a1 + 0x18]\n 32329: a5 = ra if ra == 0\n 32332: a5 = a5 + s1\n 32335: s1 = a5 <u s1\n 32338: a2 = a5 + t0\n 32341: a0 = a0 + a2\n 32344: a5 = a2 <u a5\n 32347: a2 = a0 <u a2\n 32350: a1 = a1 + a4\n 32353: a1 = a1 + s1\n 32356: a1 = a1 + a5\n 32359: a5 = a1 + a2\n 32362: a1 = a5 >u 0\n 32364: a2 = a0 >u 0\n 32366: a2 = a1 if a5 != 0\n 32369: a1 = a0 | a5\n 32372: s1 = a3 >u 0\n 32374: s1 = a2 if a1 != 0\n 32377: jump @1008 if s1 != 0\n      : @1005 (gas: 13)\n 32380: a1 = u64 [sp + 0x8]\n 32383: a1 = t1 <u a1\n 32386: a2 = a3 ^ t2\n 32389: s1 = a3 <u t2\n 32392: s1 = a1 if a2 == 0\n 32395: a1 = a0 <u t0\n 32398: a2 = a5 ^ a4\n 32401: a4 = a5 <u a4\n 32404: a4 = a1 if a2 == 0\n 32407: a1 = a0 ^ t0\n 32410: a1 = a1 | a2\n 32413: a4 = s1 if a1 == 0\n 32416: jump @1008 if a4 != 0\n      : @1006 (gas: 7)\n 32419: u64 [sp + 0x50] = t1\n 32422: u64 [sp + 0x58] = a3\n 32425: u64 [sp + 0x60] = a0\n 32428: a0 = 0x40\n 32431: a1 = sp + 0x50\n 32434: u64 [sp + 0x68] = a5\n 32437: ra = 1142, jump @19\n      : @1007 [@dyn 571] (gas: 6)\n 32443: sp = s0 + 0xffffffffffffff70\n 32447: ra = u64 [sp + 0x88]\n 32451: s0 = u64 [sp + 0x80]\n 32455: s1 = u64 [sp + 0x78]\n 32458: sp = sp + 0x90\n 32462: ret\n      : @1008 (gas: 6)\n 32464: u64 [sp + 64] = 0\n 32467: u64 [sp + 56] = 0\n 32470: u64 [sp + 48] = 0\n 32473: t0 = 0x478\n 32477: a0 = 0x4e487b7100000000\n 32487: fallthrough\n      : @1009 [@dyn 572] (gas: 4)\n 32488: a1 = sp + 0x30\n 32491: u64 [sp + 0x48] = a0\n 32494: a0 = 0\n 32496: ra = 1146, jump @19\n      : @1010 [@dyn 573] (gas: 7)\n 32502: u64 [sp + 40] = 0\n 32505: u64 [sp + 32] = 0\n 32508: u64 [sp + 16] = 0x41\n 32512: a0 = 0x4\n 32515: a1 = sp + 0x10\n 32518: u64 [sp + 24] = 0\n 32521: ra = 1148, jump @19\n      : @1011 [@dyn 574] (gas: 2)\n 32527: a1 = i32 [0x2005c]\n 32532: jump @1013 if a1 >u 63\n      : @1012 (gas: 2)\n 32536: u32 [0x2005c] = 0x40\n 32542: fallthrough\n      : @1013 (gas: 7)\n 32543: a1 = 0x20070\n 32548: i32 a1 = a1 + 0\n 32550: a0 = 0x1\n 32553: a2 = 0x24\n 32556: ra = 0x47e\n 32560: ecalli 7 // 'seal_return'\n 32562: fallthrough\n      : @1014 [@dyn 575] (gas: 37)\n 32563: sp = sp + 0xfffffffffffffe40\n 32567: u64 [sp + 0x1b8] = ra\n 32571: u64 [sp + 0x1b0] = s0\n 32575: u64 [sp + 0x1a8] = s1\n 32579: s0 = sp + 0x1c0\n 32583: sp = sp & 0xffffffffffffffe0\n 32586: ra = u64 [a1]\n 32588: a4 = u64 [a2 + 0x8]\n 32591: t2 = u64 [a1 + 0x8]\n 32594: s1 = u64 [a2]\n 32596: a3 = ra + 0x1f\n 32599: t0 = a3 <u ra\n 32602: a5 = t2 + t0\n 32605: u64 [sp + 0x30] = s1\n 32608: t1 = a3 <u s1\n 32611: a3 = a5 ^ a4\n 32614: u64 [sp + 0x40] = a4\n 32617: a4 = a5 <u a4\n 32620: a4 = t1 if a3 == 0\n 32623: s1 = u64 [a1 + 0x10]\n 32626: a3 = a5 <u t2\n 32629: a3 = t0 if t0 == 0\n 32632: a5 = u64 [a2 + 0x18]\n 32635: t0 = u64 [a1 + 0x18]\n 32638: t1 = u64 [a2 + 0x10]\n 32641: a3 = a3 + s1\n 32644: a1 = a3 <u s1\n 32647: a1 = a1 + t0\n 32650: a2 = a1 ^ a5\n 32653: u64 [sp + 0x20] = a5\n 32656: a1 = a1 <s a5\n 32659: a5 = a3 <u t1\n 32662: a1 = a5 if a2 == 0\n 32665: a3 = a3 ^ t1\n 32668: a2 = a2 | a3\n 32671: a4 = a1 if a2 != 0\n 32674: jump @1032 if a4 == 0\n      : @1015 (gas: 13)\n 32678: u64 [sp + 0x18] = a0\n 32681: u64 [sp + 0x28] = t1\n 32684: a0 = ra | s1\n 32687: u64 [sp + 0x50] = t2\n 32690: u64 [sp + 0x38] = t0\n 32693: a1 = t2 | t0\n 32696: a0 = a0 | a1\n 32699: a0 = a0 >> 0x20\n 32702: u64 [sp + 0x48] = s1\n 32705: a1 = a1 | s1\n 32708: a1 = a1 << 0x20\n 32711: a0 = a0 | a1\n 32714: jump @1031 if a0 != 0\n      : @1016 (gas: 6)\n 32718: u64 [sp + 0x60] = ra\n 32721: i32 a1 = ra + 0\n 32723: i32 a0 = sp + 0x180\n 32727: u64 [sp + 0x10] = a1\n 32730: ecalli 1 // 'call_data_load'\n 32732: fallthrough\n      : @1017 (gas: 13)\n 32733: a2 = u64 [sp + 0x198]\n 32737: a3 = u64 [sp + 0x190]\n 32741: a4 = u64 [sp + 0x188]\n 32745: a0 = a2 >u 0\n 32747: a1 = a3 >u 0\n 32749: a1 = a0 if a2 != 0\n 32752: u64 [sp + 0x90] = a2\n 32756: u64 [sp + 0x88] = a3\n 32760: a0 = a3 | a2\n 32763: u64 [sp + 0x98] = a4\n 32767: a2 = a4 >u 0\n 32769: a2 = a1 if a0 != 0\n 32772: jump @1033 if a2 != 0\n      : @1018 (gas: 4)\n 32776: s1 = u64 [sp + 0x180]\n 32780: a0 = sp + 0x160\n 32784: a1 = 0x40\n 32787: ra = 1152, jump @17\n      : @1019 [@dyn 576] (gas: 31)\n 32793: t0 = u64 [sp + 0x178]\n 32797: a5 = u64 [sp + 0x170]\n 32801: u64 [sp + 0x78] = a5\n 32804: t1 = u64 [sp + 0x168]\n 32808: u64 [sp + 0x80] = t1\n 32812: t2 = u64 [sp + 0x160]\n 32816: u64 [sp + 0x70] = t2\n 32819: a0 = s1 + 0x1f\n 32822: u64 [sp + 0x58] = s1\n 32825: a1 = a0 <u s1\n 32828: a2 = u64 [sp + 0x98]\n 32832: a1 = a1 + a2\n 32835: a1 = a1 & 0x1\n 32838: a0 = a0 & 0xffffffffffffffe0\n 32841: a2 = a0 + 0x20\n 32844: a0 = a2 <u a0\n 32847: a3 = a1 + a0\n 32850: a4 = a3 <u a1\n 32853: a4 = a0 if a0 == 0\n 32856: u64 [sp + 312] = 0\n 32860: u64 [sp + 0x120] = a2\n 32864: s1 = t0\n 32866: u64 [sp + 0x158] = t0\n 32870: u64 [sp + 0x150] = a5\n 32874: u64 [sp + 0x148] = t1\n 32878: u64 [sp + 0x140] = t2\n 32882: u64 [sp + 0x128] = a3\n 32886: a0 = sp + 0x140\n 32890: a1 = sp + 0x120\n 32894: u64 [sp + 0x130] = a4\n 32898: ra = 1154, jump @1004\n      : @1020 [@dyn 577] (gas: 12)\n 32904: a2 = u64 [sp + 0x70]\n 32907: u64 [sp + 0x68] = s1\n 32910: a1 = u64 [sp + 0x80]\n 32914: a0 = a1 | s1\n 32917: a3 = u64 [sp + 0x78]\n 32920: a1 = a2 | a3\n 32923: a1 = a1 | a0\n 32926: a1 = a1 >> 0x20\n 32929: a0 = a0 | a3\n 32932: a0 = a0 << 0x20\n 32935: a0 = a0 | a1\n 32938: jump @1031 if a0 != 0\n      : @1021 (gas: 11)\n 32942: s1 = u64 [sp + 0x58]\n 32945: u64 [sp + 0x100] = s1\n 32949: a0 = u64 [sp + 0x98]\n 32953: u64 [sp + 0x108] = a0\n 32957: a0 = u64 [sp + 0x88]\n 32961: u64 [sp + 0x110] = a0\n 32965: a1 = sp + 0x100\n 32969: a0 = u64 [sp + 0x90]\n 32973: u64 [sp + 0x118] = a0\n 32977: a0 = a2\n 32979: ra = 1156, jump @19\n      : @1022 [@dyn 578] (gas: 46)\n 32985: a0 = u64 [sp + 0x60]\n 32988: a3 = a0 + s1\n 32991: a2 = a3 <u a0\n 32994: t2 = u64 [sp + 0x50]\n 32997: a0 = u64 [sp + 0x98]\n 33001: a0 = a0 + t2\n 33004: a0 = a0 + a2\n 33007: a4 = a0 ^ t2\n 33010: a1 = a0 <u t2\n 33013: a1 = a2 if a4 == 0\n 33016: ra = u64 [sp + 0x48]\n 33019: a2 = u64 [sp + 0x88]\n 33023: a2 = a2 + ra\n 33026: a5 = a3 + 0x20\n 33029: t0 = a5 <u a3\n 33032: a4 = a0 + t0\n 33035: a3 = u64 [sp + 0x30]\n 33038: a5 = a3 <u a5\n 33041: a3 = u64 [sp + 0x40]\n 33044: s1 = a4 ^ a3\n 33047: a3 = a3 <u a4\n 33050: a5 = a3 if s1 != 0\n 33053: a3 = a2 <u ra\n 33056: t1 = u64 [sp + 0x38]\n 33059: s1 = u64 [sp + 0x90]\n 33063: s1 = s1 + t1\n 33066: a3 = a3 + s1\n 33069: a1 = a1 + a2\n 33072: a2 = a1 <u a2\n 33075: a2 = a2 + a3\n 33078: a0 = a4 <u a0\n 33081: a0 = t0 if t0 == 0\n 33084: a0 = a0 + a1\n 33087: a1 = a0 <u a1\n 33090: a1 = a1 + a2\n 33093: a3 = u64 [sp + 0x20]\n 33096: a2 = a1 ^ a3\n 33099: a1 = a3 <u a1\n 33102: a4 = u64 [sp + 0x28]\n 33105: a3 = a4 <u a0\n 33108: a1 = a3 if a2 == 0\n 33111: a0 = a0 ^ a4\n 33114: a0 = a0 | a2\n 33117: a5 = a1 if a0 != 0\n 33120: a3 = u64 [sp + 0x98]\n 33124: jump @1039 if a5 != 0\n      : @1023 (gas: 7)\n 33128: a0 = ra | t1\n 33131: a1 = 0xffffffe0\n 33141: a2 = u64 [sp + 0x60]\n 33144: a1 = a2 <u a1\n 33147: a1 = 0 if t2 != 0\n 33149: a1 = 0 if a0 != 0\n 33151: jump @1031 if a1 == 0\n      : @1024 (gas: 15)\n 33155: a2 = u64 [sp + 0x88]\n 33159: a5 = u64 [sp + 0x58]\n 33162: a0 = a5 | a2\n 33165: a1 = u64 [sp + 0x90]\n 33169: a1 = a1 | a3\n 33172: a0 = a0 | a1\n 33175: a0 = a0 >> 0x20\n 33178: a1 = a1 | a2\n 33181: a1 = a1 << 0x20\n 33184: a0 = a0 | a1\n 33187: s1 = u64 [sp + 0x70]\n 33190: a2 = u64 [sp + 0x80]\n 33194: a3 = u64 [sp + 0x78]\n 33197: a4 = u64 [sp + 0x68]\n 33200: jump @1031 if a0 != 0\n      : @1025 (gas: 7)\n 33204: a0 = a3 | a4\n 33207: a1 = 0xffffffe0\n 33217: u64 [sp + 0x60] = a1\n 33220: a1 = s1 <u a1\n 33223: a1 = 0 if a2 != 0\n 33225: a1 = 0 if a0 != 0\n 33227: jump @1031 if a1 == 0\n      : @1026 (gas: 7)\n 33231: a0 = u64 [sp + 0x10]\n 33234: i32 a0 = a0 + 0x20\n 33237: u64 [sp + 0x50] = a0\n 33240: i32 a0 = s1 + 0x20\n 33243: a1 = a5\n 33245: s1 = a5\n 33247: ra = 1158, jump @26\n      : @1027 [@dyn 579] (gas: 5)\n 33253: i32 a0 = a0 + 0\n 33255: i32 a1 = s1 + 0\n 33257: a2 = u64 [sp + 0x50]\n 33260: ecalli 0 // 'call_data_copy'\n 33261: fallthrough\n      : @1028 (gas: 27)\n 33262: t0 = u64 [sp + 0x70]\n 33265: a0 = t0 + s1\n 33268: a1 = a0 <u t0\n 33271: a2 = u64 [sp + 0x98]\n 33275: a4 = u64 [sp + 0x80]\n 33279: a2 = a2 + a4\n 33282: a2 = a2 + a1\n 33285: a3 = a2 ^ a4\n 33288: a4 = a2 <u a4\n 33291: a4 = a1 if a3 == 0\n 33294: a1 = u64 [sp + 0x88]\n 33298: a3 = u64 [sp + 0x78]\n 33301: a1 = a1 + a3\n 33304: a3 = a1 <u a3\n 33307: a5 = u64 [sp + 0x90]\n 33311: s1 = u64 [sp + 0x68]\n 33314: a5 = a5 + s1\n 33317: a3 = a3 + a5\n 33320: a4 = a4 + a1\n 33323: a1 = a4 <u a1\n 33326: a1 = a1 + a3\n 33329: a1 = a1 | a4\n 33332: a3 = u64 [sp + 0x60]\n 33335: a3 = a0 <u a3\n 33338: a3 = 0 if a2 != 0\n 33340: a3 = 0 if a1 != 0\n 33342: jump @1031 if a3 == 0\n      : @1029 (gas: 8)\n 33345: s1 = t0\n 33347: i32 a0 = a0 + 0x20\n 33350: u64 [sp + 248] = 0\n 33354: u64 [sp + 240] = 0\n 33358: u64 [sp + 232] = 0\n 33362: a1 = sp + 0xe0\n 33366: u64 [sp + 224] = 0\n 33370: ra = 1160, jump @19\n      : @1030 [@dyn 580] (gas: 14)\n 33377: a0 = u64 [sp + 0x18]\n 33380: a1 = u64 [sp + 0x68]\n 33383: u64 [a0 + 0x18] = a1\n 33386: a1 = u64 [sp + 0x78]\n 33389: u64 [a0 + 0x10] = a1\n 33392: a1 = u64 [sp + 0x80]\n 33396: u64 [a0 + 0x8] = a1\n 33399: u64 [a0] = s1\n 33401: sp = s0 + 0xfffffffffffffe40\n 33405: ra = u64 [sp + 0x1b8]\n 33409: s0 = u64 [sp + 0x1b0]\n 33413: s1 = u64 [sp + 0x1a8]\n 33417: sp = sp + 0x1c0\n 33421: ret\n      : @1031 (gas: 1)\n 33423: trap\n      : @1032 (gas: 2)\n 33424: a1 = 0x20070\n 33429: jump @1040\n      : @1033 (gas: 6)\n 33431: u64 [sp + 208] = 0\n 33435: u64 [sp + 200] = 0\n 33439: u64 [sp + 192] = 0\n 33443: t0 = 0x48a\n 33447: a0 = 0x4e487b7100000000\n 33457: fallthrough\n      : @1034 [@dyn 581] (gas: 4)\n 33458: a1 = sp + 0xc0\n 33462: u64 [sp + 0xd8] = a0\n 33466: a0 = 0\n 33468: ra = 1164, jump @19\n      : @1035 [@dyn 582] (gas: 7)\n 33475: u64 [sp + 184] = 0\n 33479: u64 [sp + 176] = 0\n 33483: u64 [sp + 160] = 0x41\n 33488: a0 = 0x4\n 33491: a1 = sp + 0xa0\n 33495: u64 [sp + 168] = 0\n 33499: ra = 1166, jump @19\n      : @1036 [@dyn 583] (gas: 2)\n 33506: a1 = i32 [0x2005c]\n 33511: jump @1038 if a1 >u 63\n      : @1037 (gas: 2)\n 33515: u32 [0x2005c] = 0x40\n 33521: fallthrough\n      : @1038 (gas: 7)\n 33522: a1 = 0x20070\n 33527: i32 a1 = a1 + 0\n 33529: a0 = 0x1\n 33532: a2 = 0x24\n 33535: ecalli 7 // 'seal_return'\n 33537: a1 = 0x20070\n 33542: jump @1040\n      : @1039 (gas: 2)\n 33544: a1 = 0x20070\n 33549: fallthrough\n      : @1040 (gas: 6)\n 33550: i32 a1 = a1 + 0\n 33552: a0 = 0x1\n 33555: a2 = 0\n 33557: ra = 0x490\n 33561: ecalli 7 // 'seal_return'\n 33563: fallthrough\n      : @1041 [@dyn 584] (gas: 38)\n 33564: sp = sp + 0xfffffffffffffd20\n 33568: a2 = sp + 0x200\n 33572: u64 [a2 + 0xd8] = ra\n 33576: u64 [a2 + 0xd0] = s0\n 33580: u64 [a2 + 0xc8] = s1\n 33584: s0 = sp + 0x2e0\n 33588: sp = sp & 0xffffffffffffffe0\n 33591: a2 = u64 [a1]\n 33593: s1 = u64 [a1 + 0x18]\n 33596: a5 = u64 [a1 + 0x8]\n 33599: a1 = u64 [a1 + 0x10]\n 33602: t0 = a2 + 0xfffffffffffffffc\n 33605: u64 [sp + 0x90] = a2\n 33609: a2 = t0 <u a2\n 33612: a3 = a5 + a2\n 33615: a3 = a3 + 0xffffffffffffffff\n 33618: a4 = a3 ^ a5\n 33621: u64 [sp + 0x80] = a5\n 33625: a5 = a3 <u a5\n 33628: a5 = a2 if a4 == 0\n 33631: a2 = a1 + 0xffffffffffffffff\n 33634: a5 = a5 + a2\n 33637: a2 = a5 <u a2\n 33640: u64 [sp + 0x88] = a1\n 33644: a4 = a1 <u 0x1\n 33647: u64 [sp + 0x98] = s1\n 33651: a4 = s1 - a4\n 33654: a2 = a2 + a4\n 33657: a4 = a2 >s 0\n 33659: s1 = a5 >u 0\n 33661: s1 = a4 if a2 != 0\n 33664: a2 = a2 | a5\n 33667: a4 = a3 >u 0\n 33669: a1 = t0 <u 0xa0\n 33673: a1 = a1 ^ 0x1\n 33676: a1 = a4 if a3 != 0\n 33679: a1 = s1 if a2 != 0\n 33682: jump @1063 if a1 == 0\n      : @1042 (gas: 6)\n 33686: s1 = a0\n 33688: i32 a0 = sp + 0x220\n 33692: a1 = 0x4\n 33695: ra = 0x492\n 33699: ecalli 1 // 'call_data_load'\n 33701: fallthrough\n      : @1043 [@dyn 585] (gas: 5)\n 33702: a3 = sp + 0x200\n 33706: a0 = u64 [a3 + 0x38]\n 33709: a1 = u64 [a3 + 0x30]\n 33712: a2 = u64 [a3 + 0x28]\n 33715: t0 = 1172, jump @1211\n      : @1044 [@dyn 586] (gas: 1)\n 33721: jump @1064 if a4 == 0\n      : @1045 (gas: 2)\n 33725: a3 = u64 [sp + 0x220]\n 33729: t0 = 1174, jump @1163\n      : @1046 [@dyn 587] (gas: 15)\n 33735: u64 [sp + 0x1c0] = a0\n 33739: a0 = u64 [sp + 0x80]\n 33743: u64 [sp + 0x1c8] = a0\n 33747: u64 [sp + 0x1e0] = a4\n 33751: a0 = u64 [sp + 0x88]\n 33755: u64 [sp + 0x1d0] = a0\n 33759: a0 = u64 [sp + 0x98]\n 33763: u64 [sp + 0x1d8] = a0\n 33767: u64 [sp + 0x1e8] = a5\n 33771: u64 [sp + 0x1f0] = a2\n 33775: a0 = sp + 0x200\n 33779: a1 = sp + 0x1e0\n 33783: a2 = sp + 0x1c0\n 33787: u64 [sp + 0x1f8] = a3\n 33791: ra = 1176, jump @1014\n      : @1047 [@dyn 588] (gas: 26)\n 33797: a1 = sp + 0x200\n 33801: a0 = u64 [a1 + 0x18]\n 33804: u64 [sp + 0x70] = a0\n 33807: a0 = u64 [a1 + 0x10]\n 33810: u64 [sp + 0x60] = a0\n 33813: a0 = u64 [a1 + 0x8]\n 33816: u64 [sp + 0x78] = a0\n 33819: a0 = u64 [a1]\n 33821: u64 [sp + 0x68] = a0\n 33824: i32 a0 = sp + 0x240\n 33828: a1 = 0x24\n 33831: ecalli 1 // 'call_data_load'\n 33833: a1 = sp + 0x200\n 33837: a0 = u64 [a1 + 0x58]\n 33840: u64 [sp + 0x50] = a0\n 33843: a0 = u64 [a1 + 0x50]\n 33846: u64 [sp + 0x40] = a0\n 33849: a0 = u64 [a1 + 0x48]\n 33852: u64 [sp + 0x58] = a0\n 33855: a0 = u64 [a1 + 0x40]\n 33858: u64 [sp + 0x48] = a0\n 33861: i32 a0 = sp + 0x260\n 33865: a1 = 0x44\n 33868: ra = 0x49a\n 33872: ecalli 1 // 'call_data_load'\n 33874: fallthrough\n      : @1048 [@dyn 589] (gas: 5)\n 33875: a3 = sp + 0x200\n 33879: a0 = u64 [a3 + 0x78]\n 33882: a1 = u64 [a3 + 0x70]\n 33885: a2 = u64 [a3 + 0x68]\n 33888: t0 = 1180, jump @1211\n      : @1049 [@dyn 590] (gas: 1)\n 33894: jump @1065 if a4 == 0\n      : @1050 (gas: 2)\n 33898: a3 = u64 [sp + 0x260]\n 33902: t0 = 1182, jump @1163\n      : @1051 [@dyn 591] (gas: 15)\n 33908: u64 [sp + 0x160] = a0\n 33912: a0 = u64 [sp + 0x80]\n 33916: u64 [sp + 0x168] = a0\n 33920: u64 [sp + 0x180] = a4\n 33924: a0 = u64 [sp + 0x88]\n 33928: u64 [sp + 0x170] = a0\n 33932: a0 = u64 [sp + 0x98]\n 33936: u64 [sp + 0x178] = a0\n 33940: u64 [sp + 0x188] = a5\n 33944: u64 [sp + 0x190] = a2\n 33948: a0 = sp + 0x1a0\n 33952: a1 = sp + 0x180\n 33956: a2 = sp + 0x160\n 33960: u64 [sp + 0x198] = a3\n 33964: ra = 1184, jump @1014\n      : @1052 [@dyn 592] (gas: 13)\n 33970: a0 = u64 [sp + 0x1b8]\n 33974: u64 [sp + 0x30] = a0\n 33977: a0 = u64 [sp + 0x1b0]\n 33981: u64 [sp + 0x20] = a0\n 33984: a0 = u64 [sp + 0x1a8]\n 33988: u64 [sp + 0x38] = a0\n 33991: a0 = u64 [sp + 0x1a0]\n 33995: u64 [sp + 0x28] = a0\n 33998: i32 a0 = sp + 0x280\n 34002: a1 = 0x64\n 34005: ra = 0x4a2\n 34009: ecalli 1 // 'call_data_load'\n 34011: fallthrough\n      : @1053 [@dyn 593] (gas: 5)\n 34012: a3 = sp + 0x200\n 34016: a0 = u64 [a3 + 0x98]\n 34020: a1 = u64 [a3 + 0x90]\n 34024: a2 = u64 [a3 + 0x88]\n 34028: t0 = 1188, jump @1211\n      : @1054 [@dyn 594] (gas: 1)\n 34034: jump @1066 if a4 == 0\n      : @1055 (gas: 2)\n 34038: a3 = u64 [sp + 0x280]\n 34042: t0 = 1190, jump @1163\n      : @1056 [@dyn 595] (gas: 15)\n 34048: u64 [sp + 0x100] = a0\n 34052: a0 = u64 [sp + 0x80]\n 34056: u64 [sp + 0x108] = a0\n 34060: u64 [sp + 0x120] = a4\n 34064: a0 = u64 [sp + 0x88]\n 34068: u64 [sp + 0x110] = a0\n 34072: a0 = u64 [sp + 0x98]\n 34076: u64 [sp + 0x118] = a0\n 34080: u64 [sp + 0x128] = a5\n 34084: u64 [sp + 0x130] = a2\n 34088: a0 = sp + 0x140\n 34092: a1 = sp + 0x120\n 34096: a2 = sp + 0x100\n 34100: u64 [sp + 0x138] = a3\n 34104: ra = 1192, jump @1014\n      : @1057 [@dyn 596] (gas: 13)\n 34110: a0 = u64 [sp + 0x158]\n 34114: u64 [sp + 0x10] = a0\n 34117: a0 = u64 [sp + 0x150]\n 34121: u64 [sp] = a0\n 34123: a0 = u64 [sp + 0x148]\n 34127: u64 [sp + 0x18] = a0\n 34130: a0 = u64 [sp + 0x140]\n 34134: u64 [sp + 0x8] = a0\n 34137: i32 a0 = sp + 0x2a0\n 34141: a1 = 0x84\n 34145: ra = 0x4aa\n 34149: ecalli 1 // 'call_data_load'\n 34151: fallthrough\n      : @1058 [@dyn 597] (gas: 5)\n 34152: a3 = sp + 0x200\n 34156: a0 = u64 [a3 + 0xb8]\n 34160: a1 = u64 [a3 + 0xb0]\n 34164: a2 = u64 [a3 + 0xa8]\n 34168: t0 = 1196, jump @1211\n      : @1059 [@dyn 598] (gas: 1)\n 34174: jump @1067 if a4 == 0\n      : @1060 (gas: 2)\n 34178: a3 = u64 [sp + 0x2a0]\n 34182: t0 = 1198, jump @1163\n      : @1061 [@dyn 599] (gas: 15)\n 34188: u64 [sp + 0xa0] = a0\n 34192: a0 = u64 [sp + 0x80]\n 34196: u64 [sp + 0xa8] = a0\n 34200: u64 [sp + 0xc0] = a4\n 34204: a0 = u64 [sp + 0x88]\n 34208: u64 [sp + 0xb0] = a0\n 34212: a0 = u64 [sp + 0x98]\n 34216: u64 [sp + 0xb8] = a0\n 34220: u64 [sp + 0xc8] = a5\n 34224: u64 [sp + 0xd0] = a2\n 34228: a0 = sp + 0xe0\n 34232: a1 = sp + 0xc0\n 34236: a2 = sp + 0xa0\n 34240: u64 [sp + 0xd8] = a3\n 34244: ra = 1200, jump @1014\n      : @1062 [@dyn 600] (gas: 47)\n 34250: a0 = u64 [sp + 0xf0]\n 34254: a1 = u64 [sp + 0xf8]\n 34258: a2 = u64 [sp + 0xe0]\n 34262: a3 = u64 [sp + 0xe8]\n 34266: u64 [s1 + 0x90] = a0\n 34270: u64 [s1 + 0x98] = a1\n 34274: u64 [s1 + 0x80] = a2\n 34278: u64 [s1 + 0x88] = a3\n 34282: a0 = u64 [sp]\n 34284: u64 [s1 + 0x70] = a0\n 34287: a0 = u64 [sp + 0x10]\n 34290: u64 [s1 + 0x78] = a0\n 34293: a0 = u64 [sp + 0x8]\n 34296: u64 [s1 + 0x60] = a0\n 34299: a0 = u64 [sp + 0x18]\n 34302: u64 [s1 + 0x68] = a0\n 34305: a0 = u64 [sp + 0x20]\n 34308: u64 [s1 + 0x50] = a0\n 34311: a0 = u64 [sp + 0x30]\n 34314: u64 [s1 + 0x58] = a0\n 34317: a0 = u64 [sp + 0x28]\n 34320: u64 [s1 + 0x40] = a0\n 34323: a0 = u64 [sp + 0x38]\n 34326: u64 [s1 + 0x48] = a0\n 34329: a0 = u64 [sp + 0x40]\n 34332: u64 [s1 + 0x30] = a0\n 34335: a0 = u64 [sp + 0x50]\n 34338: u64 [s1 + 0x38] = a0\n 34341: a0 = u64 [sp + 0x48]\n 34344: u64 [s1 + 0x20] = a0\n 34347: a0 = u64 [sp + 0x58]\n 34350: u64 [s1 + 0x28] = a0\n 34353: a0 = u64 [sp + 0x60]\n 34356: u64 [s1 + 0x10] = a0\n 34359: a0 = u64 [sp + 0x70]\n 34362: u64 [s1 + 0x18] = a0\n 34365: a0 = u64 [sp + 0x68]\n 34368: u64 [s1] = a0\n 34370: a0 = u64 [sp + 0x78]\n 34373: u64 [s1 + 0x8] = a0\n 34376: sp = s0 + 0xfffffffffffffd20\n 34380: a0 = sp + 0x200\n 34384: ra = u64 [a0 + 0xd8]\n 34388: s0 = u64 [a0 + 0xd0]\n 34392: s1 = u64 [a0 + 0xc8]\n 34396: sp = sp + 0x2e0\n 34400: ret\n      : @1063 (gas: 2)\n 34402: a1 = 0x20070\n 34407: jump @1068\n      : @1064 (gas: 2)\n 34409: a1 = 0x20070\n 34414: jump @1068\n      : @1065 (gas: 2)\n 34416: a1 = 0x20070\n 34421: jump @1068\n      : @1066 (gas: 2)\n 34423: a1 = 0x20070\n 34428: jump @1068\n      : @1067 (gas: 2)\n 34430: a1 = 0x20070\n 34435: fallthrough\n      : @1068 (gas: 6)\n 34436: i32 a1 = a1 + 0\n 34438: a0 = 0x1\n 34441: a2 = 0\n 34443: ra = 0x4b2\n 34447: ecalli 7 // 'seal_return'\n 34449: fallthrough\n      : @1069 [@dyn 601] (gas: 21)\n 34450: sp = sp + 0xffffffffffffff10\n 34454: u64 [sp + 0xe8] = ra\n 34458: u64 [sp + 0xe0] = s0\n 34462: u64 [sp + 0xd8] = s1\n 34466: s0 = sp + 0xf0\n 34470: sp = sp & 0xfffffffffffffff0\n 34473: a5 = u64 [a1 + 0x10]\n 34476: a4 = u64 [a1 + 0x18]\n 34479: a3 = u64 [a1 + 0x8]\n 34482: a1 = u64 [a1]\n 34484: u64 [sp + 0x28] = a3\n 34487: u64 [sp + 0x18] = a4\n 34490: a4 = a4 | a3\n 34493: a3 = a1 | a5\n 34496: a3 = a3 | a4\n 34499: a3 = a3 >> 0x20\n 34502: u64 [sp + 0x20] = a5\n 34505: a4 = a4 | a5\n 34508: a4 = a4 << 0x20\n 34511: a3 = a3 | a4\n 34514: jump @1083 if a3 != 0\n      : @1070 (gas: 11)\n 34518: u64 [sp + 0x8] = a0\n 34521: a0 = u64 [a2 + 0x18]\n 34524: u64 [sp + 0x68] = a0\n 34527: s1 = u64 [a2 + 0x10]\n 34530: a0 = u64 [a2 + 0x8]\n 34533: u64 [sp + 0x60] = a0\n 34536: a0 = u64 [a2]\n 34538: u64 [sp + 0x58] = a0\n 34541: a0 = sp + 0xb0\n 34545: u64 [sp + 0x10] = a1\n 34548: ra = 1204, jump @17\n      : @1071 [@dyn 602] (gas: 12)\n 34555: a0 = u64 [sp + 0x58]\n 34558: a2 = a0 | s1\n 34561: a1 = u64 [sp + 0x68]\n 34564: a3 = u64 [sp + 0x60]\n 34567: a1 = a1 | a3\n 34570: a2 = a2 | a1\n 34573: a2 = a2 >> 0x20\n 34576: u64 [sp + 0x50] = s1\n 34579: a1 = a1 | s1\n 34582: a1 = a1 << 0x20\n 34585: a1 = a1 | a2\n 34588: jump @1083 if a1 != 0\n      : @1072 (gas: 15)\n 34592: a2 = u64 [sp + 0xc8]\n 34596: a3 = u64 [sp + 0xc0]\n 34600: a4 = u64 [sp + 0xb8]\n 34604: a1 = u64 [sp + 0xb0]\n 34608: u64 [sp + 0x30] = a1\n 34611: u64 [sp + 0x90] = a1\n 34615: u64 [sp + 0x38] = a4\n 34618: u64 [sp + 0x98] = a4\n 34622: u64 [sp + 0x40] = a3\n 34625: u64 [sp + 0xa0] = a3\n 34629: a1 = sp + 0x90\n 34633: u64 [sp + 0x48] = a2\n 34636: u64 [sp + 0xa8] = a2\n 34640: s1 = a0\n 34642: ra = 1206, jump @19\n      : @1073 [@dyn 603] (gas: 9)\n 34649: a0 = u64 [sp + 0x68]\n 34652: a1 = u64 [sp + 0x50]\n 34655: a1 = a1 | a0\n 34658: a0 = 0xffffffe0\n 34668: a2 = s1 <u a0\n 34671: a3 = u64 [sp + 0x60]\n 34674: a2 = 0 if a3 != 0\n 34676: a2 = 0 if a1 != 0\n 34678: jump @1083 if a2 == 0\n      : @1074 (gas: 9)\n 34682: a1 = u64 [sp + 0x20]\n 34685: a2 = u64 [sp + 0x18]\n 34688: a1 = a1 | a2\n 34691: a2 = u64 [sp + 0x10]\n 34694: a0 = a2 <u a0\n 34697: a3 = u64 [sp + 0x28]\n 34700: a0 = 0 if a3 != 0\n 34702: a0 = 0 if a1 != 0\n 34704: jump @1083 if a0 == 0\n      : @1075 (gas: 13)\n 34708: a5 = s1\n 34710: s1 = u64 [sp + 0x30]\n 34713: a3 = u64 [sp + 0x40]\n 34716: a0 = s1 | a3\n 34719: a1 = u64 [sp + 0x48]\n 34722: a4 = u64 [sp + 0x38]\n 34725: a1 = a1 | a4\n 34728: a0 = a0 | a1\n 34731: a0 = a0 >> 0x20\n 34734: a1 = a1 | a3\n 34737: a1 = a1 << 0x20\n 34740: a0 = a0 | a1\n 34743: jump @1083 if a0 != 0\n      : @1076 (gas: 5)\n 34747: i32 a0 = a5 + 0x20\n 34750: i32 a1 = a2 + 0x20\n 34753: u64 [sp + 0x28] = a1\n 34756: a1 = s1\n 34758: ra = 1208, jump @26\n      : @1077 [@dyn 604] (gas: 4)\n 34765: u64 [sp + 0x20] = a0\n 34768: a0 = u64 [sp + 0x28]\n 34771: a1 = s1\n 34773: ra = 1210, jump @26\n      : @1078 [@dyn 605] (gas: 4)\n 34780: a1 = a0\n 34782: a0 = u64 [sp + 0x20]\n 34785: a2 = s1\n 34787: ra = 1212, jump @0\n      : @1079 [@dyn 606] (gas: 27)\n 34794: a0 = u64 [sp + 0x58]\n 34797: a0 = a0 + s1\n 34800: a1 = a0 <u s1\n 34803: a2 = u64 [sp + 0x60]\n 34806: a4 = u64 [sp + 0x38]\n 34809: a2 = a2 + a4\n 34812: a2 = a2 + a1\n 34815: a3 = a2 ^ a4\n 34818: a4 = a2 <u a4\n 34821: a4 = a1 if a3 == 0\n 34824: a1 = u64 [sp + 0x50]\n 34827: a3 = u64 [sp + 0x40]\n 34830: a1 = a1 + a3\n 34833: a3 = a1 <u a3\n 34836: a5 = u64 [sp + 0x68]\n 34839: s1 = u64 [sp + 0x48]\n 34842: a5 = a5 + s1\n 34845: a3 = a3 + a5\n 34848: a4 = a4 + a1\n 34851: a1 = a4 <u a1\n 34854: a1 = a1 + a3\n 34857: a1 = a1 | a4\n 34860: a3 = 0xffffffe0\n 34870: a3 = a0 <u a3\n 34873: a3 = 0 if a2 != 0\n 34875: a3 = 0 if a1 != 0\n 34877: jump @1083 if a3 == 0\n      : @1080 (gas: 7)\n 34881: i32 a0 = a0 + 0x20\n 34884: u64 [sp + 136] = 0\n 34888: u64 [sp + 128] = 0\n 34892: u64 [sp + 120] = 0\n 34895: a1 = sp + 0x70\n 34898: u64 [sp + 112] = 0\n 34901: ra = 1214, jump @19\n      : @1081 [@dyn 607] (gas: 9)\n 34908: s1 = u64 [sp + 0x30]\n 34911: s1 = s1 + 0x1f\n 34914: a0 = 0x1ffffffe0\n 34924: a0 = a0 & s1\n 34927: a1 = u64 [sp + 0x58]\n 34930: a0 = a0 + a1\n 34933: a1 = a0 <u a1\n 34936: a3 = u64 [sp + 0x60]\n 34939: t0 = 1216, jump @1204\n      : @1082 [@dyn 608] (gas: 24)\n 34945: a1 = u64 [sp + 0x50]\n 34948: a3 = a3 + a1\n 34951: a1 = a3 <u a1\n 34954: a4 = u64 [sp + 0x68]\n 34957: a1 = a1 + a4\n 34960: a4 = a0 + 0x20\n 34963: a0 = a4 <u a0\n 34966: a5 = a2 + a0\n 34969: a2 = a5 <u a2\n 34972: a2 = a0 if a0 == 0\n 34975: a2 = a2 + a3\n 34978: a0 = a2 <u a3\n 34981: a0 = a0 + a1\n 34984: a1 = u64 [sp + 0x8]\n 34987: u64 [a1] = a4\n 34989: u64 [a1 + 0x8] = a5\n 34992: u64 [a1 + 0x10] = a2\n 34995: u64 [a1 + 0x18] = a0\n 34998: sp = s0 + 0xffffffffffffff10\n 35002: ra = u64 [sp + 0xe8]\n 35006: s0 = u64 [sp + 0xe0]\n 35010: s1 = u64 [sp + 0xd8]\n 35014: sp = sp + 0xf0\n 35018: ret\n      : @1083 (gas: 1)\n 35020: trap\n      : @1084 (gas: 21)\n 35021: sp = sp + 0xfffffffffffffc30\n 35025: a3 = sp + 0x300\n 35029: u64 [a3 + 0xc8] = ra\n 35033: u64 [a3 + 0xc0] = s0\n 35037: u64 [a3 + 0xb8] = s1\n 35041: s0 = sp + 0x3d0\n 35045: sp = sp & 0xfffffffffffffff0\n 35048: a5 = u64 [a1 + 0x10]\n 35051: a3 = u64 [a1 + 0x18]\n 35054: s1 = u64 [a1 + 0x8]\n 35057: a4 = u64 [a1]\n 35059: u64 [sp + 0x60] = a3\n 35062: a1 = s1 | a3\n 35065: a3 = a4 | a5\n 35068: a3 = a3 | a1\n 35071: a3 = a3 >> 0x20\n 35074: u64 [sp + 0x68] = a5\n 35077: a1 = a1 | a5\n 35080: a1 = a1 << 0x20\n 35083: a1 = a1 | a3\n 35086: jump @1119 if a1 != 0\n      : @1085 (gas: 18)\n 35090: u64 [sp + 0x88] = s1\n 35094: u64 [sp + 0x20] = a0\n 35097: a0 = u64 [a2 + 0x18]\n 35100: u64 [sp + 0x50] = a0\n 35103: s1 = u64 [a2 + 0x10]\n 35106: a0 = u64 [a2 + 0x8]\n 35109: u64 [sp + 0x78] = a0\n 35112: a0 = u64 [a2]\n 35114: u64 [sp + 0x80] = a0\n 35118: a2 = sp + 0x300\n 35122: u64 [a2 + 168] = 0\n 35126: u64 [a2 + 160] = 0\n 35130: u64 [a2 + 152] = 0\n 35134: a1 = sp + 0x390\n 35138: u64 [a2 + 144] = 0x20\n 35143: u64 [sp + 0x70] = a4\n 35146: a0 = a4\n 35148: ra = 1218, jump @19\n      : @1086 [@dyn 609] (gas: 12)\n 35155: a1 = u64 [sp + 0x80]\n 35159: a0 = a1 | s1\n 35162: a2 = u64 [sp + 0x50]\n 35165: a3 = u64 [sp + 0x78]\n 35168: a2 = a2 | a3\n 35171: a0 = a0 | a2\n 35174: a0 = a0 >> 0x20\n 35177: u64 [sp + 0x48] = s1\n 35180: a2 = a2 | s1\n 35183: a2 = a2 << 0x20\n 35186: a0 = a0 | a2\n 35189: jump @1119 if a0 != 0\n      : @1087 (gas: 2)\n 35193: a0 = sp + 0x370\n 35197: ra = 1220, jump @17\n      : @1088 [@dyn 610] (gas: 11)\n 35204: a0 = u64 [sp + 0x68]\n 35207: a1 = u64 [sp + 0x60]\n 35210: a2 = a0 | a1\n 35213: s1 = 0xffffffe0\n 35223: a4 = u64 [sp + 0x70]\n 35226: a0 = a4 <u s1\n 35229: a1 = u64 [sp + 0x88]\n 35233: a0 = 0 if a1 != 0\n 35235: u64 [sp + 0x58] = a2\n 35238: a0 = 0 if a2 != 0\n 35240: jump @1119 if a0 == 0\n      : @1089 (gas: 13)\n 35244: a5 = sp + 0x300\n 35248: a0 = u64 [a5 + 0x80]\n 35252: a1 = u64 [a5 + 0x78]\n 35255: a2 = u64 [a5 + 0x70]\n 35258: a0 = a0 << 0x20\n 35261: a3 = a0 >> 0x20\n 35264: i32 a0 = a4 + 0x20\n 35267: u64 [a5 + 104] = 0\n 35270: u64 [a5 + 0x50] = a2\n 35273: u64 [a5 + 0x58] = a1\n 35276: a1 = sp + 0x350\n 35280: u64 [a5 + 0x60] = a3\n 35283: ra = 1222, jump @19\n      : @1090 [@dyn 611] (gas: 10)\n 35290: a0 = u64 [sp + 0x50]\n 35293: a3 = u64 [sp + 0x48]\n 35296: a3 = a3 | a0\n 35299: a1 = u64 [sp + 0x80]\n 35303: a0 = a1 <u s1\n 35306: a2 = u64 [sp + 0x78]\n 35309: a0 = 0 if a2 != 0\n 35311: u64 [sp + 0x50] = a3\n 35314: a0 = 0 if a3 != 0\n 35316: jump @1119 if a0 == 0\n      : @1091 (gas: 3)\n 35320: i32 a1 = a1 + 0x20\n 35323: a0 = sp + 0x330\n 35327: ra = 1224, jump @17\n      : @1092 [@dyn 612] (gas: 9)\n 35334: a0 = 0xffffffc0\n 35344: s1 = u64 [sp + 0x70]\n 35347: u64 [sp + 0x48] = a0\n 35350: a0 = s1 <u a0\n 35353: a1 = u64 [sp + 0x88]\n 35357: a0 = 0 if a1 != 0\n 35359: a1 = u64 [sp + 0x58]\n 35362: a0 = 0 if a1 != 0\n 35364: jump @1119 if a0 == 0\n      : @1093 (gas: 16)\n 35368: a2 = sp + 0x300\n 35372: a0 = u64 [a2 + 0x48]\n 35375: u64 [sp + 0x28] = a0\n 35378: a0 = u64 [a2 + 0x40]\n 35381: u64 [sp + 0x30] = a0\n 35384: a0 = u64 [a2 + 0x38]\n 35387: u64 [sp + 0x38] = a0\n 35390: a0 = u64 [a2 + 0x30]\n 35393: u64 [sp + 0x40] = a0\n 35396: i32 a0 = s1 + 0x40\n 35399: u64 [a2 + 40] = 0\n 35402: u64 [a2 + 32] = 0\n 35405: u64 [a2 + 16] = 0xc0\n 35410: a1 = sp + 0x310\n 35414: u64 [a2 + 24] = 0\n 35417: ra = 1226, jump @19\n      : @1094 [@dyn 613] (gas: 4)\n 35424: a0 = s1 + 0xe0\n 35428: a1 = a0 <u s1\n 35431: a3 = u64 [sp + 0x88]\n 35435: t0 = 1228, jump @1204\n      : @1095 [@dyn 614] (gas: 22)\n 35441: a1 = u64 [sp + 0x68]\n 35444: a3 = a3 + a1\n 35447: a1 = a3 <u a1\n 35450: a4 = u64 [sp + 0x60]\n 35453: a4 = a4 + a1\n 35456: a5 = sp + 0x200\n 35460: u64 [a5 + 0xb8] = a2\n 35464: u64 [a5 + 0xb0] = a0\n 35468: a0 = u64 [sp + 0x28]\n 35471: u64 [a5 + 0xe8] = a0\n 35475: a0 = u64 [sp + 0x30]\n 35478: u64 [a5 + 0xe0] = a0\n 35482: a0 = u64 [sp + 0x38]\n 35485: u64 [a5 + 0xd8] = a0\n 35489: a0 = u64 [sp + 0x40]\n 35492: u64 [a5 + 0xd0] = a0\n 35496: u64 [a5 + 0xc0] = a3\n 35500: a0 = sp + 0x2f0\n 35504: a1 = sp + 0x2d0\n 35508: a2 = sp + 0x2b0\n 35512: u64 [a5 + 0xc8] = a4\n 35516: ra = 1230, jump @1069\n      : @1096 [@dyn 615] (gas: 3)\n 35522: a1 = u64 [sp + 0x80]\n 35526: a0 = u64 [sp + 0x48]\n 35529: t0 = 1232, jump @1200\n      : @1097 [@dyn 616] (gas: 1)\n 35535: jump @1119 if a0 == 0\n      : @1098 (gas: 11)\n 35539: a0 = u64 [sp + 0x308]\n 35543: u64 [sp + 0x30] = a0\n 35546: a0 = u64 [sp + 0x300]\n 35550: u64 [sp + 0x38] = a0\n 35553: a0 = u64 [sp + 0x2f8]\n 35557: u64 [sp + 0x40] = a0\n 35560: a0 = u64 [sp + 0x2f0]\n 35564: u64 [sp + 0x48] = a0\n 35567: i32 a1 = a1 + 0x40\n 35570: a0 = sp + 0x290\n 35574: ra = 1234, jump @17\n      : @1099 [@dyn 617] (gas: 8)\n 35581: s1 = 0xffffffa0\n 35591: a5 = u64 [sp + 0x70]\n 35594: a0 = a5 <u s1\n 35597: a1 = u64 [sp + 0x88]\n 35601: a0 = 0 if a1 != 0\n 35603: a1 = u64 [sp + 0x58]\n 35606: a0 = 0 if a1 != 0\n 35608: jump @1119 if a0 == 0\n      : @1100 (gas: 12)\n 35612: a2 = u64 [sp + 0x2a8]\n 35616: a1 = u64 [sp + 0x2a0]\n 35620: a3 = u64 [sp + 0x298]\n 35624: a4 = u64 [sp + 0x290]\n 35628: i32 a0 = a5 + 0x60\n 35631: a5 = sp + 0x200\n 35635: u64 [a5 + 0x70] = a4\n 35638: u64 [a5 + 0x78] = a3\n 35641: u64 [a5 + 0x80] = a1\n 35645: a1 = sp + 0x270\n 35649: u64 [a5 + 0x88] = a2\n 35653: ra = 1236, jump @19\n      : @1101 [@dyn 618] (gas: 7)\n 35660: a1 = u64 [sp + 0x80]\n 35664: a0 = a1 <u s1\n 35667: a2 = u64 [sp + 0x78]\n 35670: a0 = 0 if a2 != 0\n 35672: a2 = u64 [sp + 0x50]\n 35675: a0 = 0 if a2 != 0\n 35677: jump @1119 if a0 == 0\n      : @1102 (gas: 3)\n 35681: i32 a1 = a1 + 0x60\n 35684: a0 = sp + 0x250\n 35688: ra = 1238, jump @17\n      : @1103 [@dyn 619] (gas: 9)\n 35695: a0 = 0xffffff80\n 35705: t0 = u64 [sp + 0x70]\n 35708: u64 [sp + 0x28] = a0\n 35711: a0 = t0 <u a0\n 35714: s1 = u64 [sp + 0x88]\n 35718: a0 = 0 if s1 != 0\n 35720: a1 = u64 [sp + 0x58]\n 35723: a0 = 0 if a1 != 0\n 35725: jump @1119 if a0 == 0\n      : @1104 (gas: 51)\n 35729: a0 = u64 [sp + 0x268]\n 35733: u64 [sp + 0x10] = a0\n 35736: a0 = u64 [sp + 0x260]\n 35740: u64 [sp + 0x18] = a0\n 35743: a0 = u64 [sp + 0x48]\n 35746: a2 = a0 <u t0\n 35749: a5 = a0\n 35751: a3 = u64 [sp + 0x40]\n 35754: a1 = a3 ^ s1\n 35757: a0 = a3 <u s1\n 35760: a4 = a3\n 35762: a0 = a2 if a1 == 0\n 35765: t2 = u64 [sp + 0x68]\n 35768: a3 = u64 [sp + 0x38]\n 35771: t1 = a3 - t2\n 35774: a1 = a3\n 35776: a3 = a4 - s1\n 35779: a3 = a3 - a2\n 35782: a4 = a5 - t0\n 35785: ra = a4 + 0xffffffffffffffe0\n 35788: a4 = ra <u a4\n 35791: a5 = a3 + a4\n 35794: a5 = a5 + 0xffffffffffffffff\n 35797: s1 = a5 ^ a3\n 35800: a3 = a5 <u a3\n 35803: a3 = a4 if s1 == 0\n 35806: a4 = a1 <u t2\n 35809: a1 = u64 [sp + 0x60]\n 35812: s1 = u64 [sp + 0x30]\n 35815: s1 = s1 - a1\n 35818: s1 = s1 - a4\n 35821: a4 = t1 <u a0\n 35824: a4 = s1 - a4\n 35827: a2 = sp + 0x200\n 35831: s1 = u64 [a2 + 0x58]\n 35834: a1 = t1 - a0\n 35837: a0 = a1 <u 0x1\n 35840: a4 = a4 - a0\n 35843: a0 = u64 [a2 + 0x50]\n 35846: u64 [sp + 0x8] = a0\n 35849: a1 = a1 + 0xffffffffffffffff\n 35852: a3 = a3 + a1\n 35855: a0 = a3 <u a1\n 35858: a4 = a4 + a0\n 35861: i32 a0 = t0 + 0x80\n 35865: u64 [a2 + 0x30] = ra\n 35868: u64 [a2 + 0x38] = a5\n 35871: u64 [a2 + 0x40] = a3\n 35874: a1 = sp + 0x230\n 35878: u64 [a2 + 0x48] = a4\n 35881: ra = 1240, jump @19\n      : @1105 [@dyn 620] (gas: 19)\n 35888: a0 = u64 [sp + 0x30]\n 35891: u64 [sp + 0x1e8] = a0\n 35895: a0 = u64 [sp + 0x38]\n 35898: u64 [sp + 0x1e0] = a0\n 35902: a0 = u64 [sp + 0x40]\n 35905: u64 [sp + 0x1d8] = a0\n 35909: a0 = u64 [sp + 0x48]\n 35912: u64 [sp + 0x1d0] = a0\n 35916: a0 = u64 [sp + 0x10]\n 35919: u64 [sp + 0x208] = a0\n 35923: a0 = u64 [sp + 0x18]\n 35926: u64 [sp + 0x200] = a0\n 35930: u64 [sp + 0x1f8] = s1\n 35934: a0 = sp + 0x210\n 35938: a1 = sp + 0x1f0\n 35942: a2 = sp + 0x1d0\n 35946: a3 = u64 [sp + 0x8]\n 35949: u64 [sp + 0x1f0] = a3\n 35953: ra = 1242, jump @1069\n      : @1106 [@dyn 621] (gas: 3)\n 35959: a1 = u64 [sp + 0x80]\n 35963: a0 = u64 [sp + 0x28]\n 35966: t0 = 1244, jump @1200\n      : @1107 [@dyn 622] (gas: 1)\n 35972: jump @1119 if a0 == 0\n      : @1108 (gas: 12)\n 35976: a2 = sp + 0x200\n 35980: a0 = u64 [a2 + 0x28]\n 35983: u64 [sp + 0x30] = a0\n 35986: a0 = u64 [a2 + 0x20]\n 35989: u64 [sp + 0x38] = a0\n 35992: a0 = u64 [a2 + 0x18]\n 35995: u64 [sp + 0x40] = a0\n 35998: a0 = u64 [a2 + 0x10]\n 36001: u64 [sp + 0x48] = a0\n 36004: i32 a1 = a1 + 0x80\n 36008: a0 = sp + 0x1b0\n 36012: ra = 1246, jump @17\n      : @1109 [@dyn 623] (gas: 9)\n 36019: a0 = 0xffffff60\n 36029: t0 = u64 [sp + 0x70]\n 36032: u64 [sp + 0x28] = a0\n 36035: a0 = t0 <u a0\n 36038: s1 = u64 [sp + 0x88]\n 36042: a0 = 0 if s1 != 0\n 36044: a1 = u64 [sp + 0x58]\n 36047: a0 = 0 if a1 != 0\n 36049: jump @1119 if a0 == 0\n      : @1110 (gas: 51)\n 36053: a0 = u64 [sp + 0x1c8]\n 36057: u64 [sp + 0x10] = a0\n 36060: a0 = u64 [sp + 0x1c0]\n 36064: u64 [sp + 0x18] = a0\n 36067: a0 = u64 [sp + 0x48]\n 36070: a2 = a0 <u t0\n 36073: a5 = a0\n 36075: a3 = u64 [sp + 0x40]\n 36078: a1 = a3 ^ s1\n 36081: a0 = a3 <u s1\n 36084: a4 = a3\n 36086: a0 = a2 if a1 == 0\n 36089: t2 = u64 [sp + 0x68]\n 36092: a3 = u64 [sp + 0x38]\n 36095: t1 = a3 - t2\n 36098: a1 = a3\n 36100: a3 = a4 - s1\n 36103: a3 = a3 - a2\n 36106: a4 = a5 - t0\n 36109: ra = a4 + 0xffffffffffffffe0\n 36112: a4 = ra <u a4\n 36115: a5 = a3 + a4\n 36118: a5 = a5 + 0xffffffffffffffff\n 36121: s1 = a5 ^ a3\n 36124: a3 = a5 <u a3\n 36127: a3 = a4 if s1 == 0\n 36130: a4 = a1 <u t2\n 36133: a1 = u64 [sp + 0x60]\n 36136: s1 = u64 [sp + 0x30]\n 36139: s1 = s1 - a1\n 36142: s1 = s1 - a4\n 36145: a4 = t1 <u a0\n 36148: s1 = s1 - a4\n 36151: a1 = u64 [sp + 0x1b8]\n 36155: u64 [sp] = a1\n 36157: a1 = t1 - a0\n 36160: a0 = a1 <u 0x1\n 36163: s1 = s1 - a0\n 36166: a0 = u64 [sp + 0x1b0]\n 36170: u64 [sp + 0x8] = a0\n 36173: a1 = a1 + 0xffffffffffffffff\n 36176: a3 = a3 + a1\n 36179: a0 = a3 <u a1\n 36182: s1 = s1 + a0\n 36185: i32 a0 = t0 + 0xa0\n 36189: u64 [sp + 0x190] = ra\n 36193: u64 [sp + 0x198] = a5\n 36197: u64 [sp + 0x1a0] = a3\n 36201: a1 = sp + 0x190\n 36205: u64 [sp + 0x1a8] = s1\n 36209: ra = 1248, jump @19\n      : @1111 [@dyn 624] (gas: 20)\n 36216: a0 = u64 [sp + 0x30]\n 36219: u64 [sp + 0x148] = a0\n 36223: a0 = u64 [sp + 0x38]\n 36226: u64 [sp + 0x140] = a0\n 36230: a0 = u64 [sp + 0x40]\n 36233: u64 [sp + 0x138] = a0\n 36237: a0 = u64 [sp + 0x48]\n 36240: u64 [sp + 0x130] = a0\n 36244: a0 = u64 [sp + 0x10]\n 36247: u64 [sp + 0x168] = a0\n 36251: a0 = u64 [sp + 0x18]\n 36254: u64 [sp + 0x160] = a0\n 36258: a0 = u64 [sp]\n 36260: u64 [sp + 0x158] = a0\n 36264: a0 = sp + 0x170\n 36268: a1 = sp + 0x150\n 36272: a2 = sp + 0x130\n 36276: a3 = u64 [sp + 0x8]\n 36279: u64 [sp + 0x150] = a3\n 36283: ra = 1250, jump @1069\n      : @1112 [@dyn 625] (gas: 3)\n 36289: a1 = u64 [sp + 0x80]\n 36293: a0 = u64 [sp + 0x28]\n 36296: t0 = 1252, jump @1200\n      : @1113 [@dyn 626] (gas: 1)\n 36302: jump @1119 if a0 == 0\n      : @1114 (gas: 10)\n 36306: a0 = u64 [sp + 0x188]\n 36310: u64 [sp + 0x48] = a0\n 36313: a0 = u64 [sp + 0x180]\n 36317: u64 [sp + 0x50] = a0\n 36320: a0 = u64 [sp + 0x178]\n 36324: u64 [sp + 0x78] = a0\n 36327: s1 = u64 [sp + 0x170]\n 36331: i32 a1 = a1 + 0xa0\n 36335: a0 = sp + 0x110\n 36339: ra = 1254, jump @17\n      : @1115 [@dyn 627] (gas: 8)\n 36346: a0 = 0xffffff40\n 36356: t0 = u64 [sp + 0x70]\n 36359: a0 = t0 <u a0\n 36362: a3 = u64 [sp + 0x88]\n 36366: a0 = 0 if a3 != 0\n 36368: a1 = u64 [sp + 0x58]\n 36371: a0 = 0 if a1 != 0\n 36373: jump @1119 if a0 == 0\n      : @1116 (gas: 48)\n 36377: a0 = u64 [sp + 0x128]\n 36381: u64 [sp + 0x80] = a0\n 36385: a1 = s1 <u t0\n 36388: a4 = u64 [sp + 0x78]\n 36391: a2 = a4 ^ a3\n 36394: a0 = a4 <u a3\n 36397: a0 = a1 if a2 == 0\n 36400: a2 = a4 - a3\n 36403: a3 = a2 - a1\n 36406: a2 = s1 - t0\n 36409: t1 = a2 + 0xffffffffffffffe0\n 36412: a4 = t1 <u a2\n 36415: a2 = a3 + a4\n 36418: a2 = a2 + 0xffffffffffffffff\n 36421: a5 = a2 ^ a3\n 36424: a3 = a2 <u a3\n 36427: a3 = a4 if a5 == 0\n 36430: a4 = u64 [sp + 0x120]\n 36434: u64 [sp + 0x88] = a4\n 36438: a5 = u64 [sp + 0x68]\n 36441: a4 = u64 [sp + 0x50]\n 36444: a1 = a4 - a5\n 36447: a5 = a4 <u a5\n 36450: u64 [sp + 0x58] = s1\n 36453: s1 = u64 [sp + 0x60]\n 36456: a4 = u64 [sp + 0x48]\n 36459: s1 = a4 - s1\n 36462: s1 = s1 - a5\n 36465: a5 = a1 <u a0\n 36468: s1 = s1 - a5\n 36471: a4 = u64 [sp + 0x118]\n 36475: u64 [sp + 0x60] = a4\n 36478: a4 = a1 - a0\n 36481: a0 = a4 <u 0x1\n 36484: s1 = s1 - a0\n 36487: a0 = u64 [sp + 0x110]\n 36491: u64 [sp + 0x68] = a0\n 36494: a4 = a4 + 0xffffffffffffffff\n 36497: a3 = a3 + a4\n 36500: a0 = a3 <u a4\n 36503: s1 = s1 + a0\n 36506: i32 a0 = t0 + 0xc0\n 36510: u64 [sp + 0xf0] = t1\n 36514: u64 [sp + 0xf8] = a2\n 36518: u64 [sp + 0x100] = a3\n 36522: a1 = sp + 0xf0\n 36526: u64 [sp + 0x108] = s1\n 36530: ra = 1256, jump @19\n      : @1117 [@dyn 628] (gas: 20)\n 36537: a0 = u64 [sp + 0x48]\n 36540: u64 [sp + 0xa8] = a0\n 36544: a0 = u64 [sp + 0x50]\n 36547: u64 [sp + 0xa0] = a0\n 36551: a0 = u64 [sp + 0x78]\n 36554: u64 [sp + 0x98] = a0\n 36558: a0 = u64 [sp + 0x58]\n 36561: u64 [sp + 0x90] = a0\n 36565: a0 = u64 [sp + 0x80]\n 36569: u64 [sp + 0xc8] = a0\n 36573: a0 = u64 [sp + 0x88]\n 36577: u64 [sp + 0xc0] = a0\n 36581: a0 = u64 [sp + 0x60]\n 36584: u64 [sp + 0xb8] = a0\n 36588: a0 = sp + 0xd0\n 36592: a1 = sp + 0xb0\n 36596: a2 = sp + 0x90\n 36600: a3 = u64 [sp + 0x68]\n 36603: u64 [sp + 0xb0] = a3\n 36607: ra = 1258, jump @1069\n      : @1118 [@dyn 629] (gas: 16)\n 36613: a0 = u64 [sp + 0xe0]\n 36617: a1 = u64 [sp + 0xe8]\n 36621: a2 = u64 [sp + 0xd0]\n 36625: a3 = u64 [sp + 0xd8]\n 36629: a4 = u64 [sp + 0x20]\n 36632: u64 [a4 + 0x10] = a0\n 36635: u64 [a4 + 0x18] = a1\n 36638: u64 [a4] = a2\n 36640: u64 [a4 + 0x8] = a3\n 36643: sp = s0 + 0xfffffffffffffc30\n 36647: a0 = sp + 0x300\n 36651: ra = u64 [a0 + 0xc8]\n 36655: s0 = u64 [a0 + 0xc0]\n 36659: s1 = u64 [a0 + 0xb8]\n 36663: sp = sp + 0x3d0\n 36667: ret\n      : @1119 (gas: 1)\n 36669: trap\n      : @1120 (gas: 33)\n 36670: sp = sp + 0xffffffffffffffa0\n 36673: u64 [sp + 0x58] = ra\n 36676: u64 [sp + 0x50] = s0\n 36679: u64 [sp + 0x48] = s1\n 36682: s0 = sp + 0x60\n 36685: sp = sp & 0xfffffffffffffff0\n 36688: a2 = u64 [a1 + 0x10]\n 36691: a5 = u64 [a1 + 0x8]\n 36694: a4 = u64 [a1]\n 36696: a1 = u64 [a1 + 0x18]\n 36699: t0 = a2 << 0x3f\n 36702: a3 = a5 >> 0x1\n 36705: t0 = a3 | t0\n 36708: a3 = a1 << 0x3f\n 36711: a2 = a2 >> 0x1\n 36714: a3 = a3 | a2\n 36717: a5 = a5 << 0x3f\n 36720: a2 = a4 >> 0x1\n 36723: a5 = a5 | a2\n 36726: t1 = a1 >> 0x1\n 36729: a4 = a4 & 0x1\n 36732: a1 = -a4\n 36734: s1 = a4 <u 0x1\n 36737: a2 = a5 & 0x7f\n 36740: t2 = a1 & a3\n 36743: a3 = a1 & t0\n 36746: a2 = a5 if a4 != 0\n 36749: a4 = a1 & t1\n 36752: a1 = a2 <u 0x20\n 36755: a1 = 0 if a3 != 0\n 36757: a5 = t2 | a4\n 36760: a1 = 0 if a5 != 0\n 36762: jump @1123 if s1 != a1\n      : @1121 (gas: 5)\n 36765: u64 [a0] = a2\n 36767: u64 [a0 + 0x8] = a3\n 36770: u64 [a0 + 0x10] = t2\n 36773: u64 [a0 + 0x18] = a4\n 36776: t0 = 1260, jump @1210\n      : @1122 [@dyn 630] (gas: 1)\n 36782: ret\n      : @1123 (gas: 1)\n 36784: t0 = 1262, jump @1205\n      : @1124 [@dyn 631] (gas: 1)\n 36790: ra = 1264, jump @19\n      : @1125 [@dyn 632] (gas: 7)\n 36797: u64 [sp + 24] = 0\n 36800: u64 [sp + 16] = 0\n 36803: u64 [sp + 0] = 0x22\n 36806: a0 = 0x4\n 36809: a1 = sp\n 36811: u64 [sp + 8] = 0\n 36814: ra = 1266, jump @19\n      : @1126 [@dyn 633] (gas: 2)\n 36821: a1 = i32 [0x2005c]\n 36826: jump @1128 if a1 >u 63\n      : @1127 (gas: 2)\n 36830: u32 [0x2005c] = 0x40\n 36836: fallthrough\n      : @1128 (gas: 7)\n 36837: a1 = 0x20070\n 36842: i32 a1 = a1 + 0\n 36844: a0 = 0x1\n 36847: a2 = 0x24\n 36850: ra = 0x4f4\n 36854: ecalli 7 // 'seal_return'\n 36856: fallthrough\n      : @1129 [@dyn 634] (gas: 31)\n 36857: sp = sp + 0xfffffffffffffe20\n 36861: u64 [sp + 0x1d8] = ra\n 36865: u64 [sp + 0x1d0] = s0\n 36869: u64 [sp + 0x1c8] = s1\n 36873: s0 = sp + 0x1e0\n 36877: sp = sp & 0xffffffffffffffe0\n 36880: s1 = sp\n 36882: u64 [s1 + 0x10] = a0\n 36885: a0 = u64 [a2 + 0x10]\n 36888: u64 [s1 + 0x98] = a0\n 36892: a0 = u64 [a2]\n 36894: u64 [s1 + 0x80] = a0\n 36898: a0 = u64 [a2 + 0x18]\n 36901: u64 [s1 + 0x90] = a0\n 36905: a0 = u64 [a2 + 0x8]\n 36908: u64 [s1 + 0x88] = a0\n 36912: a0 = u64 [a1 + 0x18]\n 36915: a2 = u64 [a1 + 0x10]\n 36918: a3 = u64 [a1 + 0x8]\n 36921: a1 = u64 [a1]\n 36923: u64 [s1 + 0x70] = a0\n 36926: u64 [s1 + 0x1b8] = a0\n 36930: u64 [s1 + 0x68] = a2\n 36933: u64 [s1 + 0x1b0] = a2\n 36937: u64 [s1 + 0x60] = a3\n 36940: u64 [s1 + 0x1a8] = a3\n 36944: u64 [s1 + 0x38] = a1\n 36947: u64 [s1 + 0x1a0] = a1\n 36951: a0 = s1 + 0x180\n 36955: a1 = s1 + 0x1a0\n 36959: ra = 1270, jump @21\n      : @1130 [@dyn 635] (gas: 16)\n 36966: a4 = s1 + 0x100\n 36970: a0 = u64 [a4 + 0x98]\n 36974: a1 = u64 [a4 + 0x90]\n 36978: a2 = u64 [a4 + 0x88]\n 36982: a3 = u64 [a4 + 0x80]\n 36986: u64 [s1 + 0x30] = a0\n 36989: u64 [a4 + 0x58] = a0\n 36992: u64 [s1 + 0x28] = a1\n 36995: u64 [a4 + 0x50] = a1\n 36998: u64 [s1 + 0x20] = a2\n 37001: u64 [a4 + 0x48] = a2\n 37004: a0 = s1 + 0x160\n 37008: a1 = s1 + 0x140\n 37012: u64 [s1 + 0x78] = a3\n 37015: u64 [a4 + 0x40] = a3\n 37018: ra = 1272, jump @1120\n      : @1131 [@dyn 636] (gas: 12)\n 37024: a0 = u64 [s1 + 0x80]\n 37028: a1 = u64 [s1 + 0x90]\n 37032: a2 = u64 [s1 + 0x88]\n 37036: a2 = a2 | a1\n 37039: a3 = u64 [s1 + 0x98]\n 37043: a1 = a0 | a3\n 37046: a1 = a1 | a2\n 37049: a1 = a1 >> 0x20\n 37052: a2 = a2 | a3\n 37055: a2 = a2 << 0x20\n 37058: a1 = a1 | a2\n 37061: jump @1148 if a1 != 0\n      : @1132 (gas: 15)\n 37065: a5 = s1 + 0x100\n 37069: a4 = u64 [a5 + 0x78]\n 37072: a2 = u64 [a5 + 0x70]\n 37075: a1 = u64 [a5 + 0x68]\n 37078: a3 = u64 [a5 + 0x60]\n 37081: u64 [s1 + 0x40] = a3\n 37084: u64 [a5 + 0x20] = a3\n 37087: u64 [s1 + 0x50] = a1\n 37090: u64 [a5 + 0x28] = a1\n 37093: u64 [s1 + 0x48] = a2\n 37096: u64 [a5 + 0x30] = a2\n 37099: a1 = s1 + 0x120\n 37103: u64 [s1 + 0x58] = a4\n 37106: u64 [a5 + 0x38] = a4\n 37109: ra = 1274, jump @19\n      : @1133 [@dyn 637] (gas: 3)\n 37116: a3 = u64 [s1 + 0x78]\n 37119: a0 = a3 & 0x1\n 37122: jump @1137 if a0 != 0\n      : @1134 (gas: 10)\n 37126: a0 = u64 [s1 + 0x90]\n 37130: a1 = u64 [s1 + 0x98]\n 37134: a0 = a0 | a1\n 37137: a1 = 0xffffffe0\n 37147: a4 = u64 [s1 + 0x80]\n 37151: a1 = a4 <u a1\n 37154: a2 = u64 [s1 + 0x88]\n 37158: a1 = 0 if a2 != 0\n 37160: a1 = 0 if a0 != 0\n 37162: jump @1148 if a1 == 0\n      : @1135 (gas: 11)\n 37166: a1 = a3 & 0xffffffffffffff00\n 37170: i32 a0 = a4 + 0x20\n 37173: a3 = u64 [s1 + 0x20]\n 37176: u64 [s1 + 0xa8] = a3\n 37180: u64 [s1 + 0xa0] = a1\n 37184: a1 = u64 [s1 + 0x28]\n 37187: u64 [s1 + 0xb0] = a1\n 37191: a1 = s1 + 0xa0\n 37195: a3 = u64 [s1 + 0x30]\n 37198: u64 [s1 + 0xb8] = a3\n 37202: ra = 1276, jump @19\n      : @1136 [@dyn 638] (gas: 26)\n 37209: ra = 0\n 37211: t1 = 0\n 37213: t0 = 0\n 37215: a0 = u64 [s1 + 0x48]\n 37218: a1 = u64 [s1 + 0x40]\n 37221: a0 = a0 | a1\n 37224: a1 = u64 [s1 + 0x58]\n 37227: a2 = u64 [s1 + 0x50]\n 37230: a1 = a1 | a2\n 37233: a0 = a0 | a1\n 37236: a1 = u64 [s1 + 0x80]\n 37240: a3 = a1 + 0x20\n 37243: a1 = a3 <u a1\n 37246: a2 = u64 [s1 + 0x88]\n 37250: a4 = a2 + a1\n 37253: a2 = a4 <u a2\n 37256: a2 = a1 if a1 == 0\n 37259: a1 = u64 [s1 + 0x98]\n 37263: a5 = a1 + a2\n 37266: a1 = a5 <u a1\n 37269: a2 = u64 [s1 + 0x90]\n 37273: a1 = a1 + a2\n 37276: u64 [s1 + 0x38] = a1\n 37279: a0 = a0 >u 0\n 37281: t2 = a0 << 0x5\n 37284: jump @1147\n      : @1137 (gas: 12)\n 37287: a0 = u64 [s1 + 0x38]\n 37290: a2 = s1 + 0x100\n 37294: u64 [a2] = a0\n 37296: a0 = u64 [s1 + 0x60]\n 37299: u64 [a2 + 0x8] = a0\n 37302: a0 = u64 [s1 + 0x68]\n 37305: u64 [a2 + 0x10] = a0\n 37308: a1 = s1 + 0x100\n 37312: a0 = u64 [s1 + 0x70]\n 37315: u64 [a2 + 0x18] = a0\n 37318: a0 = 0\n 37320: ra = 1278, jump @19\n      : @1138 [@dyn 639] (gas: 6)\n 37327: a0 = sp + 0xffffffffffffffe0\n 37330: a0 = a0 & 0xffffffffffffffe0\n 37333: u64 [s1 + 0x30] = a0\n 37336: sp = a0\n 37338: a1 = i32 [0x2005c]\n 37343: jump @1140 if a1 >u 31\n      : @1139 (gas: 2)\n 37347: u32 [0x2005c] = 0x20\n 37353: fallthrough\n      : @1140 (gas: 49)\n 37354: a0 = sp + 0xffffffffffffffe0\n 37357: a2 = a0 & 0xffffffffffffffe0\n 37360: u64 [s1 + 0x78] = a2\n 37363: sp = a2\n 37365: a0 = 0x20070\n 37370: i32 a0 = a0 + 0\n 37372: i32 a2 = a2 + 0\n 37374: a1 = 0x20\n 37377: ecalli 6 // 'hash_keccak_256'\n 37379: a5 = 0\n 37381: ra = 0\n 37383: t1 = 0\n 37385: t0 = 0\n 37387: a0 = u64 [s1 + 0x80]\n 37391: a1 = a0 + 0x20\n 37394: u64 [s1 + 0x28] = a1\n 37397: a0 = a1 <u a0\n 37400: a1 = u64 [s1 + 0x88]\n 37404: a2 = a1 + a0\n 37407: u64 [s1 + 0x20] = a2\n 37410: a1 = a2 <u a1\n 37413: a1 = a0 if a0 == 0\n 37416: a0 = u64 [s1 + 0x98]\n 37420: a1 = a1 + a0\n 37423: u64 [s1 + 0x18] = a1\n 37426: a0 = a1 <u a0\n 37429: a1 = u64 [s1 + 0x90]\n 37433: a0 = a0 + a1\n 37436: u64 [s1 + 0x38] = a0\n 37439: a3 = u64 [s1 + 0x78]\n 37442: a0 = u64 [a3 + 0x18]\n 37445: a1 = u64 [a3 + 0x10]\n 37448: a2 = u64 [a3 + 0x8]\n 37451: a3 = u64 [a3]\n 37453: a0 = reverse a0\n 37455: a4 = reverse a1\n 37457: t2 = reverse a2\n 37459: a2 = reverse a3\n 37461: a1 = u64 [s1 + 0x30]\n 37464: a3 = a2\n 37466: u64 [a1 + 0x18] = a2\n 37469: a2 = t2\n 37471: u64 [s1 + 0x60] = a2\n 37474: u64 [a1 + 0x10] = a2\n 37477: u64 [s1 + 0x70] = a4\n 37480: u64 [a1 + 0x8] = a4\n 37483: a2 = a0\n 37485: u64 [a1] = a0\n 37487: fallthrough\n      : @1141 (gas: 19)\n 37488: u64 [s1 + 0x68] = a3\n 37491: u64 [s1 + 0x78] = a2\n 37494: a0 = u64 [s1 + 0x40]\n 37497: a0 = a5 <u a0\n 37500: a2 = u64 [s1 + 0x50]\n 37503: a3 = ra ^ a2\n 37506: a2 = ra <u a2\n 37509: a2 = a0 if a3 == 0\n 37512: a4 = u64 [s1 + 0x48]\n 37515: a0 = t1 <u a4\n 37518: a3 = u64 [s1 + 0x58]\n 37521: t2 = a5\n 37523: a5 = t0 ^ a3\n 37526: a3 = t0 <u a3\n 37529: a3 = a0 if a5 == 0\n 37532: a0 = t1 ^ a4\n 37535: a0 = a0 | a5\n 37538: a3 = a2 if a0 == 0\n 37541: jump @1146 if a3 == 0\n      : @1142 (gas: 6)\n 37545: a0 = s1 + 0xe0\n 37549: u64 [s1 + 0x98] = t0\n 37553: u64 [s1 + 0x90] = t1\n 37557: u64 [s1 + 0x88] = ra\n 37561: u64 [s1 + 0x80] = t2\n 37565: ra = 1280, jump @21\n      : @1143 [@dyn 640] (gas: 30)\n 37572: a1 = u64 [s1 + 0x28]\n 37575: a0 = u64 [s1 + 0x80]\n 37579: a0 = a0 + a1\n 37582: a1 = a0 <u a1\n 37585: a4 = u64 [s1 + 0x20]\n 37588: a2 = u64 [s1 + 0x88]\n 37592: a2 = a2 + a4\n 37595: a2 = a2 + a1\n 37598: a3 = a2 ^ a4\n 37601: a4 = a2 <u a4\n 37604: a4 = a1 if a3 == 0\n 37607: a3 = u64 [s1 + 0x18]\n 37610: a1 = u64 [s1 + 0x90]\n 37614: a1 = a1 + a3\n 37617: t0 = a1 <u a3\n 37620: a5 = u64 [s1 + 0x38]\n 37623: a3 = u64 [s1 + 0x98]\n 37627: a5 = a5 + a3\n 37630: a3 = a5 + t0\n 37633: a4 = a4 + a1\n 37636: a1 = a4 <u a1\n 37639: a1 = a1 + a3\n 37642: a1 = a1 | a2\n 37645: a2 = a0 | a4\n 37648: a2 = a2 | a1\n 37651: a1 = a1 | a4\n 37654: a2 = a2 >> 0x20\n 37657: a1 = a1 << 0x20\n 37660: a1 = a1 | a2\n 37663: jump @1148 if a1 != 0\n      : @1144 (gas: 10)\n 37667: a2 = u64 [s1 + 0xf8]\n 37671: a1 = u64 [s1 + 0xf0]\n 37675: a3 = u64 [s1 + 0xe8]\n 37679: a4 = u64 [s1 + 0xe0]\n 37683: u64 [s1 + 0xc0] = a4\n 37687: u64 [s1 + 0xc8] = a3\n 37691: u64 [s1 + 0xd0] = a1\n 37695: a1 = s1 + 0xc0\n 37699: u64 [s1 + 0xd8] = a2\n 37703: ra = 1282, jump @19\n      : @1145 [@dyn 641] (gas: 37)\n 37710: a5 = u64 [s1 + 0x78]\n 37713: a5 = a5 + 0x1\n 37716: a0 = a5 <u 0x1\n 37719: a3 = u64 [s1 + 0x70]\n 37722: a3 = a3 + a0\n 37725: a0 = a5 | a3\n 37728: a0 = a0 <u 0x1\n 37731: a1 = u64 [s1 + 0x60]\n 37734: t1 = a1 + a0\n 37737: a1 = t1 <u a1\n 37740: a0 = u64 [s1 + 0x68]\n 37743: a0 = a0 + a1\n 37746: a1 = u64 [s1 + 0x80]\n 37750: t2 = a1 + 0x20\n 37753: a2 = t2 <u a1\n 37756: a1 = u64 [s1 + 0x88]\n 37760: ra = a1 + a2\n 37763: a4 = ra <u a1\n 37766: a4 = a2 if a2 == 0\n 37769: a1 = u64 [s1 + 0x90]\n 37773: a4 = a4 + a1\n 37776: a2 = a4 <u a1\n 37779: t0 = u64 [s1 + 0x98]\n 37783: t0 = t0 + a2\n 37786: u64 [s1 + 0x70] = a3\n 37789: a1 = u64 [s1 + 0x30]\n 37792: u64 [a1 + 0x8] = a3\n 37795: a2 = a5\n 37797: u64 [a1] = a5\n 37799: a5 = t1\n 37801: u64 [a1 + 0x10] = a5\n 37804: a3 = a0\n 37806: u64 [a1 + 0x18] = a0\n 37809: u64 [s1 + 0x60] = a5\n 37812: a5 = t2\n 37814: t1 = a4\n 37816: jump @1141\n      : @1146 (gas: 4)\n 37819: a3 = u64 [s1 + 0x28]\n 37822: a4 = u64 [s1 + 0x20]\n 37825: a5 = u64 [s1 + 0x18]\n 37828: fallthrough\n      : @1147 (gas: 26)\n 37829: a0 = a3 + t2\n 37832: a1 = a0 <u a3\n 37835: a2 = a4 + ra\n 37838: a2 = a2 + a1\n 37841: a3 = a2 ^ a4\n 37844: a4 = a2 <u a4\n 37847: a4 = a1 if a3 == 0\n 37850: a1 = a5 + t1\n 37853: a4 = a4 + a1\n 37856: a3 = a4 <u a1\n 37859: a1 = a1 <u a5\n 37862: a5 = u64 [s1 + 0x38]\n 37865: a5 = a5 + t0\n 37868: a1 = a1 + a5\n 37871: a1 = a1 + a3\n 37874: a3 = u64 [s1 + 0x10]\n 37877: u64 [a3] = a0\n 37879: u64 [a3 + 0x8] = a2\n 37882: u64 [a3 + 0x10] = a4\n 37885: u64 [a3 + 0x18] = a1\n 37888: sp = s0 + 0xfffffffffffffe20\n 37892: ra = u64 [sp + 0x1d8]\n 37896: s0 = u64 [sp + 0x1d0]\n 37900: s1 = u64 [sp + 0x1c8]\n 37904: sp = sp + 0x1e0\n 37908: ret\n      : @1148 (gas: 1)\n 37910: trap\n      : @1149 [export #0: 'call'] (gas: 2)\n 37911: a0 = 0\n 37913: ra = 1284, jump @32\n      : @1150 [@dyn 642] [export #1: 'deploy'] (gas: 2)\n 37920: a0 = 0x1\n 37923: ra = 1286, jump @32\n      : @1151 [@dyn 643] (gas: 22)\n 37930: a4 = u64 [s1 + 0x1b8]\n 37934: a2 = a4 <u 0x80\n 37938: a3 = u64 [s1 + 0x160]\n 37942: a0 = a3 if a2 != 0\n 37945: a5 = u64 [s1 + 0x168]\n 37949: a3 = u64 [s1 + 0x178]\n 37953: a3 = a3 | a5\n 37956: a3 = a1 if a2 == 0\n 37959: a0 = 0xffffffffffffffff if a4 == 0\n 37962: a3 = 0xffffffffffffffff if a4 == 0\n 37965: a5 = 0 if a2 == 0\n 37967: a4 = u64 [s1 + 0x170]\n 37971: a4 = 0 if a2 == 0\n 37973: a1 = u64 [s1 + 0x198]\n 37977: a1 = a1 & ~a3\n 37980: a2 = u64 [s1 + 0x1a0]\n 37984: a0 = a2 & ~a0\n 37987: a2 = u64 [s1 + 0x1a8]\n 37991: a2 = a2 & ~a4\n 37994: a3 = u64 [s1 + 0x1b0]\n 37998: a3 = a3 & ~a5\n 38001: jump [t0]\n      : @1152 (gas: 38)\n 38003: t1 = u64 [s1 + 0x168]\n 38007: t1 = t1 + 0x1\n 38010: a0 = t1 <u 0x1\n 38013: t2 = u64 [s1 + 0x160]\n 38017: t2 = t2 + a0\n 38020: a0 = t1 | t2\n 38023: a0 = a0 <u 0x1\n 38026: a1 = u64 [s1 + 0x170]\n 38030: ra = a1 + a0\n 38033: a1 = ra <u a1\n 38036: a0 = u64 [s1 + 0x188]\n 38040: a0 = a0 + a1\n 38043: a1 = u64 [s1 + 0x1b8]\n 38047: a2 = a1 + 0x20\n 38050: u64 [s1 + 0x188] = a2\n 38054: a3 = a2 <u a1\n 38057: a1 = u64 [s1 + 0x158]\n 38061: a2 = a1 + a3\n 38064: u64 [s1 + 0x168] = a2\n 38068: a4 = a2 <u a1\n 38071: a4 = a3 if a3 == 0\n 38074: a1 = u64 [s1 + 0x1b0]\n 38078: a3 = a1 + a4\n 38081: a4 = a3 <u a1\n 38084: a1 = u64 [s1 + 0x1a8]\n 38088: a1 = a1 + a4\n 38091: u64 [s1 + 0x1a8] = a1\n 38095: a1 = u64 [s1 + 0x198]\n 38099: a4 = a1 + 0x20\n 38102: a5 = a4 <u a1\n 38105: a2 = u64 [s1 + 0x178]\n 38109: a1 = a2 + a5\n 38112: a2 = a1 <u a2\n 38115: a2 = a5 if a5 == 0\n 38118: a5 = u64 [s1 + 0x180]\n 38122: a2 = a2 + a5\n 38125: a5 = a2 <u a5\n 38128: jump [t0]\n      : @1153 (gas: 23)\n 38130: a4 = u64 [s1 + 0x1b8]\n 38134: a2 = a4 <u 0x80\n 38138: a3 = u64 [s1 + 0x170]\n 38142: a1 = a3 if a2 != 0\n 38145: a5 = u64 [s1 + 0x178]\n 38149: a3 = u64 [s1 + 0x188]\n 38153: a3 = a3 | a5\n 38156: a3 = a0 if a2 == 0\n 38159: a1 = 0xffffffffffffffff if a4 == 0\n 38162: a3 = 0xffffffffffffffff if a4 == 0\n 38165: a4 = u64 [s1 + 0x180]\n 38169: a4 = 0 if a2 == 0\n 38171: a5 = 0 if a2 == 0\n 38173: a0 = u64 [s1 + 0x190]\n 38177: a0 = a0 & ~a3\n 38180: a2 = u64 [s1 + 0x1a0]\n 38184: a1 = a2 & ~a1\n 38187: a2 = u64 [s1 + 0x1a8]\n 38191: a2 = a2 & ~a5\n 38194: a3 = u64 [s1 + 0x1b0]\n 38198: a3 = a3 & ~a4\n 38201: a4 = s1 + 0x2938\n 38205: jump [t0]\n      : @1154 (gas: 10)\n 38207: u64 [s1 + 0x178] = a0\n 38211: u64 [s1 + 0x180] = a1\n 38215: a0 = u64 [s1 + 0x170]\n 38219: a0 = a0 | a1\n 38222: u64 [s1 + 0x170] = a0\n 38226: a0 = u64 [s1 + 0x1b8]\n 38230: a2 = a0 + 0xffffffffffffff80\n 38233: a0 = 0xffffffffffffffff\n 38236: a1 = 0xffffffffffffffff\n 38239: jump [t0]\n      : @1155 (gas: 20)\n 38241: a3 = a3 + a4\n 38244: u64 [s1 + 0x188] = a3\n 38248: a3 = a3 << 0x3b\n 38251: a4 = a2 >> 0x5\n 38254: a4 = a4 | a3\n 38257: a0 = u64 [s1 + 0x1a8]\n 38261: t1 = u64 [a0 + 0x18]\n 38264: a2 = a2 << 0x3b\n 38267: a3 = u64 [a0 + 0x10]\n 38270: a1 = a1 >> 0x5\n 38273: a0 = a1 | a2\n 38276: t2 = reverse t1\n 38278: a2 = reverse a3\n 38280: a1 = u64 [s1 + 0x158]\n 38284: a1 = 0 if a5 != 0\n 38286: a3 = u64 [s1 + 0x160]\n 38290: a1 = 0 if a3 != 0\n 38292: a4 = 0 if a1 != 0\n 38294: a0 = 0 if a1 != 0\n 38296: jump [t0]\n      : @1156 (gas: 10)\n 38298: u64 [s1 + 0x170] = a0\n 38302: u64 [s1 + 0x168] = a1\n 38306: a1 = u64 [s1 + 0x160]\n 38310: a0 = a0 | a1\n 38313: u64 [s1 + 0x160] = a0\n 38317: a0 = u64 [s1 + 0x1b8]\n 38321: i32 a2 = a0 + 0xffffffffffffff80\n 38324: a0 = 0xffffffffffffffff\n 38327: a1 = 0xffffffffffffffff\n 38330: jump [t0]\n      : @1157 (gas: 17)\n 38332: a0 = a3 >u 0\n 38334: a1 = a4 >u 0\n 38336: a1 = a0 if a3 != 0\n 38339: a0 = a5 >u 0\n 38341: u64 [s1 + 0x198] = a2\n 38345: a2 = a2 <u 0x20\n 38348: a2 = a2 ^ 0x1\n 38351: u64 [s1 + 0x1a0] = a5\n 38355: a2 = a0 if a5 != 0\n 38358: a5 = s1 + 0x100\n 38362: u64 [a5 + 0xa8] = a3\n 38366: u64 [a5 + 0xb0] = a4\n 38370: a0 = a4 | a3\n 38373: a2 = a1 if a0 != 0\n 38376: a0 = u64 [a5 + 0x28]\n 38379: a0 = a0 <u 0x20\n 38382: jump [t0]\n      : @1158 (gas: 7)\n 38384: a0 = a0 << 0x3b\n 38387: a1 = a0 >> 0x38\n 38390: u64 [s1 + 0x1b8] = a1\n 38394: a2 = 0x80 - a1\n 38398: a0 = 0xffffffffffffffff\n 38401: a1 = 0xffffffffffffffff\n 38404: jump [t0]\n      : @1159 (gas: 24)\n 38406: a4 = u64 [s1 + 0x1b8]\n 38410: a2 = a4 <u 0x80\n 38414: a3 = u64 [s1 + 0x170]\n 38418: a1 = a3 if a2 != 0\n 38421: a5 = u64 [s1 + 0x178]\n 38425: a3 = u64 [s1 + 0x188]\n 38429: a3 = a3 | a5\n 38432: a3 = a0 if a2 == 0\n 38435: a1 = 0xffffffffffffffff if a4 == 0\n 38438: a3 = 0xffffffffffffffff if a4 == 0\n 38441: a4 = u64 [s1 + 0x180]\n 38445: a4 = 0 if a2 == 0\n 38447: a5 = 0 if a2 == 0\n 38449: a0 = u64 [s1 + 0x198]\n 38453: a0 = a0 & ~a3\n 38456: a2 = u64 [s1 + 0x1a0]\n 38460: a1 = a2 & ~a1\n 38463: a2 = u64 [s1 + 0x1a8]\n 38467: a2 = a2 & ~a5\n 38470: a3 = u64 [s1 + 0x1b0]\n 38474: a3 = a3 & ~a4\n 38477: a4 = s1 + 0x2138\n 38481: a5 = a4 + 0x500\n 38485: jump [t0]\n      : @1160 (gas: 17)\n 38487: a2 = u64 [s1 + 0x120]\n 38491: a0 = u64 [a2 + 0x8]\n 38494: a1 = i32 [a2 + 0x10]\n 38497: a2 = u64 [a2]\n 38499: a0 = reverse a0\n 38501: a3 = a0 << 0x20\n 38504: a1 = reverse a1\n 38506: a1 = a1 >> 0x20\n 38509: a3 = a3 | a1\n 38512: a0 = a0 >> 0x20\n 38515: a1 = reverse a2\n 38517: a2 = a1 << 0x20\n 38520: a0 = a0 | a2\n 38523: a1 = a1 >> 0x20\n 38526: a2 = s1 + 0x7ff\n 38530: a2 = a2 + 0x139\n 38534: jump [t0]\n      : @1161 (gas: 9)\n 38536: a0 = a0 + a4\n 38539: a2 = a1 | a5\n 38542: a0 = a0 | a3\n 38545: a2 = a2 | a0\n 38548: a2 = a2 >> 0x20\n 38551: a0 = a0 | a5\n 38554: a0 = a0 << 0x20\n 38557: a0 = a0 | a2\n 38560: jump [t0]\n      : @1162 (gas: 23)\n 38562: a0 = u64 [s1 + 0x130]\n 38566: u64 [s1 + 0x198] = a4\n 38570: a0 = a4 <u a0\n 38573: a4 = a0 ^ 0x1\n 38576: u64 [s1 + 0x178] = a3\n 38580: a4 = 0x1 if a3 != 0\n 38583: u64 [s1 + 0x180] = a2\n 38587: a0 = u64 [s1 + 0x1a0]\n 38591: a0 = a0 | a2\n 38594: a4 = 0x1 if a0 != 0\n 38597: a1 = u64 [s1 + 0x138]\n 38601: a0 = u64 [s1 + 0x1b8]\n 38605: a1 = a1 + a0\n 38608: a3 = u64 [s1 + 0x150]\n 38612: ra = a5 + a3\n 38615: a2 = u64 [s1 + 0x140]\n 38619: a0 = u64 [s1 + 0x1b0]\n 38623: a2 = a2 + a0\n 38626: a0 = u64 [s1 + 0x148]\n 38630: a3 = a5\n 38632: a5 = u64 [s1 + 0x1a8]\n 38636: a0 = a0 + a5\n 38639: jump [t0]\n      : @1163 (gas: 10)\n 38641: a4 = a3 + 0x4\n 38644: a3 = a4 <u a3\n 38647: a5 = a2 + a3\n 38650: a2 = a5 <u a2\n 38653: a2 = a3 if a3 == 0\n 38656: a2 = a2 + a1\n 38659: a1 = a2 <u a1\n 38662: a3 = a0 + a1\n 38665: a0 = u64 [sp + 0x90]\n 38669: jump [t0]\n      : @1164 (gas: 14)\n 38671: u64 [s1 + 416] = 0\n 38675: a3 = u64 [s1 + 0x188]\n 38679: a0 = u64 [a3 + 0x18]\n 38682: a1 = u64 [a3 + 0x10]\n 38685: a2 = u64 [a3 + 0x8]\n 38688: a3 = u64 [a3]\n 38690: t1 = reverse a0\n 38692: t2 = reverse a1\n 38694: ra = reverse a2\n 38696: a2 = 0\n 38698: a4 = u64 [s1 + 0x198]\n 38702: a0 = reverse a3\n 38704: a3 = 0\n 38706: jump [t0]\n      : @1165 (gas: 6)\n 38708: u64 [s1 + 0x188] = a0\n 38712: u64 [s1 + 0x170] = a1\n 38716: a0 = 0xffffffffffffffff\n 38719: a1 = 0xffffffffffffffff\n 38722: a2 = u64 [s1 + 0x1b8]\n 38726: jump [t0]\n      : @1166 (gas: 8)\n 38728: t1 = u64 [a0 + 0x18]\n 38731: a2 = a2 << 0x3b\n 38734: a3 = u64 [a0 + 0x10]\n 38737: a1 = a1 >> 0x5\n 38740: a0 = a1 | a2\n 38743: t2 = reverse t1\n 38745: a2 = reverse a3\n 38747: jump [t0]\n      : @1167 (gas: 8)\n 38749: a0 = a0 + a4\n 38752: a3 = a3 + a1\n 38755: a5 = a3 <u a1\n 38758: a0 = a0 + a5\n 38761: ra = u64 [s1 + 0x180]\n 38765: ra = ra + a3\n 38768: a3 = ra <u a3\n 38771: jump [t0]\n      : @1168 (gas: 5)\n 38773: u64 [s1 + 0x1b8] = a1\n 38777: i32 a2 = 0x80 - a1\n 38781: a0 = 0xffffffffffffffff\n 38784: a1 = 0xffffffffffffffff\n 38787: jump [t0]\n      : @1169 (gas: 8)\n 38789: a1 = sp + 0xffffffffffffffe0\n 38792: a1 = a1 & 0xffffffffffffffe0\n 38795: u64 [s1 + 0x188] = a1\n 38799: sp = a1\n 38801: i32 a0 = a0 + 0\n 38803: i32 a2 = a1 + 0\n 38805: a1 = 0x20\n 38808: jump [t0]\n      : @1170 (gas: 8)\n 38810: a0 = sp + 0xffffffffffffffe0\n 38813: a0 = a0 & 0xffffffffffffffe0\n 38816: u64 [s1 + 0x1a8] = a0\n 38820: sp = a0\n 38822: i32 a2 = a0 + 0\n 38824: a1 = 0x20\n 38827: a0 = u64 [s1 + 0xb0]\n 38831: jump [t0]\n      : @1171 (gas: 17)\n 38833: a0 = a3 <u a0\n 38836: a1 = u64 [s1 + 0xe0]\n 38840: a4 = a1 + a0\n 38843: a1 = a4 <u a1\n 38846: a1 = a0 if a0 == 0\n 38849: a0 = u64 [s1 + 0xf0]\n 38853: a5 = a0 + a1\n 38856: a0 = a5 <u a0\n 38859: a1 = u64 [s1 + 0xe8]\n 38863: a0 = a0 + a1\n 38866: u64 [s1 + 0x158] = a5\n 38870: u64 [a2 + 0x10] = a5\n 38873: u64 [s1 + 0x168] = a4\n 38877: u64 [a2 + 0x8] = a4\n 38880: u64 [s1 + 0x170] = a3\n 38884: u64 [a2] = a3\n 38886: jump [t0]\n      : @1172 (gas: 5)\n 38888: u64 [s1 + 416] = 0\n 38892: u64 [s1 + 408] = 0\n 38896: u64 [s1 + 424] = 0\n 38900: u64 [s1 + 432] = 0\n 38904: jump [t0]\n      : @1173 (gas: 7)\n 38906: a1 = u64 [a2 + 0xb8]\n 38910: a0 = a1 <u a0\n 38913: a1 = u64 [a2 + 0xb0]\n 38917: a0 = 0 if a1 != 0\n 38919: a1 = u64 [a2 + 0x98]\n 38923: a0 = 0 if a1 != 0\n 38925: jump [t0]\n      : @1174 (gas: 16)\n 38927: a2 = u64 [s1 + 0xc0]\n 38931: a0 = u64 [a2 + 0x8]\n 38934: a1 = i32 [a2 + 0x10]\n 38937: a2 = u64 [a2]\n 38939: a0 = reverse a0\n 38941: a3 = a0 << 0x20\n 38944: a1 = reverse a1\n 38946: a1 = a1 >> 0x20\n 38949: a3 = a3 | a1\n 38952: a0 = a0 >> 0x20\n 38955: a1 = reverse a2\n 38957: a2 = a1 << 0x20\n 38960: a0 = a0 | a2\n 38963: a1 = a1 >> 0x20\n 38966: a2 = s1 + 0x1938\n 38970: jump [t0]\n      : @1175 (gas: 16)\n 38972: a1 = u64 [s1 + 0xd0]\n 38976: a2 = a1 >> 0x3f\n 38979: u64 [s1 + 0x98] = a2\n 38983: a2 = a4 << 0x1\n 38986: u64 [s1 + 0x90] = a2\n 38990: a2 = a3 >> 0x3f\n 38993: u64 [s1 + 0x80] = a2\n 38997: a1 = a1 << 0x1\n 39000: u64 [s1 + 0x68] = a1\n 39003: a1 = u64 [s1 + 0x128]\n 39007: a2 = a1 >> 0x3f\n 39010: u64 [s1 + 0x88] = a2\n 39014: a2 = a3 << 0x1\n 39017: u64 [s1 + 0x70] = a2\n 39020: a2 = a1 << 0x1\n 39023: jump [t0]\n      : @1176 (gas: 8)\n 39025: a4 = a2 + a0\n 39028: a4 = a4 + a3\n 39031: a3 = a4 ^ a2\n 39034: u64 [s1 + 0x190] = a4\n 39038: a2 = a4 <u a2\n 39041: a2 = a0 if a3 == 0\n 39044: a4 = u64 [s1 + 0x188]\n 39048: jump [t0]\n      : @1177 (gas: 8)\n 39050: a4 = u64 [a5 + 0x80]\n 39054: a1 = a1 | a4\n 39057: a4 = u64 [a5 + 0x88]\n 39061: a3 = a3 | a4\n 39064: a4 = u64 [a5 + 0x90]\n 39068: a2 = a2 | a4\n 39071: a4 = s1 + 0x2938\n 39075: jump [t0]\n      : @1178 (gas: 6)\n 39077: a0 = a0 + a3\n 39080: a3 = a4 >> 0x5\n 39083: a4 = a0 << 0x3b\n 39086: a3 = a3 | a4\n 39089: a4 = u64 [s1 + 0x1a8]\n 39093: jump [t0]\n      : @1179 (gas: 15)\n 39095: a5 = a5 + a2\n 39098: a4 = a5 <u a2\n 39101: a0 = u64 [s1 + 0x1b0]\n 39105: a2 = a2 <u a0\n 39108: a0 = t2 + a2\n 39111: a0 = a0 + a4\n 39114: a2 = a1 | a5\n 39117: a0 = a0 | a3\n 39120: a2 = a2 | a0\n 39123: a2 = a2 >> 0x20\n 39126: a0 = a0 | a5\n 39129: a0 = a0 << 0x20\n 39132: a0 = a0 | a2\n 39135: u64 [s1 + 0x168] = t1\n 39139: jump [t0]\n      : @1180 (gas: 7)\n 39141: a1 = a0 + 0x1f\n 39144: a0 = a1 <u a0\n 39147: a5 = u64 [s1 + 0x170]\n 39151: a2 = a5 + a0\n 39154: a3 = a2 <u a5\n 39157: a3 = a0 if a0 == 0\n 39160: jump [t0]\n      : @1181 (gas: 7)\n 39162: a0 = sp + 0xffffffffffffffe0\n 39165: a0 = a0 & 0xffffffffffffffe0\n 39168: u64 [s1 + 0x198] = a0\n 39172: sp = a0\n 39174: a1 = 0x20\n 39177: a0 = 0\n 39179: jump [t0]\n      : @1182 (gas: 7)\n 39181: a0 = sp + 0xffffffffffffffe0\n 39184: a0 = a0 & 0xffffffffffffffe0\n 39187: u64 [s1 + 0x190] = a0\n 39191: sp = a0\n 39193: a1 = 0x20\n 39196: a0 = 0\n 39198: jump [t0]\n      : @1183 (gas: 8)\n 39200: a1 = sp + 0xffffffffffffffe0\n 39203: a1 = a1 & 0xffffffffffffffe0\n 39206: u64 [s1 + 0x190] = a1\n 39210: sp = a1\n 39212: i32 a0 = a0 + 0\n 39214: i32 a2 = a1 + 0\n 39216: a1 = 0x20\n 39219: jump [t0]\n      : @1184 (gas: 7)\n 39221: a0 = 0x20\n 39224: u64 [s1 + 0x1b8] = a0\n 39228: a5 = 0\n 39230: u64 [s1 + 432] = 0\n 39234: u64 [s1 + 424] = 0\n 39238: u64 [s1 + 408] = 0\n 39242: jump [t0]\n      : @1185 (gas: 11)\n 39244: a3 = u64 [s1 + 0x1b8]\n 39248: a0 = u64 [a3 + 0x18]\n 39251: a1 = u64 [a3 + 0x10]\n 39254: a2 = u64 [a3 + 0x8]\n 39257: a3 = u64 [a3]\n 39259: a0 = reverse a0\n 39261: a1 = reverse a1\n 39263: a2 = reverse a2\n 39265: a3 = reverse a3\n 39267: a4 = s1 + 0x2138\n 39271: jump [t0]\n      : @1186 (gas: 4)\n 39273: a1 = 0 if a3 != 0\n 39275: a4 = 0 if a1 != 0\n 39277: a0 = 0 if a1 != 0\n 39279: jump [t0]\n      : @1187 (gas: 9)\n 39281: a0 = a0 & ~a3\n 39284: a2 = u64 [s1 + 0x1a0]\n 39288: a1 = a2 & ~a1\n 39291: a2 = u64 [s1 + 0x1a8]\n 39295: a2 = a2 & ~a5\n 39298: a3 = u64 [s1 + 0x1b0]\n 39302: a3 = a3 & ~a4\n 39305: a4 = s1 + 0x2138\n 39309: jump [t0]\n      : @1188 (gas: 11)\n 39311: t2 = u64 [s1 + 0x1a8]\n 39315: t2 = t2 + 0x1\n 39318: a0 = t2 <u 0x1\n 39321: a4 = u64 [s1 + 0x1b8]\n 39325: a4 = a4 + a0\n 39328: a0 = t2 | a4\n 39331: a0 = a0 <u 0x1\n 39334: a1 = u64 [s1 + 0x198]\n 39338: a0 = a0 + a1\n 39341: a1 = a0 <u a1\n 39344: jump [t0]\n      : @1189 (gas: 10)\n 39346: a4 = a2 + a0\n 39349: a4 = a4 + a3\n 39352: a3 = a4 ^ a2\n 39355: u64 [s1 + 0x190] = a4\n 39359: a2 = a4 <u a2\n 39362: a2 = a0 if a3 == 0\n 39365: a4 = u64 [s1 + 0x188]\n 39369: a0 = u64 [s1 + 0x138]\n 39373: a0 = a4 <u a0\n 39376: jump [t0]\n      : @1190 (gas: 13)\n 39378: a5 = a5 + a2\n 39381: a3 = a5 <u a2\n 39384: a2 = a2 <u ra\n 39387: a0 = t1 + a2\n 39390: a0 = a0 + a3\n 39393: a2 = a1 | a5\n 39396: a0 = a0 | a4\n 39399: a2 = a2 | a0\n 39402: a2 = a2 >> 0x20\n 39405: a0 = a0 | a5\n 39408: a0 = a0 << 0x20\n 39411: a0 = a0 | a2\n 39414: jump [t0]\n      : @1191 (gas: 11)\n 39416: a3 = s1 + 0x100\n 39420: a0 = u64 [a3 + 0x48]\n 39423: a1 = u64 [a3 + 0x40]\n 39426: a0 = a0 | a1\n 39429: a1 = 0xffffffe0\n 39439: a2 = u64 [a3 + 0x38]\n 39442: a1 = a2 <u a1\n 39445: a2 = u64 [a3 + 0x50]\n 39448: a1 = 0 if a2 != 0\n 39450: a1 = 0 if a0 != 0\n 39452: jump [t0]\n      : @1192 (gas: 10)\n 39454: a0 = u64 [s1 + 0x128]\n 39458: a1 = a0 + 0x1f\n 39461: a0 = a1 <u a0\n 39464: a5 = u64 [s1 + 0x130]\n 39468: a2 = a5 + a0\n 39471: a3 = a2 <u a5\n 39474: a3 = a0 if a0 == 0\n 39477: a4 = u64 [s1 + 0xd0]\n 39481: a3 = a3 + a4\n 39484: jump [t0]\n      : @1193 (gas: 10)\n 39486: a4 = u64 [a0 + 0xa0]\n 39490: a1 = u64 [a0 + 0x98]\n 39494: a3 = u64 [a0 + 0x90]\n 39498: a0 = a4 >u 0\n 39500: a5 = a1 >u 0\n 39502: a5 = a0 if a4 != 0\n 39505: u64 [s1 + 0x170] = a3\n 39509: a0 = a3 >u 0\n 39511: a3 = s1 + 0x100\n 39515: jump [t0]\n      : @1194 (gas: 9)\n 39517: a1 = a0 <u a1\n 39520: a3 = u64 [s1 + 0x1b0]\n 39524: a2 = a3 + a1\n 39527: a3 = a2 <u a3\n 39530: a3 = a1 if a1 == 0\n 39533: a1 = u64 [s1 + 0x1a0]\n 39537: a3 = a3 + a1\n 39540: a1 = a3 <u a1\n 39543: jump [t0]\n      : @1195 (gas: 8)\n 39545: a2 = a2 | a0\n 39548: a2 = a2 >> 0x20\n 39551: a0 = a0 | a5\n 39554: a0 = a0 << 0x20\n 39557: a0 = a0 | a2\n 39560: u64 [s1 + 0x168] = t1\n 39564: u64 [s1 + 0x160] = t2\n 39568: jump [t0]\n      : @1196 (gas: 7)\n 39570: a1 = u64 [a2 + 0xb8]\n 39574: a0 = a1 <u a0\n 39577: a1 = u64 [a2 + 0xa8]\n 39581: a0 = 0 if a1 != 0\n 39583: a1 = u64 [a2 + 0x58]\n 39586: a0 = 0 if a1 != 0\n 39588: jump [t0]\n      : @1197 (gas: 5)\n 39590: a0 = sp + 0xffffffffffffffe0\n 39593: a2 = a0 & 0xffffffffffffffe0\n 39596: u64 [s1 + 0x1b8] = a2\n 39600: sp = a2\n 39602: jump [t0]\n      : @1198 (gas: 8)\n 39604: a4 = a2 + a0\n 39607: a4 = a4 + a3\n 39610: a3 = a4 ^ a2\n 39613: u64 [s1 + 0x188] = a4\n 39617: a2 = a4 <u a2\n 39620: a2 = a0 if a3 == 0\n 39623: a4 = u64 [s1 + 0x178]\n 39627: jump [t0]\n      : @1199 (gas: 4)\n 39629: a2 = a0\n 39631: a0 = 0x4e487b7100000000\n 39641: a1 = 0x1000\n 39645: jump [t0]\n      : @1200 (gas: 6)\n 39647: a0 = a1 <u a0\n 39650: a2 = u64 [sp + 0x78]\n 39653: a0 = 0 if a2 != 0\n 39655: a2 = u64 [sp + 0x50]\n 39658: a0 = 0 if a2 != 0\n 39660: jump [t0]\n      : @1201 (gas: 9)\n 39662: a2 = u64 [a5 + 0x68]\n 39665: a0 = u64 [a5 + 0x70]\n 39668: a1 = u64 [a5 + 0x78]\n 39671: a3 = u64 [a5 + 0x80]\n 39675: u64 [a5 + 0x40] = a3\n 39678: u64 [a5 + 0x38] = a1\n 39681: u64 [a5 + 0x30] = a0\n 39684: a0 = 0x2000\n 39688: jump [t0]\n      : @1202 (gas: 5)\n 39690: a5 = u64 [s1 + 0x190]\n 39694: u64 [a5 + 0x8] = t2\n 39697: u64 [a5] = t1\n 39699: u64 [a5 + 0x10] = ra\n 39702: jump [t0]\n      : @1203 (gas: 9)\n 39704: a1 = u64 [a2 + 0xc0]\n 39708: u64 [s1 + 0x1b0] = a1\n 39712: a1 = u64 [a2 + 0xb8]\n 39716: u64 [s1 + 0x1a8] = a1\n 39720: a1 = u64 [a2 + 0xb0]\n 39724: u64 [s1 + 0x1a0] = a1\n 39728: a0 = u64 [a2 + 0xa8]\n 39732: u64 [s1 + 0x190] = a0\n 39736: jump [t0]\n      : @1204 (gas: 4)\n 39738: a2 = a3 + a1\n 39741: a3 = a2 <u a3\n 39744: a3 = a1 if a1 == 0\n 39747: jump [t0]\n      : @1205 (gas: 8)\n 39749: u64 [sp + 48] = 0\n 39752: u64 [sp + 40] = 0\n 39755: u64 [sp + 32] = 0\n 39758: a0 = 0x4e487b7100000000\n 39768: a1 = sp + 0x20\n 39771: u64 [sp + 0x38] = a0\n 39774: a0 = 0\n 39776: jump [t0]\n      : @1206 (gas: 8)\n 39778: a0 = sp + 0xffffffffffffffe0\n 39781: a0 = a0 & 0xffffffffffffffe0\n 39784: u64 [s1 + 0x180] = a0\n 39788: sp = a0\n 39790: i32 a2 = a0 + 0\n 39792: a1 = 0x20\n 39795: a0 = u64 [s1 + 0xf8]\n 39799: jump [t0]\n      : @1207 (gas: 6)\n 39801: a2 = s1 + a1\n 39804: u64 [a2 + 1824] = 0\n 39808: u64 [a2 + 1816] = 0\n 39812: u64 [a2 + 1800] = 0xc0\n 39818: a1 = 0x2000\n 39822: jump [t0]\n      : @1208 (gas: 7)\n 39824: a3 = 0x100000000\n 39834: a0 = 0xffffffe0\n 39844: a1 = u64 [a4 + 0xb8]\n 39848: a0 = a1 <u a0\n 39851: a1 = u64 [a4 + 0xb0]\n 39855: a0 = 0 if a1 != 0\n 39857: jump [t0]\n      : @1209 (gas: 7)\n 39859: a0 = a3 >u 0\n 39861: a4 = a1 >u 0\n 39863: a4 = a0 if a3 != 0\n 39866: u64 [s1 + 0x130] = a2\n 39870: a0 = a2 >u 0\n 39872: u64 [s1 + 0xd0] = a1\n 39876: jump [t0]\n      : @1210 (gas: 6)\n 39878: sp = s0 + 0xffffffffffffffa0\n 39881: ra = u64 [sp + 0x58]\n 39884: s0 = u64 [sp + 0x50]\n 39887: s1 = u64 [sp + 0x48]\n 39890: sp = sp + 0x60\n 39893: jump [t0]\n      : @1211 (gas: 4)\n 39895: a3 = a1 | a0\n 39898: a4 = a2 <u 0x1\n 39901: a4 = 0 if a3 != 0\n 39903: jump [t0]\n      : @1212 (gas: 7)\n 39905: u64 [s1 + 0x160] = a0\n 39909: u64 [s1 + 0x178] = a1\n 39913: a0 = u64 [s1 + 0x128]\n 39917: i32 a2 = a0 << 0x3\n 39920: a0 = 0xffffffffffffffff\n 39923: a1 = 0xffffffffffffffff\n 39926: jump [t0]\n      : @1213 (gas: 7)\n 39928: a3 = a3 | a5\n 39931: a3 = a1 if a2 == 0\n 39934: a1 = 0xffffffffffffffff\n 39937: a0 = a1 if a4 == 0\n 39940: a3 = a1 if a4 == 0\n 39943: a5 = 0 if a2 == 0\n 39945: jump [t0]\n      : @1214 (gas: 4)\n 39947: i32 a0 = a0 + 0x138\n 39951: a3 = s1 + a0\n 39954: a4 = a3 + 0x300\n 39958: jump [t0]\n      : @1215 (gas: 4)\n 39960: a0 = a0 | a1\n 39963: a1 = 0xffffffe0\n 39973: a1 = a2 <u a1\n 39976: jump [t0]\n      : @1216 (gas: 2)\n 39978: a3 = a2 & 0x40\n 39981: jump @1220 if a3 != 0\n      : @1217 (gas: 1)\n 39984: jump @1219 if a2 == 0\n      : @1218 (gas: 6)\n 39987: i32 a3 = 0x40 - a2\n 39990: a3 = a1 << a3\n 39993: a1 = a1 >> a2\n 39996: a0 = a0 >> a2\n 39999: a0 = a0 | a3\n 40002: ret\n      : @1219 (gas: 1)\n 40004: ret\n      : @1220 (gas: 4)\n 40006: a0 = a2 + 0xffffffffffffffc0\n 40009: a0 = a1 >> a0\n 40012: a1 = 0\n 40014: ret\n      : @1221 (gas: 2)\n 40016: a3 = a2 & 0x40\n 40019: jump @1225 if a3 != 0\n      : @1222 (gas: 1)\n 40022: jump @1224 if a2 == 0\n      : @1223 (gas: 6)\n 40025: i32 a3 = 0x40 - a2\n 40028: a3 = a0 >> a3\n 40031: a0 = a0 << a2\n 40034: a1 = a1 << a2\n 40037: a1 = a1 | a3\n 40040: ret\n      : @1224 (gas: 1)\n 40042: ret\n      : @1225 (gas: 4)\n 40044: a1 = a2 + 0xffffffffffffffc0\n 40047: a1 = a0 << a1\n 40050: a0 = 0\n 40052: ret\n","bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{"agentList(uint256)":"2f80c54f","agents(address)":"fd66091e","getAgentProfile(address)":"78dc93a4","registerAsAgent(string,uint256,string,string,string)":"645fff2d","updateAgentProfile(string,uint256,string,string,string)":"7ffd924c"}},"irOptimized":"/// @use-src 0:\"contracts/UserRegistry.sol\"\nobject \"AgentRegistryOLD_185\" {\n    code {\n        {\n            /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"AgentRegistryOLD_185_deployed\")\n            codecopy(_1, dataoffset(\"AgentRegistryOLD_185_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"contracts/UserRegistry.sol\"\n    object \"AgentRegistryOLD_185_deployed\" {\n        code {\n            {\n                /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x2f80c54f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        /// @src 0:322:348  \"address[] public agentList\"\n                        if iszero(lt(value, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ sload(1)))\n                        /// @src 0:322:348  \"address[] public agentList\"\n                        {\n                            revert(/** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ 0, 0)\n                        }\n                        /// @src 0:322:348  \"address[] public agentList\"\n                        let slot, offset := storage_array_index_access_address_dyn(value)\n                        /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                        let value_1 := and(shr(shl(3, offset), sload(/** @src 0:322:348  \"address[] public agentList\" */ slot)), /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ sub(shl(160, 1), 1))\n                        let memPos := mload(64)\n                        mstore(memPos, value_1)\n                        return(memPos, 32)\n                    }\n                    case 0x645fff2d {\n                        if callvalue() { revert(0, 0) }\n                        let param, param_1, param_2, param_3, param_4 := abi_decode_stringt_uint256t_stringt_stringt_string(calldatasize())\n                        mstore(0, /** @src 0:694:704  \"msg.sender\" */ caller())\n                        /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                        mstore(0x20, 0)\n                        if iszero(/** @src 0:687:725  \"agents[msg.sender].agent == address(0)\" */ iszero(/** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ and(sload(keccak256(0, 64)), sub(shl(160, 1), 1))))\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 0x20)\n                            mstore(add(memPtr, 36), 18)\n                            mstore(add(memPtr, 68), \"Already registered\")\n                            revert(memPtr, 100)\n                        }\n                        let memPtr_1 := mload(64)\n                        finalize_allocation_10712(memPtr_1)\n                        mstore(memPtr_1, /** @src 0:694:704  \"msg.sender\" */ caller())\n                        /// @src 0:788:882  \"AgentProfile(...\"\n                        let _1 := add(memPtr_1, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ 0x20)\n                        mstore(_1, param)\n                        /// @src 0:788:882  \"AgentProfile(...\"\n                        let _2 := add(memPtr_1, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ 64)\n                        mstore(_2, param_1)\n                        /// @src 0:788:882  \"AgentProfile(...\"\n                        let _3 := add(memPtr_1, 96)\n                        /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                        mstore(_3, param_2)\n                        /// @src 0:788:882  \"AgentProfile(...\"\n                        let _4 := add(memPtr_1, 128)\n                        /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                        mstore(_4, param_3)\n                        /// @src 0:788:882  \"AgentProfile(...\"\n                        let _5 := add(memPtr_1, 160)\n                        /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                        mstore(_5, param_4)\n                        mstore(0, /** @src 0:694:704  \"msg.sender\" */ caller())\n                        /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                        mstore(0x20, 0)\n                        let dataSlot := keccak256(0, 64)\n                        sstore(dataSlot, or(and(sload(dataSlot), shl(160, 0xffffffffffffffffffffffff)), and(mload(memPtr_1), sub(shl(160, 1), 1))))\n                        let memberSlot := add(dataSlot, 1)\n                        let _6 := mload(_1)\n                        let newLen := mload(_6)\n                        if gt(newLen, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        let _7 := extract_byte_array_length(sload(memberSlot))\n                        if gt(_7, 31)\n                        {\n                            mstore(0, memberSlot)\n                            let data := keccak256(0, 0x20)\n                            let deleteStart := add(data, shr(5, add(newLen, 31)))\n                            if lt(newLen, 0x20) { deleteStart := data }\n                            let _8 := add(data, shr(5, add(_7, 31)))\n                            let start := deleteStart\n                            for { } lt(start, _8) { start := add(start, 1) }\n                            { sstore(start, 0) }\n                        }\n                        let srcOffset := 0\n                        srcOffset := 0x20\n                        switch gt(newLen, 31)\n                        case 1 {\n                            let loopEnd := and(newLen, not(31))\n                            mstore(0, memberSlot)\n                            let dstPtr := keccak256(0, srcOffset)\n                            let i := 0\n                            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n                            {\n                                sstore(dstPtr, mload(add(_6, srcOffset)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, 0x20)\n                            }\n                            if lt(loopEnd, newLen)\n                            {\n                                let lastValue := mload(add(_6, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                            }\n                            sstore(memberSlot, add(shl(1, newLen), 1))\n                        }\n                        default {\n                            let value_2 := 0\n                            if newLen\n                            {\n                                value_2 := mload(add(_6, srcOffset))\n                            }\n                            sstore(memberSlot, or(and(value_2, not(shr(shl(3, newLen), not(0)))), shl(1, newLen)))\n                        }\n                        sstore(add(dataSlot, 2), mload(_2))\n                        let memberSlot_1 := add(dataSlot, 3)\n                        let _9 := mload(_3)\n                        let newLen_1 := mload(_9)\n                        if gt(newLen_1, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        let _10 := extract_byte_array_length(sload(memberSlot_1))\n                        if gt(_10, 31)\n                        {\n                            mstore(0, memberSlot_1)\n                            let data_1 := keccak256(0, 0x20)\n                            let deleteStart_1 := add(data_1, shr(5, add(newLen_1, 31)))\n                            if lt(newLen_1, 0x20) { deleteStart_1 := data_1 }\n                            let _11 := add(data_1, shr(5, add(_10, 31)))\n                            let start_1 := deleteStart_1\n                            for { } lt(start_1, _11) { start_1 := add(start_1, 1) }\n                            { sstore(start_1, 0) }\n                        }\n                        let srcOffset_1 := 0\n                        srcOffset_1 := 0x20\n                        switch gt(newLen_1, 31)\n                        case 1 {\n                            let loopEnd_1 := and(newLen_1, not(31))\n                            mstore(0, memberSlot_1)\n                            let dstPtr_1 := keccak256(0, srcOffset_1)\n                            let i_1 := 0\n                            for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, 0x20) }\n                            {\n                                sstore(dstPtr_1, mload(add(_9, srcOffset_1)))\n                                dstPtr_1 := add(dstPtr_1, 1)\n                                srcOffset_1 := add(srcOffset_1, 0x20)\n                            }\n                            if lt(loopEnd_1, newLen_1)\n                            {\n                                let lastValue_1 := mload(add(_9, srcOffset_1))\n                                sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                            }\n                            sstore(memberSlot_1, add(shl(1, newLen_1), 1))\n                        }\n                        default {\n                            let value_3 := 0\n                            if newLen_1\n                            {\n                                value_3 := mload(add(_9, srcOffset_1))\n                            }\n                            sstore(memberSlot_1, or(and(value_3, not(shr(shl(3, newLen_1), not(0)))), shl(1, newLen_1)))\n                        }\n                        let memberSlot_2 := add(dataSlot, 4)\n                        let _12 := mload(_4)\n                        let newLen_2 := mload(_12)\n                        if gt(newLen_2, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        let _13 := extract_byte_array_length(sload(memberSlot_2))\n                        if gt(_13, 31)\n                        {\n                            mstore(0, memberSlot_2)\n                            let data_2 := keccak256(0, 0x20)\n                            let deleteStart_2 := add(data_2, shr(5, add(newLen_2, 31)))\n                            if lt(newLen_2, 0x20) { deleteStart_2 := data_2 }\n                            let _14 := add(data_2, shr(5, add(_13, 31)))\n                            let start_2 := deleteStart_2\n                            for { } lt(start_2, _14) { start_2 := add(start_2, 1) }\n                            { sstore(start_2, 0) }\n                        }\n                        let srcOffset_2 := 0\n                        srcOffset_2 := 0x20\n                        switch gt(newLen_2, 31)\n                        case 1 {\n                            let loopEnd_2 := and(newLen_2, not(31))\n                            mstore(0, memberSlot_2)\n                            let dstPtr_2 := keccak256(0, srcOffset_2)\n                            let i_2 := 0\n                            for { } lt(i_2, loopEnd_2) { i_2 := add(i_2, 0x20) }\n                            {\n                                sstore(dstPtr_2, mload(add(_12, srcOffset_2)))\n                                dstPtr_2 := add(dstPtr_2, 1)\n                                srcOffset_2 := add(srcOffset_2, 0x20)\n                            }\n                            if lt(loopEnd_2, newLen_2)\n                            {\n                                let lastValue_2 := mload(add(_12, srcOffset_2))\n                                sstore(dstPtr_2, and(lastValue_2, not(shr(and(shl(3, newLen_2), 248), not(0)))))\n                            }\n                            sstore(memberSlot_2, add(shl(1, newLen_2), 1))\n                        }\n                        default {\n                            let value_4 := 0\n                            if newLen_2\n                            {\n                                value_4 := mload(add(_12, srcOffset_2))\n                            }\n                            sstore(memberSlot_2, or(and(value_4, not(shr(shl(3, newLen_2), not(0)))), shl(1, newLen_2)))\n                        }\n                        let memberSlot_3 := add(dataSlot, 5)\n                        let _15 := mload(_5)\n                        let newLen_3 := mload(_15)\n                        if gt(newLen_3, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        let _16 := extract_byte_array_length(sload(memberSlot_3))\n                        if gt(_16, 31)\n                        {\n                            mstore(0, memberSlot_3)\n                            let data_3 := keccak256(0, 0x20)\n                            let deleteStart_3 := add(data_3, shr(5, add(newLen_3, 31)))\n                            if lt(newLen_3, 0x20) { deleteStart_3 := data_3 }\n                            let _17 := add(data_3, shr(5, add(_16, 31)))\n                            let start_3 := deleteStart_3\n                            for { } lt(start_3, _17) { start_3 := add(start_3, 1) }\n                            { sstore(start_3, 0) }\n                        }\n                        let srcOffset_3 := 0\n                        srcOffset_3 := 0x20\n                        switch gt(newLen_3, 31)\n                        case 1 {\n                            let loopEnd_3 := and(newLen_3, not(31))\n                            mstore(0, memberSlot_3)\n                            let dstPtr_3 := keccak256(0, srcOffset_3)\n                            let i_3 := 0\n                            for { } lt(i_3, loopEnd_3) { i_3 := add(i_3, 0x20) }\n                            {\n                                sstore(dstPtr_3, mload(add(_15, srcOffset_3)))\n                                dstPtr_3 := add(dstPtr_3, 1)\n                                srcOffset_3 := add(srcOffset_3, 0x20)\n                            }\n                            if lt(loopEnd_3, newLen_3)\n                            {\n                                let lastValue_3 := mload(add(_15, srcOffset_3))\n                                sstore(dstPtr_3, and(lastValue_3, not(shr(and(shl(3, newLen_3), 248), not(0)))))\n                            }\n                            sstore(memberSlot_3, add(shl(1, newLen_3), 1))\n                        }\n                        default {\n                            let value_5 := 0\n                            if newLen_3\n                            {\n                                value_5 := mload(add(_15, srcOffset_3))\n                            }\n                            sstore(memberSlot_3, or(and(value_5, not(shr(shl(3, newLen_3), not(0)))), shl(1, newLen_3)))\n                        }\n                        let oldLen := sload(1)\n                        if iszero(lt(oldLen, 18446744073709551616))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        sstore(1, add(oldLen, 1))\n                        let slot_1, offset_1 := storage_array_index_access_address_dyn(oldLen)\n                        let _18 := sload(slot_1)\n                        let shiftBits := shl(3, offset_1)\n                        sstore(slot_1, or(and(_18, not(shl(shiftBits, sub(shl(160, 1), 1)))), shl(shiftBits, /** @src 0:694:704  \"msg.sender\" */ caller())))\n                        /// @src 0:971:993  \"Registered(msg.sender)\"\n                        let _19 := /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ mload(64)\n                        /// @src 0:971:993  \"Registered(msg.sender)\"\n                        log2(/** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ 0, 0, /** @src 0:971:993  \"Registered(msg.sender)\" */ 0x2d3734a8e47ac8316e500ac231c90a6e1848ca2285f40d07eaa52005e4b3a0e9, /** @src 0:694:704  \"msg.sender\" */ caller())\n                        /// @src 0:1008:1048  \"AgentProfileUpdated(msg.sender, profile)\"\n                        log2(_19, sub(abi_encode_struct_AgentProfile(_19, memPtr_1), _19), 0x0a36134b198b616c86ff9567c35741c18574046ea76e7fcf155c88bdd1deaace, /** @src 0:694:704  \"msg.sender\" */ caller())\n                        /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                        return(0, 0)\n                    }\n                    case 0x78dc93a4 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_6 := calldataload(4)\n                        let _20 := and(value_6, sub(shl(160, 1), 1))\n                        if iszero(eq(value_6, _20)) { revert(0, 0) }\n                        let memPtr_2 := mload(64)\n                        finalize_allocation_10712(memPtr_2)\n                        mstore(memPtr_2, 0)\n                        mstore(add(memPtr_2, 32), 96)\n                        mstore(add(memPtr_2, 64), 0)\n                        mstore(add(memPtr_2, 96), 96)\n                        mstore(add(memPtr_2, 128), 96)\n                        mstore(add(memPtr_2, 160), 96)\n                        mstore(0, _20)\n                        mstore(32, 0)\n                        let dataSlot_1 := keccak256(0, 64)\n                        let memPtr_3 := mload(64)\n                        finalize_allocation_10712(memPtr_3)\n                        mstore(memPtr_3, and(sload(dataSlot_1), sub(shl(160, 1), 1)))\n                        let memPtr_4 := mload(64)\n                        finalize_allocation(memPtr_4, sub(abi_encode_string_storage(add(dataSlot_1, 1), memPtr_4), memPtr_4))\n                        mstore(add(memPtr_3, 32), memPtr_4)\n                        mstore(add(memPtr_3, 64), sload(add(dataSlot_1, 2)))\n                        let memPtr_5 := mload(64)\n                        finalize_allocation(memPtr_5, sub(abi_encode_string_storage(add(dataSlot_1, 3), memPtr_5), memPtr_5))\n                        mstore(add(memPtr_3, 96), memPtr_5)\n                        let memPtr_6 := mload(64)\n                        finalize_allocation(memPtr_6, sub(abi_encode_string_storage(add(dataSlot_1, 4), memPtr_6), memPtr_6))\n                        mstore(add(memPtr_3, 128), memPtr_6)\n                        let memPtr_7 := mload(64)\n                        finalize_allocation(memPtr_7, sub(abi_encode_string_storage(add(dataSlot_1, 5), memPtr_7), memPtr_7))\n                        mstore(add(memPtr_3, 160), memPtr_7)\n                        let memPos_1 := mload(64)\n                        return(memPos_1, sub(abi_encode_struct_AgentProfile(memPos_1, memPtr_3), memPos_1))\n                    }\n                    case 0x7ffd924c {\n                        if callvalue() { revert(0, 0) }\n                        let param_5, param_6, param_7, param_8, param_9 := abi_decode_stringt_uint256t_stringt_stringt_string(calldatasize())\n                        mstore(0, /** @src 0:1281:1291  \"msg.sender\" */ caller())\n                        /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                        mstore(0x20, 0)\n                        if /** @src 0:1274:1312  \"agents[msg.sender].agent != address(0)\" */ iszero(/** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ and(sload(keccak256(0, 64)), sub(shl(160, 1), 1)))\n                        {\n                            let memPtr_8 := mload(64)\n                            mstore(memPtr_8, shl(229, 4594637))\n                            mstore(add(memPtr_8, 4), 0x20)\n                            mstore(add(memPtr_8, 36), 12)\n                            mstore(add(memPtr_8, 68), \"Not an agent\")\n                            revert(memPtr_8, 100)\n                        }\n                        mstore(0, /** @src 0:1281:1291  \"msg.sender\" */ caller())\n                        /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                        mstore(0x20, 0)\n                        let dataSlot_2 := keccak256(0, 64)\n                        /// @src 0:1398:1414  \"profile.platform\"\n                        let _21 := add(dataSlot_2, 1)\n                        /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                        let newLen_4 := mload(param_5)\n                        if gt(newLen_4, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        let _22 := extract_byte_array_length(sload(_21))\n                        if gt(_22, 31)\n                        {\n                            mstore(0, _21)\n                            let data_4 := keccak256(0, 0x20)\n                            let deleteStart_4 := add(data_4, shr(5, add(newLen_4, 31)))\n                            if lt(newLen_4, 0x20) { deleteStart_4 := data_4 }\n                            let _23 := add(data_4, shr(5, add(_22, 31)))\n                            let start_4 := deleteStart_4\n                            for { }\n                            lt(start_4, _23)\n                            {\n                                start_4 := add(start_4, /** @src 0:1398:1414  \"profile.platform\" */ 1)\n                            }\n                            /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                            { sstore(start_4, 0) }\n                        }\n                        let srcOffset_4 := 0\n                        srcOffset_4 := 0x20\n                        switch gt(newLen_4, 31)\n                        case 1 {\n                            let loopEnd_4 := and(newLen_4, not(31))\n                            mstore(0, _21)\n                            let dstPtr_4 := keccak256(0, srcOffset_4)\n                            let i_4 := 0\n                            for { } lt(i_4, loopEnd_4) { i_4 := add(i_4, 0x20) }\n                            {\n                                sstore(dstPtr_4, mload(add(param_5, srcOffset_4)))\n                                dstPtr_4 := add(dstPtr_4, /** @src 0:1398:1414  \"profile.platform\" */ 1)\n                                /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                                srcOffset_4 := add(srcOffset_4, 0x20)\n                            }\n                            if lt(loopEnd_4, newLen_4)\n                            {\n                                let lastValue_4 := mload(add(param_5, srcOffset_4))\n                                sstore(dstPtr_4, and(lastValue_4, not(shr(and(shl(3, newLen_4), 248), not(0)))))\n                            }\n                            sstore(_21, add(shl(/** @src 0:1398:1414  \"profile.platform\" */ 1, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ newLen_4), /** @src 0:1398:1414  \"profile.platform\" */ 1))\n                        }\n                        default /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                        {\n                            let value_7 := 0\n                            if newLen_4\n                            {\n                                value_7 := mload(add(param_5, srcOffset_4))\n                            }\n                            sstore(_21, or(and(value_7, not(shr(shl(3, newLen_4), not(0)))), shl(/** @src 0:1398:1414  \"profile.platform\" */ 1, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ newLen_4)))\n                        }\n                        /// @src 0:1435:1448  \"profile.price\"\n                        let _24 := add(dataSlot_2, 2)\n                        /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                        sstore(_24, param_6)\n                        /// @src 0:1466:1482  \"profile.location\"\n                        let _25 := add(dataSlot_2, 3)\n                        /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                        let newLen_5 := mload(param_7)\n                        if gt(newLen_5, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        let _26 := extract_byte_array_length(sload(_25))\n                        if gt(_26, 31)\n                        {\n                            mstore(0, _25)\n                            let data_5 := keccak256(0, 0x20)\n                            let deleteStart_5 := add(data_5, shr(5, add(newLen_5, 31)))\n                            if lt(newLen_5, 0x20) { deleteStart_5 := data_5 }\n                            let _27 := add(data_5, shr(5, add(_26, 31)))\n                            let start_5 := deleteStart_5\n                            for { }\n                            lt(start_5, _27)\n                            {\n                                start_5 := add(start_5, /** @src 0:1398:1414  \"profile.platform\" */ 1)\n                            }\n                            /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                            { sstore(start_5, 0) }\n                        }\n                        let srcOffset_5 := 0\n                        srcOffset_5 := 0x20\n                        switch gt(newLen_5, 31)\n                        case 1 {\n                            let loopEnd_5 := and(newLen_5, not(31))\n                            mstore(0, _25)\n                            let dstPtr_5 := keccak256(0, srcOffset_5)\n                            let i_5 := 0\n                            for { } lt(i_5, loopEnd_5) { i_5 := add(i_5, 0x20) }\n                            {\n                                sstore(dstPtr_5, mload(add(param_7, srcOffset_5)))\n                                dstPtr_5 := add(dstPtr_5, /** @src 0:1398:1414  \"profile.platform\" */ 1)\n                                /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                                srcOffset_5 := add(srcOffset_5, 0x20)\n                            }\n                            if lt(loopEnd_5, newLen_5)\n                            {\n                                let lastValue_5 := mload(add(param_7, srcOffset_5))\n                                sstore(dstPtr_5, and(lastValue_5, not(shr(and(shl(/** @src 0:1466:1482  \"profile.location\" */ 3, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ newLen_5), 248), not(0)))))\n                            }\n                            sstore(_25, add(shl(/** @src 0:1398:1414  \"profile.platform\" */ 1, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ newLen_5), /** @src 0:1398:1414  \"profile.platform\" */ 1))\n                        }\n                        default /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                        {\n                            let value_8 := 0\n                            if newLen_5\n                            {\n                                value_8 := mload(add(param_7, srcOffset_5))\n                            }\n                            sstore(_25, or(and(value_8, not(shr(shl(/** @src 0:1466:1482  \"profile.location\" */ 3, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ newLen_5), not(0)))), shl(/** @src 0:1398:1414  \"profile.platform\" */ 1, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ newLen_5)))\n                        }\n                        /// @src 0:1503:1517  \"profile.avatar\"\n                        let _28 := add(dataSlot_2, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ 4)\n                        let newLen_6 := mload(param_8)\n                        if gt(newLen_6, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        let _29 := extract_byte_array_length(sload(_28))\n                        if gt(_29, 31)\n                        {\n                            mstore(0, _28)\n                            let data_6 := keccak256(0, 0x20)\n                            let deleteStart_6 := add(data_6, shr(5, add(newLen_6, 31)))\n                            if lt(newLen_6, 0x20) { deleteStart_6 := data_6 }\n                            let _30 := add(data_6, shr(5, add(_29, 31)))\n                            let start_6 := deleteStart_6\n                            for { }\n                            lt(start_6, _30)\n                            {\n                                start_6 := add(start_6, /** @src 0:1398:1414  \"profile.platform\" */ 1)\n                            }\n                            /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                            { sstore(start_6, 0) }\n                        }\n                        let srcOffset_6 := 0\n                        srcOffset_6 := 0x20\n                        switch gt(newLen_6, 31)\n                        case 1 {\n                            let loopEnd_6 := and(newLen_6, not(31))\n                            mstore(0, _28)\n                            let dstPtr_6 := keccak256(0, srcOffset_6)\n                            let i_6 := 0\n                            for { } lt(i_6, loopEnd_6) { i_6 := add(i_6, 0x20) }\n                            {\n                                sstore(dstPtr_6, mload(add(param_8, srcOffset_6)))\n                                dstPtr_6 := add(dstPtr_6, /** @src 0:1398:1414  \"profile.platform\" */ 1)\n                                /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                                srcOffset_6 := add(srcOffset_6, 0x20)\n                            }\n                            if lt(loopEnd_6, newLen_6)\n                            {\n                                let lastValue_6 := mload(add(param_8, srcOffset_6))\n                                sstore(dstPtr_6, and(lastValue_6, not(shr(and(shl(/** @src 0:1466:1482  \"profile.location\" */ 3, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ newLen_6), 248), not(0)))))\n                            }\n                            sstore(_28, add(shl(/** @src 0:1398:1414  \"profile.platform\" */ 1, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ newLen_6), /** @src 0:1398:1414  \"profile.platform\" */ 1))\n                        }\n                        default /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                        {\n                            let value_9 := 0\n                            if newLen_6\n                            {\n                                value_9 := mload(add(param_8, srcOffset_6))\n                            }\n                            sstore(_28, or(and(value_9, not(shr(shl(/** @src 0:1466:1482  \"profile.location\" */ 3, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ newLen_6), not(0)))), shl(/** @src 0:1398:1414  \"profile.platform\" */ 1, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ newLen_6)))\n                        }\n                        /// @src 0:1536:1555  \"profile.description\"\n                        let _31 := add(dataSlot_2, 5)\n                        /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                        let newLen_7 := mload(param_9)\n                        if gt(newLen_7, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        let _32 := extract_byte_array_length(sload(_31))\n                        if gt(_32, 31)\n                        {\n                            mstore(0, _31)\n                            let data_7 := keccak256(0, 0x20)\n                            let deleteStart_7 := add(data_7, shr(/** @src 0:1536:1555  \"profile.description\" */ 5, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ add(newLen_7, 31)))\n                            if lt(newLen_7, 0x20) { deleteStart_7 := data_7 }\n                            let _33 := add(data_7, shr(/** @src 0:1536:1555  \"profile.description\" */ 5, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ add(_32, 31)))\n                            let start_7 := deleteStart_7\n                            for { }\n                            lt(start_7, _33)\n                            {\n                                start_7 := add(start_7, /** @src 0:1398:1414  \"profile.platform\" */ 1)\n                            }\n                            /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                            { sstore(start_7, 0) }\n                        }\n                        let srcOffset_7 := 0\n                        srcOffset_7 := 0x20\n                        switch gt(newLen_7, 31)\n                        case 1 {\n                            let loopEnd_7 := and(newLen_7, not(31))\n                            mstore(0, _31)\n                            let dstPtr_7 := keccak256(0, srcOffset_7)\n                            let i_7 := 0\n                            for { } lt(i_7, loopEnd_7) { i_7 := add(i_7, 0x20) }\n                            {\n                                sstore(dstPtr_7, mload(add(param_9, srcOffset_7)))\n                                dstPtr_7 := add(dstPtr_7, /** @src 0:1398:1414  \"profile.platform\" */ 1)\n                                /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                                srcOffset_7 := add(srcOffset_7, 0x20)\n                            }\n                            if lt(loopEnd_7, newLen_7)\n                            {\n                                let lastValue_7 := mload(add(param_9, srcOffset_7))\n                                sstore(dstPtr_7, and(lastValue_7, not(shr(and(shl(/** @src 0:1466:1482  \"profile.location\" */ 3, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ newLen_7), 248), not(0)))))\n                            }\n                            sstore(_31, add(shl(/** @src 0:1398:1414  \"profile.platform\" */ 1, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ newLen_7), /** @src 0:1398:1414  \"profile.platform\" */ 1))\n                        }\n                        default /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                        {\n                            let value_10 := 0\n                            if newLen_7\n                            {\n                                value_10 := mload(add(param_9, srcOffset_7))\n                            }\n                            sstore(_31, or(and(value_10, not(shr(shl(/** @src 0:1466:1482  \"profile.location\" */ 3, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ newLen_7), not(0)))), shl(/** @src 0:1398:1414  \"profile.platform\" */ 1, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ newLen_7)))\n                        }\n                        /// @src 0:1584:1624  \"AgentProfileUpdated(msg.sender, profile)\"\n                        let _34 := /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ mload(64)\n                        mstore(_34, 0x20)\n                        mstore(add(_34, 0x20), and(sload(dataSlot_2), sub(shl(160, 1), 1)))\n                        mstore(add(_34, 64), 0xc0)\n                        let tail := abi_encode_string_storage(_21, add(_34, 224))\n                        mstore(add(_34, 96), sload(_24))\n                        mstore(add(_34, 128), add(sub(tail, _34), not(31)))\n                        let tail_1 := abi_encode_string_storage(_25, tail)\n                        mstore(add(_34, 160), add(sub(tail_1, _34), not(31)))\n                        let tail_2 := abi_encode_string_storage(_28, tail_1)\n                        mstore(add(_34, 0xc0), add(sub(tail_2, _34), not(31)))\n                        /// @src 0:1584:1624  \"AgentProfileUpdated(msg.sender, profile)\"\n                        log2(_34, sub(/** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ abi_encode_string_storage(_31, tail_2), /** @src 0:1584:1624  \"AgentProfileUpdated(msg.sender, profile)\" */ _34), 0x0a36134b198b616c86ff9567c35741c18574046ea76e7fcf155c88bdd1deaace, /** @src 0:1281:1291  \"msg.sender\" */ caller())\n                        /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                        return(0, 0)\n                    }\n                    case 0xfd66091e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_11 := calldataload(4)\n                        let _35 := and(value_11, sub(shl(160, 1), 1))\n                        if iszero(eq(value_11, _35)) { revert(0, 0) }\n                        mstore(0, _35)\n                        mstore(32, 0)\n                        let dataSlot_3 := keccak256(0, 64)\n                        let cleaned := and(sload(/** @src 0:270:316  \"mapping(address => AgentProfile) public agents\" */ dataSlot_3), /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ sub(shl(160, 1), 1))\n                        let memPtr_9 := mload(64)\n                        finalize_allocation(memPtr_9, sub(abi_encode_string_storage(/** @src 0:270:316  \"mapping(address => AgentProfile) public agents\" */ add(dataSlot_3, 1), /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ memPtr_9), memPtr_9))\n                        let _36 := sload(/** @src 0:270:316  \"mapping(address => AgentProfile) public agents\" */ add(dataSlot_3, 2))\n                        /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                        let memPtr_10 := mload(64)\n                        finalize_allocation(memPtr_10, sub(abi_encode_string_storage(/** @src 0:270:316  \"mapping(address => AgentProfile) public agents\" */ add(dataSlot_3, 3), /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ memPtr_10), memPtr_10))\n                        let memPtr_11 := mload(64)\n                        finalize_allocation(memPtr_11, sub(abi_encode_string_storage(/** @src 0:270:316  \"mapping(address => AgentProfile) public agents\" */ add(dataSlot_3, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ 4), memPtr_11), memPtr_11))\n                        let memPtr_12 := mload(64)\n                        finalize_allocation(memPtr_12, sub(abi_encode_string_storage(/** @src 0:270:316  \"mapping(address => AgentProfile) public agents\" */ add(dataSlot_3, 5), /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ memPtr_12), memPtr_12))\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, cleaned)\n                        mstore(add(memPos_2, 32), 192)\n                        let tail_3 := abi_encode_string(memPtr_9, add(memPos_2, 192))\n                        mstore(add(memPos_2, 64), _36)\n                        mstore(add(memPos_2, 96), sub(tail_3, memPos_2))\n                        let tail_4 := abi_encode_string(memPtr_10, tail_3)\n                        mstore(add(memPos_2, 128), sub(tail_4, memPos_2))\n                        let tail_5 := abi_encode_string(memPtr_11, tail_4)\n                        mstore(add(memPos_2, 160), sub(tail_5, memPos_2))\n                        return(memPos_2, sub(abi_encode_string(memPtr_12, tail_5), memPos_2))\n                    }\n                }\n                revert(0, 0)\n            }\n            function storage_array_index_access_address_dyn(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(/** @src 0:322:348  \"address[] public agentList\" */ 1)))\n                /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:322:348  \"address[] public agentList\" */ 1)\n                /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                slot := add(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ 0x20), index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n            function finalize_allocation_10712(memPtr)\n            {\n                let newFreePtr := add(memPtr, 192)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_decode_string(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ 0x24)\n                }\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, add(and(add(length, 0x1f), not(31)), 0x20))\n                mstore(memPtr, length)\n                if gt(add(add(offset, length), 0x20), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                calldatacopy(add(memPtr, 0x20), add(offset, 0x20), length)\n                mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                array := memPtr\n            }\n            function abi_decode_stringt_uint256t_stringt_stringt_string(dataEnd) -> value0, value1, value2, value3, value4\n            {\n                if slt(add(dataEnd, not(3)), 160) { revert(0, 0) }\n                let offset := calldataload(4)\n                if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                value0 := abi_decode_string(add(4, offset), dataEnd)\n                value1 := calldataload(36)\n                let offset_1 := calldataload(68)\n                if gt(offset_1, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                value2 := abi_decode_string(add(4, offset_1), dataEnd)\n                let offset_2 := calldataload(100)\n                if gt(offset_2, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                value3 := abi_decode_string(add(4, offset_2), dataEnd)\n                let offset_3 := calldataload(132)\n                if gt(offset_3, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                value4 := abi_decode_string(add(4, offset_3), dataEnd)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                mcopy(add(pos, 0x20), add(value, 0x20), length)\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_struct_AgentProfile(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), and(mload(value0), sub(shl(160, 1), 1)))\n                let memberValue0 := mload(add(value0, 32))\n                mstore(add(headStart, 64), 0xc0)\n                let tail_1 := abi_encode_string(memberValue0, add(headStart, 224))\n                mstore(add(headStart, 96), mload(add(value0, 64)))\n                let memberValue0_1 := mload(add(value0, 96))\n                mstore(add(headStart, 128), add(sub(tail_1, headStart), not(31)))\n                let tail_2 := abi_encode_string(memberValue0_1, tail_1)\n                let memberValue0_2 := mload(add(value0, 128))\n                mstore(add(headStart, 160), add(sub(tail_2, headStart), not(31)))\n                let tail_3 := abi_encode_string(memberValue0_2, tail_2)\n                let memberValue0_3 := mload(add(value0, 160))\n                mstore(add(headStart, 0xc0), add(sub(tail_3, headStart), not(31)))\n                tail := abi_encode_string(memberValue0_3, tail_3)\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function abi_encode_string_storage(value, pos) -> ret\n            {\n                let slotValue := sload(value)\n                let length := extract_byte_array_length(slotValue)\n                mstore(pos, length)\n                switch and(slotValue, 1)\n                case 0 {\n                    mstore(add(pos, 0x20), and(slotValue, not(255)))\n                    ret := add(add(pos, shl(5, iszero(iszero(length)))), 0x20)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ value)\n                    let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:58:1760  \"contract AgentRegistryOLD {...\" */ 0x20)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 0:58:1760  \"contract AgentRegistryOLD {...\"\n                    for { } lt(i, length) { i := add(i, 0x20) }\n                    {\n                        mstore(add(add(pos, i), 0x20), sload(dataPos))\n                        dataPos := add(dataPos, 1)\n                    }\n                    ret := add(add(pos, i), 0x20)\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220e709b40f5dc4c5da07215183cfc3278a3fc9ff3545b3aff1ebae70056ea29ed964736f6c634300081c0033\"\n    }\n}\n","hash":"6be77b73d76fe341a9d4ae2288efe7e09f0ae7e5ab0adc5e02cbc51f62c83040","factoryDependencies":{}},"ConsumerRegistry":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"consumer","type":"address"},{"components":[{"internalType":"address","name":"consumer","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"avatar","type":"string"}],"indexed":false,"internalType":"struct ConsumerRegistry.ConsumerProfile","name":"profile","type":"tuple"}],"name":"ConsumerProfileUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"consumer","type":"address"}],"name":"Registered","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"consumerList","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"consumers","outputs":[{"internalType":"address","name":"consumer","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"avatar","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"consumer","type":"address"}],"name":"getConsumerProfile","outputs":[{"components":[{"internalType":"address","name":"consumer","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"avatar","type":"string"}],"internalType":"struct ConsumerRegistry.ConsumerProfile","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"avatar","type":"string"}],"name":"registerAsConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"avatar","type":"string"}],"name":"updateConsumerProfile","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"llvm_arguments":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Default","level_middle_end_size":"Z"},"revive_pallet_version":null,"revive_version":"0.2.0+commit.e94432e.llvm-18.1.8","solc_metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"avatar\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct ConsumerRegistry.ConsumerProfile\",\"name\":\"profile\",\"type\":\"tuple\"}],\"name\":\"ConsumerProfileUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"consumerList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"consumers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"avatar\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"getConsumerProfile\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"avatar\",\"type\":\"string\"}],\"internalType\":\"struct ConsumerRegistry.ConsumerProfile\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"avatar\",\"type\":\"string\"}],\"name\":\"registerAsConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"avatar\",\"type\":\"string\"}],\"name\":\"updateConsumerProfile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UserRegistry.sol\":\"ConsumerRegistry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UserRegistry.sol\":{\"keccak256\":\"0x2aaeb51a6d4f79e731270383d84b4f1ac61fc6e3b036f031f07c72427b02fd2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://788780623977005cca216a42c04f141a4c250e2bc3c6c23e6056468e4e333542\",\"dweb:/ipfs/Qmekx19CqVHu49Y1ktPuts2S6aLvAVooKo58UijjZ7w7Mx\"]}},\"version\":1}","solc_version":"0.8.28+commit.7893614a.Emscripten.clang"},"evm":{"assembly":"// RO data = 0/0 bytes\n// RW data = 96/65680 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 7565\n// Code size = 25975 bytes\n\n      : @0 (gas: 1)\n     0: jump @14 if a0 == a1\n      : @1 (gas: 9)\n     3: a3 = a1 << 0x20\n     6: a3 = a3 >> 0x20\n     9: a4 = a0 << 0x20\n    12: a4 = a4 >> 0x20\n    15: a4 = a4 + a2\n    18: a3 = a3 - a4\n    21: a4 = a2 << 0x1\n    24: a4 = -a4\n    26: jump @7 if a4 >=u a3\n      : @2 (gas: 1)\n    29: jump @11 if a0 >=u a1\n      : @3 (gas: 1)\n    32: jump @14 if a2 == 0\n      : @4 (gas: 3)\n    35: a2 = a2 + a0\n    38: a3 = a0\n    40: fallthrough\n      : @5 (gas: 6)\n    41: a4 = u8 [a1]\n    43: a1 = a1 + 0x1\n    46: a5 = a3 + 0x1\n    49: u8 [a3] = a4\n    51: a3 = a5\n    53: jump @5 if a5 != a2\n      : @6 (gas: 1)\n    56: jump @14\n      : @7 (gas: 1)\n    58: jump @14 if a2 == 0\n      : @8 (gas: 3)\n    61: a2 = a2 + a0\n    64: a3 = a0\n    66: fallthrough\n      : @9 (gas: 6)\n    67: a4 = u8 [a1]\n    69: a1 = a1 + 0x1\n    72: a5 = a3 + 0x1\n    75: u8 [a3] = a4\n    77: a3 = a5\n    79: jump @9 if a5 != a2\n      : @10 (gas: 1)\n    82: jump @14\n      : @11 (gas: 1)\n    84: jump @14 if a2 == 0\n      : @12 (gas: 2)\n    87: i32 a3 = a2 + 0xffffffffffffffff\n    90: fallthrough\n      : @13 (gas: 7)\n    91: a4 = a1 + a3\n    94: a4 = u8 [a4]\n    96: a2 = a2 + 0xffffffffffffffff\n    99: a5 = a0 + a3\n   102: u8 [a5] = a4\n   104: i32 a3 = a3 + 0xffffffffffffffff\n   107: jump @13 if a2 != 0\n      : @14 (gas: 1)\n   110: ret\n      : @15 (gas: 2)\n   112: a1 = i32 [0x20068]\n   117: jump @43 if a1 == 0\n      : @16 (gas: 4)\n   121: a0 = 0x30090\n   126: i32 a0 = a0 + 0\n   128: ecalli 8 // 'set_immutable_data'\n   130: jump @43\n      : @17 (gas: 8)\n   133: sp = sp + 0xfffffffffffffff0\n   136: u64 [sp + 0x8] = ra\n   139: u64 [sp] = s0\n   141: a2 = a1\n   143: s0 = a0\n   145: a1 = 0x20\n   148: a0 = a2\n   150: ra = 2, jump @26\n      : @18 [@dyn 1] (gas: 100)\n   155: a1 = u8 [a0 + 0x1]\n   158: a2 = u8 [a0]\n   160: a3 = u8 [a0 + 0x2]\n   163: a4 = u8 [a0 + 0x3]\n   166: a1 = a1 << 0x8\n   169: a1 = a1 | a2\n   172: a3 = a3 << 0x10\n   175: a4 = a4 << 0x18\n   178: a3 = a3 | a4\n   181: a1 = a1 | a3\n   184: a2 = u8 [a0 + 0x5]\n   187: a3 = u8 [a0 + 0x4]\n   190: a4 = u8 [a0 + 0x6]\n   193: a5 = u8 [a0 + 0x7]\n   196: a2 = a2 << 0x8\n   199: a2 = a2 | a3\n   202: a4 = a4 << 0x10\n   205: a5 = a5 << 0x18\n   208: a4 = a4 | a5\n   211: a2 = a2 | a4\n   214: a2 = a2 << 0x20\n   217: t0 = a2 | a1\n   220: a2 = u8 [a0 + 0x9]\n   223: a3 = u8 [a0 + 0x8]\n   226: a4 = u8 [a0 + 0xa]\n   229: a5 = u8 [a0 + 0xb]\n   232: a2 = a2 << 0x8\n   235: a2 = a2 | a3\n   238: a4 = a4 << 0x10\n   241: a5 = a5 << 0x18\n   244: a4 = a4 | a5\n   247: a2 = a2 | a4\n   250: a3 = u8 [a0 + 0xd]\n   253: a4 = u8 [a0 + 0xc]\n   256: a5 = u8 [a0 + 0xe]\n   259: a1 = u8 [a0 + 0xf]\n   262: a3 = a3 << 0x8\n   265: a3 = a3 | a4\n   268: a5 = a5 << 0x10\n   271: a1 = a1 << 0x18\n   274: a1 = a1 | a5\n   277: a1 = a1 | a3\n   280: a1 = a1 << 0x20\n   283: t1 = a1 | a2\n   286: a1 = u8 [a0 + 0x11]\n   289: a3 = u8 [a0 + 0x10]\n   292: a4 = u8 [a0 + 0x12]\n   295: a5 = u8 [a0 + 0x13]\n   298: a1 = a1 << 0x8\n   301: a1 = a1 | a3\n   304: a4 = a4 << 0x10\n   307: a5 = a5 << 0x18\n   310: a4 = a4 | a5\n   313: a1 = a1 | a4\n   316: a3 = u8 [a0 + 0x15]\n   319: a4 = u8 [a0 + 0x14]\n   322: a5 = u8 [a0 + 0x16]\n   325: a2 = u8 [a0 + 0x17]\n   328: a3 = a3 << 0x8\n   331: a3 = a3 | a4\n   334: a5 = a5 << 0x10\n   337: a2 = a2 << 0x18\n   340: a2 = a2 | a5\n   343: a2 = a2 | a3\n   346: a2 = a2 << 0x20\n   349: a3 = a2 | a1\n   352: a1 = u8 [a0 + 0x19]\n   355: a2 = u8 [a0 + 0x18]\n   358: a4 = u8 [a0 + 0x1a]\n   361: a5 = u8 [a0 + 0x1b]\n   364: a1 = a1 << 0x8\n   367: a1 = a1 | a2\n   370: a4 = a4 << 0x10\n   373: a5 = a5 << 0x18\n   376: a4 = a4 | a5\n   379: a1 = a1 | a4\n   382: a2 = u8 [a0 + 0x1d]\n   385: a4 = u8 [a0 + 0x1c]\n   388: a5 = u8 [a0 + 0x1e]\n   391: a0 = u8 [a0 + 0x1f]\n   394: a2 = a2 << 0x8\n   397: a2 = a2 | a4\n   400: a5 = a5 << 0x10\n   403: a0 = a0 << 0x18\n   406: a0 = a0 | a5\n   409: a0 = a0 | a2\n   412: a0 = a0 << 0x20\n   415: a0 = a0 | a1\n   418: a0 = reverse a0\n   420: a1 = reverse a3\n   422: a2 = reverse t1\n   424: a3 = reverse t0\n   426: u64 [s0 + 0x18] = a3\n   429: u64 [s0 + 0x10] = a2\n   432: u64 [s0 + 0x8] = a1\n   435: u64 [s0] = a0\n   437: ra = u64 [sp + 0x8]\n   440: s0 = u64 [sp]\n   442: sp = sp + 0x10\n   445: ret\n      : @19 (gas: 12)\n   447: sp = sp + 0xffffffffffffffd8\n   450: u64 [sp + 0x20] = ra\n   453: u64 [sp + 0x18] = s0\n   456: u64 [sp + 0x10] = s1\n   459: a2 = u64 [a1]\n   461: u64 [sp + 0x8] = a2\n   464: a2 = u64 [a1 + 0x8]\n   467: u64 [sp] = a2\n   469: s0 = u64 [a1 + 0x10]\n   472: s1 = u64 [a1 + 0x18]\n   475: a1 = 0x20\n   478: ra = 4, jump @26\n      : @20 [@dyn 2] (gas: 71)\n   483: a1 = reverse s1\n   485: a2 = reverse s0\n   487: a3 = u64 [sp]\n   489: a3 = reverse a3\n   491: a4 = u64 [sp + 0x8]\n   494: a4 = reverse a4\n   496: u8 [a0 + 0x18] = a4\n   499: u8 [a0 + 0x10] = a3\n   502: u8 [a0 + 0x8] = a2\n   505: u8 [a0] = a1\n   507: a5 = a4 >> 0x38\n   510: u8 [a0 + 0x1f] = a5\n   513: a5 = a4 >> 0x30\n   516: u8 [a0 + 0x1e] = a5\n   519: a5 = a4 >> 0x28\n   522: u8 [a0 + 0x1d] = a5\n   525: a5 = a4 >> 0x20\n   528: u8 [a0 + 0x1c] = a5\n   531: a5 = a4 >> 0x18\n   534: u8 [a0 + 0x1b] = a5\n   537: a5 = a4 >> 0x10\n   540: u8 [a0 + 0x1a] = a5\n   543: a4 = a4 >> 0x8\n   546: u8 [a0 + 0x19] = a4\n   549: a4 = a3 >> 0x38\n   552: u8 [a0 + 0x17] = a4\n   555: a4 = a3 >> 0x30\n   558: u8 [a0 + 0x16] = a4\n   561: a4 = a3 >> 0x28\n   564: u8 [a0 + 0x15] = a4\n   567: a4 = a3 >> 0x20\n   570: u8 [a0 + 0x14] = a4\n   573: a4 = a3 >> 0x18\n   576: u8 [a0 + 0x13] = a4\n   579: a4 = a3 >> 0x10\n   582: u8 [a0 + 0x12] = a4\n   585: a3 = a3 >> 0x8\n   588: u8 [a0 + 0x11] = a3\n   591: a3 = a2 >> 0x38\n   594: u8 [a0 + 0xf] = a3\n   597: a3 = a2 >> 0x30\n   600: u8 [a0 + 0xe] = a3\n   603: a3 = a2 >> 0x28\n   606: u8 [a0 + 0xd] = a3\n   609: a3 = a2 >> 0x20\n   612: u8 [a0 + 0xc] = a3\n   615: a3 = a2 >> 0x18\n   618: u8 [a0 + 0xb] = a3\n   621: a3 = a2 >> 0x10\n   624: u8 [a0 + 0xa] = a3\n   627: a2 = a2 >> 0x8\n   630: u8 [a0 + 0x9] = a2\n   633: a2 = a1 >> 0x38\n   636: u8 [a0 + 0x7] = a2\n   639: a2 = a1 >> 0x30\n   642: u8 [a0 + 0x6] = a2\n   645: a2 = a1 >> 0x28\n   648: u8 [a0 + 0x5] = a2\n   651: a2 = a1 >> 0x20\n   654: u8 [a0 + 0x4] = a2\n   657: a2 = a1 >> 0x18\n   660: u8 [a0 + 0x3] = a2\n   663: a2 = a1 >> 0x10\n   666: u8 [a0 + 0x2] = a2\n   669: a1 = a1 >> 0x8\n   672: u8 [a0 + 0x1] = a1\n   675: ra = u64 [sp + 0x20]\n   678: s0 = u64 [sp + 0x18]\n   681: s1 = u64 [sp + 0x10]\n   684: sp = sp + 0x28\n   687: ret\n      : @21 (gas: 43)\n   689: sp = sp + 0xffffffffffffffa0\n   692: u64 [sp + 0x58] = ra\n   695: u64 [sp + 0x50] = s0\n   698: u64 [sp + 0x48] = s1\n   701: s0 = sp + 0x60\n   704: sp = sp & 0xffffffffffffffe0\n   707: s1 = a0\n   709: a0 = u64 [a1 + 0x18]\n   712: a2 = u64 [a1 + 0x10]\n   715: a3 = u64 [a1 + 0x8]\n   718: a1 = u64 [a1]\n   720: a0 = reverse a0\n   722: a2 = reverse a2\n   724: a3 = reverse a3\n   726: a1 = reverse a1\n   728: u64 [sp + 0x18] = a1\n   731: u64 [sp + 0x10] = a3\n   734: u64 [sp + 0x8] = a2\n   737: u64 [sp] = a0\n   739: u64 [sp + 56] = 0\n   742: u64 [sp + 48] = 0\n   745: u64 [sp + 40] = 0\n   748: u64 [sp + 32] = 0\n   751: u32 [sp + 64] = 0x20\n   755: i32 a1 = sp + 0\n   757: i32 a3 = sp + 0x20\n   760: i32 a4 = sp + 0x40\n   763: a2 = 0xffffffffffffffff\n   766: a0 = 0\n   768: ecalli 5 // 'get_storage'\n   770: a0 = u64 [sp + 0x38]\n   773: a1 = u64 [sp + 0x30]\n   776: a2 = u64 [sp + 0x28]\n   779: a3 = u64 [sp + 0x20]\n   782: a0 = reverse a0\n   784: a1 = reverse a1\n   786: a2 = reverse a2\n   788: a3 = reverse a3\n   790: u64 [s1 + 0x18] = a3\n   793: u64 [s1 + 0x10] = a2\n   796: u64 [s1 + 0x8] = a1\n   799: u64 [s1] = a0\n   801: t0 = 6, jump @746\n      : @22 [@dyn 3] (gas: 1)\n   806: ret\n      : @23 (gas: 40)\n   808: sp = sp + 0xffffffffffffffa0\n   811: u64 [sp + 0x58] = ra\n   814: u64 [sp + 0x50] = s0\n   817: s0 = sp + 0x60\n   820: sp = sp & 0xffffffffffffffe0\n   823: t0 = u64 [a0]\n   825: a3 = u64 [a0 + 0x8]\n   828: a4 = u64 [a0 + 0x10]\n   831: a0 = u64 [a0 + 0x18]\n   834: t1 = u64 [a1]\n   836: a2 = u64 [a1 + 0x8]\n   839: a5 = u64 [a1 + 0x10]\n   842: a1 = u64 [a1 + 0x18]\n   845: t2 = reverse a0\n   847: a4 = reverse a4\n   849: a3 = reverse a3\n   851: a0 = reverse t0\n   853: t0 = reverse a1\n   855: a5 = reverse a5\n   857: a2 = reverse a2\n   859: a1 = reverse t1\n   861: u64 [sp + 0x18] = a0\n   864: u64 [sp + 0x10] = a3\n   867: u64 [sp + 0x8] = a4\n   870: u64 [sp] = t2\n   872: u64 [sp + 0x38] = a1\n   875: u64 [sp + 0x30] = a2\n   878: u64 [sp + 0x28] = a5\n   881: u64 [sp + 0x20] = t0\n   884: i32 a1 = sp + 0\n   886: i32 a3 = sp + 0x20\n   889: a2 = 0xffffffffffffffff\n   892: a4 = 0x20\n   895: a0 = 0\n   897: ecalli 9 // 'set_storage'\n   899: sp = s0 + 0xffffffffffffffa0\n   902: ra = u64 [sp + 0x58]\n   905: s0 = u64 [sp + 0x50]\n   908: sp = sp + 0x60\n   911: ret\n      : @24 (gas: 24)\n   913: sp = sp + 0xffffffffffffff60\n   917: u64 [sp + 0x98] = ra\n   921: u64 [sp + 0x90] = s0\n   925: u64 [sp + 0x88] = s1\n   929: s0 = sp + 0xa0\n   933: sp = sp & 0xffffffffffffffe0\n   936: a4 = u64 [a3]\n   938: u64 [sp + 0x38] = a4\n   941: a4 = u64 [a3 + 0x8]\n   944: u64 [sp + 0x30] = a4\n   947: a4 = u64 [a3 + 0x10]\n   950: u64 [sp + 0x28] = a4\n   953: a3 = u64 [a3 + 0x18]\n   956: u64 [sp + 0x20] = a3\n   959: a3 = u64 [a2]\n   961: u64 [sp + 0x18] = a3\n   964: a3 = u64 [a2 + 0x8]\n   967: u64 [sp + 0x10] = a3\n   970: a3 = u64 [a2 + 0x10]\n   973: u64 [sp + 0x8] = a3\n   976: a2 = u64 [a2 + 0x18]\n   979: u64 [sp] = a2\n   981: s1 = a1\n   983: ra = 8, jump @26\n      : @25 [@dyn 4] (gas: 35)\n   987: a1 = u64 [sp]\n   989: a1 = reverse a1\n   991: a2 = u64 [sp + 0x8]\n   994: a2 = reverse a2\n   996: a3 = u64 [sp + 0x10]\n   999: a3 = reverse a3\n  1001: a4 = u64 [sp + 0x18]\n  1004: a4 = reverse a4\n  1006: u64 [sp + 0x58] = a4\n  1009: u64 [sp + 0x50] = a3\n  1012: u64 [sp + 0x48] = a2\n  1015: u64 [sp + 0x40] = a1\n  1018: a1 = u64 [sp + 0x20]\n  1021: a1 = reverse a1\n  1023: a2 = u64 [sp + 0x28]\n  1026: a2 = reverse a2\n  1028: a3 = u64 [sp + 0x30]\n  1031: a3 = reverse a3\n  1033: a4 = u64 [sp + 0x38]\n  1036: a4 = reverse a4\n  1038: u64 [sp + 0x78] = a4\n  1041: u64 [sp + 0x70] = a3\n  1044: u64 [sp + 0x68] = a2\n  1047: u64 [sp + 0x60] = a1\n  1050: i32 a2 = a0 + 0\n  1052: i32 a3 = s1 + 0\n  1054: i32 a0 = sp + 0x40\n  1057: a1 = 0x2\n  1060: ecalli 4 // 'deposit_event'\n  1062: sp = s0 + 0xffffffffffffff60\n  1066: ra = u64 [sp + 0x98]\n  1070: s0 = u64 [sp + 0x90]\n  1074: s1 = u64 [sp + 0x88]\n  1078: sp = sp + 0xa0\n  1082: ret\n      : @26 (gas: 2)\n  1084: i32 a2 = a0 >> 0x10\n  1087: jump @31 if a2 != 0\n      : @27 (gas: 4)\n  1090: a1 = a1 + a0\n  1093: i32 a1 = a1 + 0x1f\n  1096: a1 = a1 & 0xffffffffffffffe0\n  1099: jump @31 if a1 >u 65536\n      : @28 (gas: 3)\n  1105: a2 = 0x20064\n  1110: a3 = i32 [0x20064]\n  1115: jump @30 if a3 >=u a1\n      : @29 (gas: 2)\n  1118: u32 [0x20064] = a1\n  1123: fallthrough\n      : @30 (gas: 4)\n  1124: a1 = 0x20070\n  1129: i32 a0 = a0 + 0\n  1131: a0 = a0 + a1\n  1134: ret\n      : @31 (gas: 1)\n  1136: trap\n      : @32 (gas: 6)\n  1137: sp = sp + 0xfffffffffffffff0\n  1140: u64 [sp + 0x8] = ra\n  1143: u64 [sp] = s0\n  1145: s0 = a0 & 0x1\n  1148: ecalli 2 // 'call_data_size'\n  1150: fallthrough\n      : @33 (gas: 2)\n  1151: u32 [0x20060] = a0\n  1156: jump @35 if s0 == 0\n      : @34 (gas: 1)\n  1159: ra = 10, jump @36\n      : @35 [@dyn 5] (gas: 1)\n  1163: ra = 12, jump @45\n      : @36 [@dyn 6] (gas: 12)\n  1168: sp = sp + 0xffffffffffffffa0\n  1171: u64 [sp + 0x58] = ra\n  1174: u64 [sp + 0x50] = s0\n  1177: s0 = sp + 0x60\n  1180: sp = sp & 0xffffffffffffffe0\n  1183: u64 [sp + 24] = 0\n  1186: u64 [sp + 16] = 0\n  1189: u64 [sp + 0] = 0x80\n  1193: a0 = 0x40\n  1196: a1 = sp\n  1198: u64 [sp + 8] = 0\n  1201: ra = 14, jump @19\n      : @37 [@dyn 7] (gas: 7)\n  1206: u64 [sp + 56] = 0\n  1209: u64 [sp + 48] = 0\n  1212: u64 [sp + 40] = 0\n  1215: u64 [sp + 32] = 0\n  1218: i32 a0 = sp + 0x20\n  1221: ecalli 10 // 'value_transferred'\n  1223: fallthrough\n      : @38 (gas: 8)\n  1224: a0 = u64 [sp + 0x30]\n  1227: a1 = u64 [sp + 0x38]\n  1230: a2 = u64 [sp + 0x28]\n  1233: a3 = u64 [sp + 0x20]\n  1236: a1 = a1 | a2\n  1239: a0 = a0 | a3\n  1242: a0 = a0 | a1\n  1245: jump @40 if a0 == 0\n      : @39 (gas: 7)\n  1248: a1 = 0x20070\n  1253: i32 a1 = a1 + 0\n  1255: a0 = 0x1\n  1258: a2 = 0\n  1260: ra = 0x12\n  1263: ecalli 7 // 'seal_return'\n  1265: jump @45\n      : @40 (gas: 2)\n  1267: a1 = i32 [0x20064]\n  1272: jump @42 if a1 >u 127\n      : @41 (gas: 2)\n  1276: u32 [0x20064] = 0x80\n  1283: fallthrough\n      : @42 (gas: 6)\n  1284: a0 = 0x20070\n  1289: i32 a0 = a0 + 0x80\n  1293: a1 = 0\n  1295: a2 = 0\n  1297: ecalli 0 // 'call_data_copy'\n  1298: jump @15\n      : @43 (gas: 3)\n  1301: a0 = 0x80\n  1305: a1 = 0\n  1307: ra = 16, jump @26\n      : @44 [@dyn 8] (gas: 6)\n  1312: i32 a1 = a0 + 0\n  1314: a0 = 0\n  1316: a2 = 0\n  1318: ra = 0x12\n  1321: ecalli 7 // 'seal_return'\n  1323: fallthrough\n      : @45 [@dyn 9] (gas: 16)\n  1324: sp = sp + 0xfffffffffffffe10\n  1328: u64 [sp + 0x1e8] = ra\n  1332: u64 [sp + 0x1e0] = s0\n  1336: u64 [sp + 0x1d8] = s1\n  1340: s0 = sp + 0x1f0\n  1344: sp = sp + 0xffffffffffffe6b0\n  1348: sp = sp & 0xffffffffffffffe0\n  1351: s1 = sp\n  1353: a2 = s1 + 0x10d8\n  1357: u64 [a2 + 1440] = 0\n  1361: u64 [a2 + 1432] = 0\n  1365: u64 [a2 + 1416] = 0x80\n  1371: a0 = 0x40\n  1374: a1 = s1 + 0x1660\n  1378: u64 [a2 + 1424] = 0\n  1382: ra = 20, jump @19\n      : @46 [@dyn 10] (gas: 4)\n  1387: a0 = 0x20060\n  1392: u64 [s1 + 0x178] = a0\n  1396: a0 = i32 [0x20060]\n  1401: jump @48 if a0 >=u 4\n      : @47 (gas: 1)\n  1405: jump @550\n      : @48 (gas: 6)\n  1408: a0 = s1 + 0x1000\n  1412: i32 a0 = a0 + 0x680\n  1416: a1 = 0\n  1418: ra = 0x16\n  1421: ecalli 1 // 'call_data_load'\n  1423: fallthrough\n      : @49 [@dyn 11] (gas: 3)\n  1424: a2 = s1 + 0x10d8\n  1428: a0 = i32 [a2 + 0x5c4]\n  1432: jump @51 if a0 != 2832525844\n      : @50 (gas: 1)\n  1439: jump @161\n      : @51 (gas: 1)\n  1442: jump @76 if a0 == 200619624\n      : @52 (gas: 1)\n  1450: jump @109 if a0 == 320949534\n      : @53 (gas: 1)\n  1458: jump @55 if a0 == 364554432\n      : @54 (gas: 1)\n  1465: jump @190\n      : @55 (gas: 10)\n  1468: u64 [a2 + 1632] = 0\n  1472: u64 [a2 + 1624] = 0\n  1476: u64 [a2 + 1616] = 0\n  1480: u64 [a2 + 1608] = 0\n  1484: a0 = s1 + 0x1000\n  1488: i32 a0 = a0 + 0x720\n  1492: ra = 0x18\n  1495: ecalli 10 // 'value_transferred'\n  1497: t0 = 0x1a\n  1500: jump @745\n      : @56 [@dyn 12] (gas: 1)\n  1503: t0 = 26, jump @745\n      : @57 [@dyn 13] (gas: 8)\n  1508: a0 = u64 [a4 + 0x58]\n  1511: a1 = u64 [a4 + 0x60]\n  1514: a2 = u64 [a4 + 0x50]\n  1517: a3 = u64 [a4 + 0x48]\n  1520: a1 = a1 | a2\n  1523: a0 = a0 | a3\n  1526: a0 = a0 | a1\n  1529: jump @59 if a0 == 0\n      : @58 (gas: 1)\n  1532: jump @553\n      : @59 (gas: 3)\n  1535: a0 = u64 [s1 + 0x178]\n  1539: a0 = i32 [a0]\n  1541: jump @61 if a0 >u 35\n      : @60 (gas: 1)\n  1545: jump @554\n      : @61 (gas: 22)\n  1548: a0 = s1 + 0x1000\n  1552: i32 a0 = a0 + 0x740\n  1556: a1 = 0x4\n  1559: ecalli 1 // 'call_data_load'\n  1561: a1 = s1 + 0x10d8\n  1565: a2 = a1 + 0x600\n  1569: a0 = u64 [a2 + 0x80]\n  1573: u64 [s1 + 0x168] = a0\n  1577: a0 = u64 [a2 + 0x78]\n  1580: u64 [s1 + 0x178] = a0\n  1584: a0 = u64 [a2 + 0x70]\n  1587: u64 [s1 + 0x160] = a0\n  1591: a0 = u64 [a2 + 0x68]\n  1594: u64 [s1 + 0x158] = a0\n  1598: u64 [a1 + 1696] = 0\n  1602: u64 [a1 + 1688] = 0\n  1606: u64 [a1 + 1680] = 0\n  1610: u64 [a2 + 136] = 0x1\n  1615: a0 = s1 + 0x7ff\n  1619: a0 = a0 + 0xe1\n  1623: a1 = s1 + 0x1760\n  1627: ra = 28, jump @21\n      : @62 [@dyn 14] (gas: 24)\n  1632: t2 = u64 [s1 + 0x168]\n  1636: t1 = u64 [s1 + 0x160]\n  1640: t0 = u64 [s1 + 0x158]\n  1644: a0 = s1 + 0x1000\n  1648: a0 = u64 [a0 + 0xfffffffffffff8e8]\n  1652: a1 = s1 + 0x1000\n  1656: a1 = u64 [a1 + 0xfffffffffffff8e0]\n  1660: a3 = s1 + 0x7ff\n  1664: a3 = a3 + 0xd9\n  1668: a2 = u64 [a3 + 0x18]\n  1671: a3 = u64 [a3 + 0x20]\n  1674: a4 = t1 ^ a0\n  1677: a0 = t1 <u a0\n  1680: a1 = t0 <u a1\n  1683: a1 = a0 if a4 != 0\n  1686: a0 = t2 ^ a3\n  1689: a5 = t2 <u a3\n  1692: a3 = u64 [s1 + 0x178]\n  1696: a4 = a3 <u a2\n  1699: a4 = a5 if a0 != 0\n  1702: a2 = a2 ^ a3\n  1705: a0 = a0 | a2\n  1708: a1 = a4 if a0 != 0\n  1711: jump @64 if a1 != 0\n      : @63 (gas: 1)\n  1714: jump @555\n      : @64 (gas: 17)\n  1717: a0 = sp + 0xffffffffffffffe0\n  1720: a0 = a0 & 0xffffffffffffffe0\n  1723: u64 [s1 + 0x170] = a0\n  1727: sp = a0\n  1729: a0 = s1 + 0x1000\n  1733: u64 [a0 + 0xfffffffffffff898] = t2\n  1737: a0 = s1 + 0x1000\n  1741: u64 [a0 + 0xfffffffffffff890] = a3\n  1745: a0 = s1 + 0x1000\n  1749: u64 [a0 + 0xfffffffffffff888] = t1\n  1753: a0 = s1 + 0x7ff\n  1757: a0 = a0 + 0xa1\n  1761: a1 = s1 + 0x7ff\n  1765: a1 = a1 + 0x81\n  1769: a2 = s1 + 0x1000\n  1773: u64 [a2 + 0xfffffffffffff880] = t0\n  1777: ra = 30, jump @661\n      : @65 [@dyn 15] (gas: 29)\n  1782: a1 = s1 + 0x7ff\n  1786: a1 = a1 + 0xd9\n  1790: a0 = u64 [a1]\n  1792: u64 [s1 + 0x140] = a0\n  1796: a0 = u64 [a1 + 0xfffffffffffffff8]\n  1799: u64 [s1 + 0x150] = a0\n  1803: a0 = s1 + 0x1000\n  1807: a0 = u64 [a0 + 0xfffffffffffff8c8]\n  1811: u64 [s1 + 0x148] = a0\n  1815: a0 = s1 + 0x1000\n  1819: a0 = u64 [a0 + 0xfffffffffffff8c0]\n  1823: u64 [s1 + 0x158] = a0\n  1827: a0 = s1 + 0x1000\n  1831: a0 = u64 [a0 + 0xfffffffffffff8b0]\n  1835: a1 = s1 + 0x1000\n  1839: a1 = u64 [a1 + 0xfffffffffffff8b8]\n  1843: a2 = s1 + 0x1000\n  1847: a2 = u64 [a2 + 0xfffffffffffff8a0]\n  1851: a3 = s1 + 0x1000\n  1855: a3 = u64 [a3 + 0xfffffffffffff8a8]\n  1859: a4 = u64 [s1 + 0x170]\n  1863: u64 [a4 + 0x10] = a0\n  1866: u64 [a4 + 0x18] = a1\n  1869: u64 [a4] = a2\n  1871: u64 [a4 + 0x8] = a3\n  1874: a1 = a4\n  1876: a0 = s1 + 0x7ff\n  1880: a0 = a0 + 0x61\n  1883: ra = 32, jump @21\n      : @66 [@dyn 16] (gas: 17)\n  1888: a0 = s1 + 0x1000\n  1892: a0 = u64 [a0 + 0xfffffffffffff878]\n  1896: a1 = s1 + 0x100\n  1900: u64 [a1 + 0x78] = a0\n  1903: a0 = s1 + 0x1000\n  1907: a0 = u64 [a0 + 0xfffffffffffff870]\n  1911: u64 [a1 + 0x70] = a0\n  1914: a0 = s1 + 0x1000\n  1918: a0 = u64 [a0 + 0xfffffffffffff868]\n  1922: u64 [a1 + 0x60] = a0\n  1925: a0 = s1 + 0x1000\n  1929: a0 = u64 [a0 + 0xfffffffffffff860]\n  1933: u64 [a1 + 0x68] = a0\n  1936: a0 = s1 + 0x7ff\n  1940: a0 = a0 + 0x41\n  1943: a1 = 0x40\n  1946: ra = 34, jump @17\n      : @67 [@dyn 17] (gas: 16)\n  1951: a0 = s1 + 0x1000\n  1955: a0 = u64 [a0 + 0xfffffffffffff858]\n  1959: a1 = s1 + 0x1000\n  1963: a1 = u64 [a1 + 0xfffffffffffff850]\n  1967: a2 = s1 + 0x1000\n  1971: a2 = u64 [a2 + 0xfffffffffffff848]\n  1975: a3 = s1 + 0x1000\n  1979: a3 = u64 [a3 + 0xfffffffffffff840]\n  1983: a0 = a0 | a2\n  1986: a2 = a3 | a1\n  1989: a2 = a2 | a0\n  1992: a2 = a2 >> 0x20\n  1995: a0 = a0 | a1\n  1998: a0 = a0 << 0x20\n  2001: a0 = a0 | a2\n  2004: jump @69 if a0 == 0\n      : @68 (gas: 1)\n  2007: jump @549\n      : @69 (gas: 30)\n  2010: a0 = u64 [s1 + 0x158]\n  2014: a2 = a0 >> 0x3d\n  2017: a5 = u64 [s1 + 0x148]\n  2021: a1 = a5 << 0x3\n  2024: t1 = a1 | a2\n  2027: a4 = u64 [s1 + 0x150]\n  2031: a1 = a4 >> 0x3d\n  2034: a2 = u64 [s1 + 0x140]\n  2038: a2 = a2 << 0x3\n  2041: a1 = a1 | a2\n  2044: a2 = a5 >> 0x3d\n  2047: u64 [s1 + 0x148] = a3\n  2051: a3 = a4 << 0x3\n  2054: a2 = a2 | a3\n  2057: a3 = a0 << 0x3\n  2060: u64 [s1 + 0x150] = a3\n  2064: a5 = a2 >u 0\n  2066: a4 = a1 >u 0\n  2068: a4 = a5 if a1 == 0\n  2071: t0 = t1 >u 0\n  2073: a5 = a3 <u 0x100\n  2077: a5 = a5 ^ 0x1\n  2080: a5 = t0 if t1 != 0\n  2083: a1 = a1 | a2\n  2086: a5 = a4 if a1 != 0\n  2089: u64 [s1 + 0x140] = a5\n  2093: i32 a2 = a3 + 0xffffffffffffff80\n  2096: a0 = u64 [s1 + 0x170]\n  2100: a1 = u64 [s1 + 0x178]\n  2104: ra = 36, jump @748\n      : @70 [@dyn 18] (gas: 8)\n  2109: u64 [s1 + 0x138] = a0\n  2113: u64 [s1 + 0x130] = a1\n  2117: a0 = u64 [s1 + 0x158]\n  2121: i32 a2 = a0 << 0x3\n  2124: u64 [s1 + 0x158] = a2\n  2128: a0 = u64 [s1 + 0x168]\n  2132: a1 = u64 [s1 + 0x160]\n  2136: ra = 38, jump @748\n      : @71 [@dyn 19] (gas: 7)\n  2141: u64 [s1 + 0x120] = a0\n  2145: u64 [s1 + 0x128] = a1\n  2149: a1 = u64 [s1 + 0x150]\n  2153: i32 a2 = 0x80 - a1\n  2157: a0 = u64 [s1 + 0x170]\n  2161: a1 = u64 [s1 + 0x178]\n  2165: ra = 40, jump @753\n      : @72 [@dyn 20] (gas: 21)\n  2170: a2 = u64 [s1 + 0x128]\n  2174: a2 = a2 | a1\n  2177: a1 = u64 [s1 + 0x150]\n  2181: a3 = a1 <u 0x80\n  2185: u64 [s1 + 0x128] = a3\n  2189: a4 = u64 [s1 + 0x130]\n  2193: a2 = a4 if a3 == 0\n  2196: a4 = u64 [s1 + 0x160]\n  2200: a2 = a4 if a1 == 0\n  2203: u64 [s1 + 0x160] = a2\n  2207: a2 = u64 [s1 + 0x120]\n  2211: a0 = a0 | a2\n  2214: a2 = u64 [s1 + 0x138]\n  2218: a0 = a2 if a3 == 0\n  2221: a2 = u64 [s1 + 0x168]\n  2225: a0 = a2 if a1 == 0\n  2228: u64 [s1 + 0x168] = a0\n  2232: a0 = u64 [s1 + 0x170]\n  2236: a1 = u64 [s1 + 0x178]\n  2240: a2 = u64 [s1 + 0x158]\n  2244: ra = 42, jump @748\n      : @73 [@dyn 21] (gas: 24)\n  2249: a1 = 0\n  2251: a2 = u64 [s1 + 0x128]\n  2255: a0 = 0 if a2 == 0\n  2257: a0 = a0 << 0x20\n  2260: a0 = a0 >> 0x20\n  2263: a2 = u64 [s1 + 0x140]\n  2267: a4 = u64 [s1 + 0x168]\n  2271: a4 = 0 if a2 != 0\n  2273: a3 = u64 [s1 + 0x160]\n  2277: a3 = 0 if a2 != 0\n  2279: a0 = 0 if a2 != 0\n  2281: a1 = 0 if a2 == 0\n  2283: a2 = s1 + 0x1000\n  2287: u64 [a2 + 0xfffffffffffff838] = a1\n  2291: a1 = s1 + 0x1000\n  2295: u64 [a1 + 0xfffffffffffff830] = a0\n  2299: a0 = s1 + 0x1000\n  2303: u64 [a0 + 0xfffffffffffff828] = a3\n  2307: a1 = s1 + 0x7ff\n  2311: a1 = a1 + 0x21\n  2314: a0 = s1 + 0x1000\n  2318: u64 [a0 + 0xfffffffffffff820] = a4\n  2322: a0 = u64 [s1 + 0x148]\n  2326: ra = 44, jump @19\n      : @74 [@dyn 22] (gas: 3)\n  2331: a1 = 0x20\n  2334: a0 = u64 [s1 + 0x148]\n  2338: ra = 46, jump @26\n      : @75 [@dyn 23] (gas: 5)\n  2343: i32 a1 = a0 + 0\n  2345: a2 = 0x20\n  2348: a0 = 0\n  2350: ecalli 7 // 'seal_return'\n  2352: fallthrough\n      : @76 (gas: 8)\n  2353: u64 [a2 + 1504] = 0\n  2357: u64 [a2 + 1496] = 0\n  2361: u64 [a2 + 1488] = 0\n  2365: u64 [a2 + 1480] = 0\n  2369: a0 = s1 + 0x1000\n  2373: i32 a0 = a0 + 0x6a0\n  2377: ecalli 10 // 'value_transferred'\n  2379: fallthrough\n      : @77 (gas: 10)\n  2380: a3 = s1 + 0x10d8\n  2384: a4 = a3 + 0x500\n  2388: a0 = u64 [a4 + 0xd8]\n  2392: a1 = u64 [a4 + 0xe0]\n  2396: a2 = u64 [a4 + 0xd0]\n  2400: a3 = u64 [a4 + 0xc8]\n  2404: a1 = a1 | a2\n  2407: a0 = a0 | a3\n  2410: a0 = a0 | a1\n  2413: jump @79 if a0 == 0\n      : @78 (gas: 1)\n  2416: jump @556\n      : @79 (gas: 3)\n  2419: a0 = u64 [s1 + 0x178]\n  2423: a0 = i32 [a0]\n  2425: jump @81 if a0 >u 35\n      : @80 (gas: 1)\n  2429: jump @557\n      : @81 (gas: 5)\n  2432: a0 = s1 + 0x1000\n  2436: i32 a0 = a0 + 0x6c0\n  2440: a1 = 0x4\n  2443: ecalli 1 // 'call_data_load'\n  2445: fallthrough\n      : @82 (gas: 11)\n  2446: a4 = s1 + 0x10d8\n  2450: a1 = u64 [a4 + 0x5f8]\n  2454: a0 = u64 [a4 + 0x600]\n  2458: a2 = 0x100000000\n  2468: a2 = a2 ^ a1\n  2471: a2 = a2 | a0\n  2474: a3 = a1 >> 0x20\n  2477: a3 = a3 <u 0x1\n  2480: a3 = 0 if a0 != 0\n  2482: a3 = 0 if a2 == 0\n  2484: jump @84 if a3 != 0\n      : @83 (gas: 1)\n  2487: jump @558\n      : @84 (gas: 10)\n  2490: a2 = u64 [a4 + 0x5f0]\n  2494: a3 = u64 [a4 + 0x5e8]\n  2498: a4 = s1 + 0x400\n  2502: u64 [a4 + 0x60] = a3\n  2505: u64 [a4 + 0x68] = a2\n  2508: u64 [a4 + 0x70] = a1\n  2511: a1 = s1 + 0x460\n  2515: u64 [a4 + 0x78] = a0\n  2518: a0 = 0\n  2520: ra = 48, jump @19\n      : @85 [@dyn 24] (gas: 7)\n  2525: u64 [s1 + 1112] = 0\n  2529: u64 [s1 + 1104] = 0\n  2533: u64 [s1 + 1096] = 0\n  2537: a0 = 0x20\n  2540: a1 = s1 + 0x440\n  2544: u64 [s1 + 1088] = 0\n  2548: ra = 50, jump @19\n      : @86 [@dyn 25] (gas: 6)\n  2553: a0 = sp + 0xffffffffffffffe0\n  2556: a0 = a0 & 0xffffffffffffffe0\n  2559: u64 [s1 + 0x158] = a0\n  2563: sp = a0\n  2565: a1 = i32 [0x20064]\n  2570: jump @88 if a1 >u 63\n      : @87 (gas: 4)\n  2574: a1 = 0x40\n  2577: u32 [0x20064] = a1\n  2582: t0 = 0x34\n  2585: jump @737\n      : @88 (gas: 1)\n  2588: t0 = 52, jump @737\n      : @89 [@dyn 26] (gas: 25)\n  2593: a0 = 0x20070\n  2598: i32 a0 = a0 + 0\n  2600: i32 a2 = a2 + 0\n  2602: a1 = 0x40\n  2605: ecalli 6 // 'hash_keccak_256'\n  2607: a3 = u64 [s1 + 0x178]\n  2611: a0 = u64 [a3 + 0x18]\n  2614: a1 = u64 [a3 + 0x10]\n  2617: a2 = u64 [a3 + 0x8]\n  2620: a3 = u64 [a3]\n  2622: a4 = reverse a0\n  2624: u64 [s1 + 0x168] = a4\n  2628: a5 = reverse a1\n  2630: u64 [s1 + 0x170] = a5\n  2634: a2 = reverse a2\n  2636: u64 [s1 + 0x160] = a2\n  2640: a0 = reverse a3\n  2642: u64 [s1 + 0x178] = a0\n  2646: a1 = u64 [s1 + 0x158]\n  2650: u64 [a1 + 0x18] = a0\n  2653: u64 [a1 + 0x10] = a2\n  2656: u64 [a1 + 0x8] = a5\n  2659: u64 [a1] = a4\n  2661: a0 = s1 + 0x420\n  2665: ra = 54, jump @21\n      : @90 [@dyn 27] (gas: 30)\n  2670: a0 = u64 [s1 + 0x430]\n  2674: u64 [s1 + 0x128] = a0\n  2678: a0 = u64 [s1 + 0x428]\n  2682: u64 [s1 + 0x138] = a0\n  2686: a0 = u64 [s1 + 0x420]\n  2690: u64 [s1 + 0x130] = a0\n  2694: a0 = u64 [s1 + 0x168]\n  2698: a0 = a0 + 0x1\n  2701: a1 = a0 <u 0x1\n  2704: a2 = u64 [s1 + 0x170]\n  2708: a1 = a1 + a2\n  2711: a2 = a0 | a1\n  2714: a2 = a2 <u 0x1\n  2717: a3 = u64 [s1 + 0x160]\n  2721: a2 = a2 + a3\n  2724: a3 = a2 <u a3\n  2727: a4 = u64 [s1 + 0x178]\n  2731: a3 = a3 + a4\n  2734: u64 [s1 + 984] = 0\n  2738: u64 [s1 + 976] = 0\n  2742: u64 [s1 + 968] = 0\n  2746: u64 [s1 + 960] = 0x80\n  2752: u64 [s1 + 0x3e8] = a1\n  2756: u64 [s1 + 0x3e0] = a0\n  2760: u64 [s1 + 0x3f0] = a2\n  2764: a0 = s1 + 0x400\n  2768: a1 = s1 + 0x3e0\n  2772: a2 = s1 + 0x3c0\n  2776: u64 [s1 + 0x3f8] = a3\n  2780: ra = 56, jump @591\n      : @91 [@dyn 28] (gas: 29)\n  2785: a1 = s1 + 0x400\n  2789: a0 = u64 [a1]\n  2791: t0 = u64 [s1 + 0x418]\n  2795: a2 = u64 [a1 + 0x8]\n  2798: a3 = u64 [a1 + 0x10]\n  2801: a4 = a0 + 0xffffffffffffff80\n  2804: a0 = a4 <u a0\n  2807: a5 = a2 + a0\n  2810: a5 = a5 + 0xffffffffffffffff\n  2813: a1 = a5 ^ a2\n  2816: a2 = a5 <u a2\n  2819: a2 = a0 if a1 == 0\n  2822: a0 = a3 + 0xffffffffffffffff\n  2825: a2 = a2 + a0\n  2828: a0 = a2 <u a0\n  2831: a1 = a3 <u 0x1\n  2834: a1 = t0 - a1\n  2837: a3 = a1 + a0\n  2840: u64 [s1 + 0x380] = a4\n  2844: u64 [s1 + 952] = 0\n  2848: u64 [s1 + 944] = 0\n  2852: u64 [s1 + 936] = 0\n  2856: u64 [s1 + 928] = 0x80\n  2862: u64 [s1 + 0x388] = a5\n  2866: u64 [s1 + 0x390] = a2\n  2870: a0 = s1 + 0x3a0\n  2874: a1 = s1 + 0x380\n  2878: u64 [s1 + 0x398] = a3\n  2882: ra = 58, jump @620\n      : @92 [@dyn 29] (gas: 3)\n  2887: a0 = s1 + 0x360\n  2891: a1 = 0x40\n  2894: ra = 60, jump @17\n      : @93 [@dyn 30] (gas: 32)\n  2899: a5 = u64 [s1 + 0x378]\n  2903: u64 [s1 + 0x140] = a5\n  2907: t1 = u64 [s1 + 0x370]\n  2911: u64 [s1 + 0x148] = t1\n  2915: t2 = u64 [s1 + 0x368]\n  2919: u64 [s1 + 0x150] = t2\n  2923: a3 = u64 [s1 + 0x360]\n  2927: u64 [s1 + 0x158] = a3\n  2931: a0 = u64 [s1 + 0x168]\n  2935: t0 = a0 + 0x2\n  2938: a0 = t0 <u a0\n  2941: a2 = u64 [s1 + 0x170]\n  2945: a1 = a2 + a0\n  2948: a2 = a1 <u a2\n  2951: a2 = a0 if a0 == 0\n  2954: a0 = u64 [s1 + 0x160]\n  2958: a2 = a2 + a0\n  2961: a0 = a2 <u a0\n  2964: a4 = u64 [s1 + 0x178]\n  2968: a0 = a0 + a4\n  2971: u64 [s1 + 0x318] = a5\n  2975: u64 [s1 + 0x310] = t1\n  2979: u64 [s1 + 0x308] = t2\n  2983: u64 [s1 + 0x300] = a3\n  2987: u64 [s1 + 0x338] = a0\n  2991: u64 [s1 + 0x330] = a2\n  2995: u64 [s1 + 0x328] = a1\n  2999: a0 = s1 + 0x340\n  3003: a1 = s1 + 0x320\n  3007: a2 = s1 + 0x300\n  3011: u64 [s1 + 0x320] = t0\n  3015: ra = 62, jump @591\n      : @94 [@dyn 31] (gas: 39)\n  3020: a4 = s1 + 0x300\n  3024: a0 = u64 [a4 + 0x48]\n  3027: a1 = u64 [a4 + 0x58]\n  3030: u64 [s1 + 0x170] = a1\n  3034: a2 = u64 [a4 + 0x40]\n  3037: u64 [s1 + 0x178] = a2\n  3041: a3 = u64 [a4 + 0x50]\n  3044: a1 = u64 [s1 + 0x150]\n  3048: a4 = a0 ^ a1\n  3051: a5 = a0 <u a1\n  3054: t1 = u64 [s1 + 0x158]\n  3058: t2 = a2 <u t1\n  3061: a5 = t2 if a4 == 0\n  3064: a2 = u64 [s1 + 0x148]\n  3068: a4 = a3 - a2\n  3071: a3 = a3 <u a2\n  3074: ra = a2\n  3076: t0 = u64 [s1 + 0x140]\n  3080: a2 = u64 [s1 + 0x170]\n  3084: a2 = a2 - t0\n  3087: a2 = a2 - a3\n  3090: a3 = a4 <u a5\n  3093: a2 = a2 - a3\n  3096: a4 = a4 - a5\n  3099: a0 = a0 - a1\n  3102: a0 = a0 - t2\n  3105: a5 = u64 [s1 + 0x178]\n  3109: a5 = a5 - t1\n  3112: u64 [s1 + 0x2c0] = a5\n  3116: u64 [s1 + 0x2f8] = t0\n  3120: u64 [s1 + 0x2f0] = ra\n  3124: u64 [s1 + 0x2e8] = a1\n  3128: u64 [s1 + 0x2e0] = t1\n  3132: u64 [s1 + 0x2c8] = a0\n  3136: u64 [s1 + 0x2d0] = a4\n  3140: a0 = s1 + 0x2e0\n  3144: a1 = s1 + 0x2c0\n  3148: u64 [s1 + 0x2d8] = a2\n  3152: ra = 64, jump @620\n      : @95 [@dyn 32] (gas: 3)\n  3157: a0 = s1 + 0x2a0\n  3161: a1 = 0x40\n  3164: ra = 66, jump @17\n      : @96 [@dyn 33] (gas: 14)\n  3169: a1 = s1 + 0x200\n  3173: a4 = u64 [a1 + 0xb8]\n  3177: a5 = u64 [a1 + 0xb0]\n  3181: a3 = u64 [a1 + 0xa8]\n  3185: a0 = u64 [a1 + 0xa0]\n  3189: a2 = a3 | a4\n  3192: a1 = a0 | a5\n  3195: a1 = a1 | a2\n  3198: a1 = a1 >> 0x20\n  3201: u64 [s1 + 0x170] = a5\n  3205: a2 = a2 | a5\n  3208: a2 = a2 << 0x20\n  3211: a1 = a1 | a2\n  3214: jump @98 if a1 == 0\n      : @97 (gas: 1)\n  3217: jump @549\n      : @98 (gas: 15)\n  3220: a1 = u64 [s1 + 0x128]\n  3224: a1 = a1 << 0x20\n  3227: a2 = a1 >> 0x20\n  3230: u64 [s1 + 664] = 0\n  3234: a1 = u64 [s1 + 0x130]\n  3238: a5 = s1 + 0x200\n  3242: u64 [a5 + 0x80] = a1\n  3246: a1 = u64 [s1 + 0x138]\n  3250: u64 [a5 + 0x88] = a1\n  3254: a1 = s1 + 0x280\n  3258: u64 [a5 + 0x90] = a2\n  3262: u64 [s1 + 0x178] = a0\n  3266: u64 [s1 + 0x168] = a3\n  3270: u64 [s1 + 0x160] = a4\n  3274: ra = 68, jump @19\n      : @99 [@dyn 34] (gas: 11)\n  3279: a3 = u64 [s1 + 0x160]\n  3283: a1 = u64 [s1 + 0x178]\n  3287: a0 = u64 [s1 + 0x170]\n  3291: a4 = a0 | a3\n  3294: a5 = 0x100000000\n  3304: a0 = 0xffffffe0\n  3314: a0 = a1 <u a0\n  3317: a2 = u64 [s1 + 0x168]\n  3321: a0 = 0 if a2 != 0\n  3323: a0 = 0 if a4 != 0\n  3325: jump @101 if a0 != 0\n      : @100 (gas: 1)\n  3328: jump @549\n      : @101 (gas: 9)\n  3331: i32 a0 = a1 + 0x20\n  3334: u64 [s1 + 632] = 0\n  3338: u64 [s1 + 624] = 0\n  3342: u64 [s1 + 608] = 0x60\n  3347: a1 = s1 + 0x260\n  3351: u64 [s1 + 616] = 0\n  3355: u64 [s1 + 0x138] = a4\n  3359: u64 [s1 + 0x130] = a5\n  3363: ra = 70, jump @19\n      : @102 [@dyn 35] (gas: 27)\n  3368: a0 = u64 [s1 + 0x178]\n  3372: a0 = a0 + 0x60\n  3375: a1 = u64 [s1 + 0x178]\n  3379: a1 = a0 <u a1\n  3382: a2 = u64 [s1 + 0x168]\n  3386: a2 = a2 + a1\n  3389: a3 = u64 [s1 + 0x168]\n  3393: a3 = a2 <u a3\n  3396: a3 = a1 if a1 == 0\n  3399: a1 = u64 [s1 + 0x170]\n  3403: a3 = a3 + a1\n  3406: a1 = a3 <u a1\n  3409: a4 = u64 [s1 + 0x160]\n  3413: a4 = a4 + a1\n  3416: a5 = s1 + 0x200\n  3420: u64 [a5 + 0x8] = a2\n  3423: u64 [a5] = a0\n  3425: u64 [s1 + 568] = 0\n  3429: u64 [s1 + 560] = 0\n  3433: u64 [s1 + 552] = 0\n  3437: u64 [a5 + 32] = 0x80\n  3442: u64 [a5 + 0x10] = a3\n  3445: a0 = s1 + 0x240\n  3449: a1 = s1 + 0x220\n  3453: a2 = s1 + 0x200\n  3457: u64 [a5 + 0x18] = a4\n  3460: ra = 72, jump @629\n      : @103 [@dyn 36] (gas: 10)\n  3465: a3 = s1 + 0x100\n  3469: a4 = u64 [a3 + 0x68]\n  3472: a1 = u64 [a3 + 0x78]\n  3475: a0 = u64 [a3 + 0x30]\n  3478: a0 = a0 + 0xffffffffffffffc0\n  3481: a0 = a1 <u a0\n  3484: a0 = 0 if a4 != 0\n  3486: a2 = u64 [a3 + 0x38]\n  3489: a0 = 0 if a2 != 0\n  3491: jump @105 if a0 != 0\n      : @104 (gas: 1)\n  3494: jump @549\n      : @105 (gas: 37)\n  3497: a0 = s1 + 0x200\n  3501: a2 = u64 [a0 + 0x40]\n  3504: a3 = u64 [a0 + 0x48]\n  3507: t2 = u64 [s1 + 0x258]\n  3511: u64 [s1 + 0x130] = t2\n  3515: a5 = u64 [a0 + 0x50]\n  3518: u64 [s1 + 0x138] = a5\n  3522: t1 = a2 <u a1\n  3525: t0 = a2\n  3527: u64 [s1 + 0x120] = a2\n  3531: a1 = a3 ^ a4\n  3534: a2 = a3 <u a4\n  3537: a0 = a3\n  3539: u64 [s1 + 0x128] = a3\n  3543: a2 = t1 if a1 == 0\n  3546: a3 = u64 [s1 + 0x170]\n  3550: a1 = a5 - a3\n  3553: a3 = a5 <u a3\n  3556: a5 = a4\n  3558: a4 = u64 [s1 + 0x160]\n  3562: a4 = t2 - a4\n  3565: a4 = a4 - a3\n  3568: a3 = a1 <u a2\n  3571: a4 = a4 - a3\n  3574: a1 = a1 - a2\n  3577: a2 = a0 - a5\n  3580: a2 = a2 - t1\n  3583: a0 = u64 [s1 + 0x178]\n  3587: a3 = t0 - a0\n  3590: a0 = u64 [s1 + 0x178]\n  3594: i32 a0 = a0 + 0x40\n  3597: u64 [s1 + 0x1e0] = a3\n  3601: u64 [s1 + 0x1e8] = a2\n  3605: u64 [s1 + 0x1f0] = a1\n  3609: a1 = s1 + 0x1e0\n  3613: u64 [s1 + 0x1f8] = a4\n  3617: ra = 74, jump @19\n      : @106 [@dyn 37] (gas: 20)\n  3622: a0 = u64 [s1 + 0x130]\n  3626: u64 [s1 + 0x198] = a0\n  3630: a0 = u64 [s1 + 0x138]\n  3634: u64 [s1 + 0x190] = a0\n  3638: a0 = u64 [s1 + 0x128]\n  3642: u64 [s1 + 0x188] = a0\n  3646: a0 = u64 [s1 + 0x120]\n  3650: u64 [s1 + 0x180] = a0\n  3654: a0 = u64 [s1 + 0x140]\n  3658: u64 [s1 + 0x1b8] = a0\n  3662: a0 = u64 [s1 + 0x148]\n  3666: u64 [s1 + 0x1b0] = a0\n  3670: a0 = u64 [s1 + 0x150]\n  3674: u64 [s1 + 0x1a8] = a0\n  3678: a0 = s1 + 0x1c0\n  3682: a1 = s1 + 0x1a0\n  3686: a2 = s1 + 0x180\n  3690: a3 = u64 [s1 + 0x158]\n  3694: u64 [s1 + 0x1a0] = a3\n  3698: ra = 76, jump @629\n      : @107 [@dyn 38] (gas: 32)\n  3703: a1 = u64 [s1 + 0x1c8]\n  3707: t0 = u64 [s1 + 0x1d8]\n  3711: t1 = u64 [s1 + 0x1c0]\n  3715: a3 = u64 [s1 + 0x1d0]\n  3719: a0 = u64 [s1 + 0x168]\n  3723: a4 = a1 ^ a0\n  3726: a5 = a1 <u a0\n  3729: ra = a0\n  3731: a0 = u64 [s1 + 0x178]\n  3735: t2 = t1 <u a0\n  3738: a5 = t2 if a4 == 0\n  3741: a0 = u64 [s1 + 0x170]\n  3745: a4 = a3 - a0\n  3748: a3 = a3 <u a0\n  3751: a0 = u64 [s1 + 0x160]\n  3755: a2 = t0 - a0\n  3758: a2 = a2 - a3\n  3761: a3 = a4 <u a5\n  3764: a2 = a2 - a3\n  3767: a0 = u64 [s1 + 0x178]\n  3771: a4 = a4 - a5\n  3774: a1 = a1 - ra\n  3777: a3 = a1 - t2\n  3780: a1 = t1 - a0\n  3783: a2 = a2 | a3\n  3786: a3 = a1 | a4\n  3789: a3 = a3 | a2\n  3792: a2 = a2 | a4\n  3795: a3 = a3 >> 0x20\n  3798: a2 = a2 << 0x20\n  3801: a2 = a2 | a3\n  3804: jump @159 if a2 == 0\n      : @108 (gas: 1)\n  3808: jump @549\n      : @109 (gas: 10)\n  3811: u64 [a2 + 1568] = 0\n  3815: u64 [a2 + 1560] = 0\n  3819: u64 [a2 + 1552] = 0\n  3823: u64 [a2 + 1544] = 0\n  3827: a0 = s1 + 0x1000\n  3831: i32 a0 = a0 + 0x6e0\n  3835: ra = 0x4e\n  3838: ecalli 10 // 'value_transferred'\n  3840: t0 = 0x50\n  3843: jump @745\n      : @110 [@dyn 39] (gas: 1)\n  3846: t0 = 80, jump @745\n      : @111 [@dyn 40] (gas: 8)\n  3851: a0 = u64 [a4 + 0x18]\n  3854: a1 = u64 [a4 + 0x20]\n  3857: a2 = u64 [a4 + 0x10]\n  3860: a3 = u64 [a4 + 0x8]\n  3863: a1 = a1 | a2\n  3866: a0 = a0 | a3\n  3869: a0 = a0 | a1\n  3872: jump @113 if a0 == 0\n      : @112 (gas: 1)\n  3875: jump @559\n      : @113 (gas: 3)\n  3878: a0 = u64 [s1 + 0x178]\n  3882: a0 = i32 [a0]\n  3884: jump @115 if a0 >u 35\n      : @114 (gas: 1)\n  3888: jump @560\n      : @115 (gas: 5)\n  3891: a0 = s1 + 0x1000\n  3895: i32 a0 = a0 + 0x700\n  3899: a1 = 0x4\n  3902: ecalli 1 // 'call_data_load'\n  3904: fallthrough\n      : @116 (gas: 12)\n  3905: a3 = s1 + 0x10d8\n  3909: a2 = u64 [a3 + 0x638]\n  3913: a0 = u64 [a3 + 0x640]\n  3917: a1 = 0x100000000\n  3927: a1 = a1 ^ a2\n  3930: a1 = a1 | a0\n  3933: u64 [s1 + 0x148] = a2\n  3937: a2 = a2 >> 0x20\n  3940: a2 = a2 <u 0x1\n  3943: a2 = 0 if a0 != 0\n  3945: a2 = 0 if a1 == 0\n  3947: jump @118 if a2 != 0\n      : @117 (gas: 1)\n  3950: jump @561\n      : @118 (gas: 8)\n  3953: a0 = u64 [a3 + 0x630]\n  3957: u64 [s1 + 0x150] = a0\n  3961: a0 = u64 [a3 + 0x628]\n  3965: u64 [s1 + 0x158] = a0\n  3969: a0 = s1 + 0x7ff\n  3973: a0 = a0 + 0x1\n  3976: a1 = 0x40\n  3979: ra = 82, jump @17\n      : @119 [@dyn 41] (gas: 19)\n  3984: a0 = s1 + 0x1000\n  3988: a0 = u64 [a0 + 0xfffffffffffff818]\n  3992: u64 [s1 + 0x168] = a0\n  3996: a1 = s1 + 0x1000\n  4000: a1 = u64 [a1 + 0xfffffffffffff810]\n  4004: u64 [s1 + 0x160] = a1\n  4008: a2 = s1 + 0x1000\n  4012: a3 = u64 [a2 + 0xfffffffffffff808]\n  4016: u64 [s1 + 0x170] = a3\n  4020: a2 = s1 + 0x1000\n  4024: a2 = u64 [a2 + 0xfffffffffffff800]\n  4028: u64 [s1 + 0x178] = a2\n  4032: a4 = s1 + 0x700\n  4036: u64 [a4 + 0xf8] = a0\n  4040: u64 [a4 + 0xf0] = a1\n  4044: u64 [a4 + 0xe8] = a3\n  4048: a0 = s1 + 0x7e0\n  4052: u64 [a4 + 0xe0] = a2\n  4056: ra = 84, jump @611\n      : @120 [@dyn 42] (gas: 13)\n  4061: a3 = s1 + 0x100\n  4065: a0 = u64 [a3 + 0x68]\n  4068: a1 = u64 [a3 + 0x70]\n  4071: a0 = a0 | a1\n  4074: a2 = u64 [a3 + 0x60]\n  4077: a1 = u64 [a3 + 0x78]\n  4080: a1 = a1 | a2\n  4083: a1 = a1 | a0\n  4086: a1 = a1 >> 0x20\n  4089: a0 = a0 | a2\n  4092: a0 = a0 << 0x20\n  4095: a0 = a0 | a1\n  4098: jump @122 if a0 == 0\n      : @121 (gas: 1)\n  4101: jump @549\n      : @122 (gas: 7)\n  4104: u64 [s1 + 2008] = 0\n  4108: u64 [s1 + 2000] = 0\n  4112: u64 [s1 + 1992] = 0\n  4116: a1 = s1 + 0x7c0\n  4120: u64 [s1 + 1984] = 0\n  4124: a0 = u64 [s1 + 0x178]\n  4128: ra = 86, jump @19\n      : @123 [@dyn 43] (gas: 12)\n  4133: a4 = s1 + 0x100\n  4137: a0 = u64 [a4 + 0x68]\n  4140: a1 = u64 [a4 + 0x60]\n  4143: a2 = a1 | a0\n  4146: a3 = 0x100000000\n  4156: a0 = 0xffffffe0\n  4166: a1 = u64 [a4 + 0x78]\n  4169: a0 = a1 <u a0\n  4172: a1 = u64 [a4 + 0x70]\n  4175: a0 = 0 if a1 != 0\n  4177: a0 = 0 if a2 != 0\n  4179: jump @125 if a0 != 0\n      : @124 (gas: 1)\n  4182: jump @549\n      : @125 (gas: 10)\n  4185: a0 = u64 [s1 + 0x178]\n  4189: i32 a0 = a0 + 0x20\n  4192: u64 [s1 + 1976] = 0\n  4196: u64 [s1 + 1968] = 0\n  4200: u64 [s1 + 1960] = 0\n  4204: u64 [s1 + 0x168] = a3\n  4208: a1 = s1 + 0x7a0\n  4212: u64 [s1 + 1952] = 0x60\n  4217: u64 [s1 + 0x160] = a2\n  4221: ra = 88, jump @19\n      : @126 [@dyn 44] (gas: 10)\n  4226: a2 = s1 + 0x100\n  4230: a0 = u64 [a2 + 0x68]\n  4233: a0 = a0 + 0xffffffffffffffc0\n  4236: a1 = u64 [a2 + 0x78]\n  4239: a0 = a1 <u a0\n  4242: a1 = u64 [a2 + 0x70]\n  4245: a0 = 0 if a1 != 0\n  4247: a1 = u64 [a2 + 0x60]\n  4250: a0 = 0 if a1 != 0\n  4252: jump @128 if a0 != 0\n      : @127 (gas: 1)\n  4255: jump @549\n      : @128 (gas: 12)\n  4258: a0 = u64 [s1 + 0x148]\n  4262: a0 = a0 << 0x20\n  4265: a0 = a0 >> 0x20\n  4268: u64 [s1 + 0x170] = a0\n  4272: a0 = u64 [s1 + 0x178]\n  4276: i32 a0 = a0 + 0x40\n  4279: u64 [s1 + 1944] = 0\n  4283: u64 [s1 + 1936] = 0\n  4287: u64 [s1 + 1920] = 0x60\n  4292: a1 = s1 + 0x780\n  4296: u64 [s1 + 1928] = 0\n  4300: ra = 90, jump @19\n      : @129 [@dyn 45] (gas: 11)\n  4305: u64 [s1 + 1912] = 0\n  4309: a0 = u64 [s1 + 0x170]\n  4313: a2 = s1 + 0x700\n  4317: u64 [a2 + 0x70] = a0\n  4320: a0 = u64 [s1 + 0x150]\n  4324: u64 [a2 + 0x68] = a0\n  4327: a1 = s1 + 0x760\n  4331: a0 = u64 [s1 + 0x158]\n  4335: u64 [a2 + 0x60] = a0\n  4338: a0 = 0\n  4340: ra = 92, jump @19\n      : @130 [@dyn 46] (gas: 7)\n  4345: u64 [s1 + 1880] = 0\n  4349: u64 [s1 + 1872] = 0\n  4353: u64 [s1 + 1864] = 0\n  4357: a0 = 0x20\n  4360: a1 = s1 + 0x740\n  4364: u64 [s1 + 1856] = 0\n  4368: ra = 94, jump @19\n      : @131 [@dyn 47] (gas: 6)\n  4373: a0 = sp + 0xffffffffffffffe0\n  4376: a0 = a0 & 0xffffffffffffffe0\n  4379: u64 [s1 + 0x170] = a0\n  4383: sp = a0\n  4385: a1 = i32 [0x20064]\n  4390: jump @133 if a1 >u 63\n      : @132 (gas: 4)\n  4394: a1 = 0x40\n  4397: u32 [0x20064] = a1\n  4402: t0 = 0x60\n  4405: jump @737\n      : @133 (gas: 1)\n  4408: t0 = 96, jump @737\n      : @134 [@dyn 48] (gas: 26)\n  4413: a0 = 0x20070\n  4418: i32 a0 = a0 + 0\n  4420: i32 a2 = a2 + 0\n  4422: a1 = 0x40\n  4425: ecalli 6 // 'hash_keccak_256'\n  4427: a3 = u64 [s1 + 0x178]\n  4431: a0 = u64 [a3 + 0x18]\n  4434: a1 = u64 [a3 + 0x10]\n  4437: a2 = u64 [a3 + 0x8]\n  4440: a3 = u64 [a3]\n  4442: a5 = reverse a0\n  4444: a4 = reverse a1\n  4446: a0 = reverse a2\n  4448: a1 = reverse a3\n  4450: u64 [s1 + 0x148] = a1\n  4454: a2 = u64 [s1 + 0x170]\n  4458: u64 [a2 + 0x18] = a1\n  4461: u64 [s1 + 0x150] = a0\n  4465: u64 [a2 + 0x10] = a0\n  4468: u64 [s1 + 0x140] = a4\n  4472: u64 [a2 + 0x8] = a4\n  4475: u64 [s1 + 0x138] = a5\n  4479: u64 [a2] = a5\n  4481: a0 = s1 + 0x720\n  4485: a1 = 0x40\n  4488: ra = 98, jump @17\n      : @135 [@dyn 49] (gas: 15)\n  4493: a4 = s1 + 0x700\n  4497: a0 = u64 [a4 + 0x38]\n  4500: u64 [s1 + 0x158] = a0\n  4504: a2 = u64 [a4 + 0x30]\n  4507: u64 [s1 + 0x160] = a2\n  4511: a3 = u64 [a4 + 0x28]\n  4514: u64 [s1 + 0x168] = a3\n  4518: a1 = u64 [a4 + 0x20]\n  4521: u64 [s1 + 0x178] = a1\n  4525: u64 [a4 + 0x18] = a0\n  4528: u64 [a4 + 0x10] = a2\n  4531: u64 [a4 + 0x8] = a3\n  4534: a0 = s1 + 0x700\n  4538: u64 [a4] = a1\n  4540: ra = 100, jump @611\n      : @136 [@dyn 50] (gas: 3)\n  4545: a0 = s1 + 0x6e0\n  4549: a1 = u64 [s1 + 0x170]\n  4553: ra = 102, jump @21\n      : @137 [@dyn 51] (gas: 13)\n  4558: a3 = s1 + 0x100\n  4562: a2 = u64 [a3 + 0x60]\n  4565: a0 = u64 [a3 + 0x58]\n  4568: a1 = u64 [a3 + 0x68]\n  4571: a0 = a0 | a1\n  4574: a1 = u64 [a3 + 0x78]\n  4577: a1 = a1 | a2\n  4580: a1 = a1 | a0\n  4583: a1 = a1 >> 0x20\n  4586: a0 = a0 | a2\n  4589: a0 = a0 << 0x20\n  4592: a0 = a0 | a1\n  4595: jump @139 if a0 == 0\n      : @138 (gas: 1)\n  4598: jump @549\n      : @139 (gas: 14)\n  4601: a1 = u64 [s1 + 0x6f0]\n  4605: a2 = u64 [s1 + 0x6e8]\n  4609: a3 = u64 [s1 + 0x6e0]\n  4613: a4 = 0xffffffff\n  4623: a4 = a4 & a1\n  4626: a2 = a2 & 0xffffffffffffffff\n  4629: a0 = a3 & 0xffffffffffffffff\n  4632: u64 [s1 + 1752] = 0\n  4636: u64 [s1 + 0x6c0] = a0\n  4640: u64 [s1 + 0x6c8] = a2\n  4644: a1 = s1 + 0x6c0\n  4648: u64 [s1 + 0x6d0] = a4\n  4652: a0 = u64 [s1 + 0x178]\n  4656: ra = 104, jump @19\n      : @140 [@dyn 52] (gas: 3)\n  4661: a0 = s1 + 0x6a0\n  4665: a1 = 0x40\n  4668: ra = 106, jump @17\n      : @141 [@dyn 53] (gas: 32)\n  4673: t0 = u64 [s1 + 0x6b8]\n  4677: u64 [s1 + 0x170] = t0\n  4681: t1 = u64 [s1 + 0x6b0]\n  4685: u64 [s1 + 0x130] = t1\n  4689: t2 = u64 [s1 + 0x6a8]\n  4693: u64 [s1 + 0x128] = t2\n  4697: a5 = u64 [s1 + 0x6a0]\n  4701: u64 [s1 + 0x120] = a5\n  4705: a3 = u64 [s1 + 0x138]\n  4709: a3 = a3 + 0x1\n  4712: a0 = a3 <u 0x1\n  4715: a1 = u64 [s1 + 0x140]\n  4719: a0 = a0 + a1\n  4722: a1 = a3 | a0\n  4725: a1 = a1 <u 0x1\n  4728: a2 = u64 [s1 + 0x150]\n  4732: a1 = a1 + a2\n  4735: a2 = a1 <u a2\n  4738: a4 = u64 [s1 + 0x148]\n  4742: a2 = a2 + a4\n  4745: u64 [s1 + 0x658] = t0\n  4749: u64 [s1 + 0x650] = t1\n  4753: u64 [s1 + 0x648] = t2\n  4757: u64 [s1 + 0x640] = a5\n  4761: u64 [s1 + 0x678] = a2\n  4765: u64 [s1 + 0x670] = a1\n  4769: u64 [s1 + 0x668] = a0\n  4773: a0 = s1 + 0x680\n  4777: a1 = s1 + 0x660\n  4781: a2 = s1 + 0x640\n  4785: u64 [s1 + 0x660] = a3\n  4789: ra = 108, jump @591\n      : @142 [@dyn 54] (gas: 37)\n  4794: a0 = u64 [s1 + 0x688]\n  4798: a2 = u64 [s1 + 0x698]\n  4802: a4 = u64 [s1 + 0x680]\n  4806: u64 [s1 + 0x118] = a4\n  4810: a3 = u64 [s1 + 0x690]\n  4814: t0 = u64 [s1 + 0x128]\n  4818: ra = a0 ^ t0\n  4821: a5 = a0 <u t0\n  4824: t1 = u64 [s1 + 0x120]\n  4828: t2 = a4 <u t1\n  4831: a5 = t2 if ra == 0\n  4834: a1 = u64 [s1 + 0x130]\n  4838: a4 = a3 - a1\n  4841: a3 = a3 <u a1\n  4844: ra = a1\n  4846: a1 = u64 [s1 + 0x170]\n  4850: a2 = a2 - a1\n  4853: a2 = a2 - a3\n  4856: a3 = a4 <u a5\n  4859: a2 = a2 - a3\n  4862: a4 = a4 - a5\n  4865: a0 = a0 - t0\n  4868: a0 = a0 - t2\n  4871: a3 = u64 [s1 + 0x118]\n  4875: a3 = a3 - t1\n  4878: a5 = s1 + 0x600\n  4882: u64 [a5] = a3\n  4884: u64 [a5 + 0x38] = a1\n  4887: u64 [s1 + 0x630] = ra\n  4891: u64 [s1 + 0x628] = t0\n  4895: u64 [s1 + 0x620] = t1\n  4899: u64 [a5 + 0x8] = a0\n  4902: u64 [a5 + 0x10] = a4\n  4905: a0 = s1 + 0x620\n  4909: a1 = s1 + 0x600\n  4913: u64 [a5 + 0x18] = a2\n  4916: ra = 110, jump @620\n      : @143 [@dyn 55] (gas: 12)\n  4921: a4 = s1 + 0x100\n  4925: a0 = u64 [a4 + 0x60]\n  4928: a1 = u64 [a4 + 0x58]\n  4931: a2 = a0 | a1\n  4934: a3 = 0x100000000\n  4944: a0 = 0xffffffe0\n  4954: a1 = u64 [a4 + 0x78]\n  4957: a0 = a1 <u a0\n  4960: a1 = u64 [a4 + 0x68]\n  4963: a0 = 0 if a1 != 0\n  4965: a0 = 0 if a2 != 0\n  4967: jump @145 if a0 != 0\n      : @144 (gas: 1)\n  4970: jump @549\n      : @145 (gas: 14)\n  4973: a0 = u64 [s1 + 0x178]\n  4977: i32 a0 = a0 + 0x20\n  4980: a1 = u64 [s1 + 0x120]\n  4984: u64 [s1 + 0x5e0] = a1\n  4988: a1 = u64 [s1 + 0x128]\n  4992: u64 [s1 + 0x5e8] = a1\n  4996: a1 = u64 [s1 + 0x130]\n  5000: u64 [s1 + 0x5f0] = a1\n  5004: a1 = s1 + 0x5e0\n  5008: a4 = u64 [s1 + 0x170]\n  5012: u64 [s1 + 0x5f8] = a4\n  5016: u64 [s1 + 0x118] = a2\n  5020: u64 [s1 + 0x110] = a3\n  5024: ra = 112, jump @19\n      : @146 [@dyn 56] (gas: 3)\n  5029: a0 = s1 + 0x5c0\n  5033: a1 = 0x40\n  5036: ra = 114, jump @17\n      : @147 [@dyn 57] (gas: 32)\n  5041: a3 = u64 [s1 + 0x5d8]\n  5045: u64 [s1 + 0x170] = a3\n  5049: t1 = u64 [s1 + 0x5d0]\n  5053: u64 [s1 + 0x130] = t1\n  5057: t2 = u64 [s1 + 0x5c8]\n  5061: u64 [s1 + 0x128] = t2\n  5065: a5 = u64 [s1 + 0x5c0]\n  5069: u64 [s1 + 0x120] = a5\n  5073: a0 = u64 [s1 + 0x138]\n  5077: t0 = a0 + 0x2\n  5080: a0 = t0 <u a0\n  5083: a2 = u64 [s1 + 0x140]\n  5087: a1 = a2 + a0\n  5090: a2 = a1 <u a2\n  5093: a2 = a0 if a0 == 0\n  5096: a0 = u64 [s1 + 0x150]\n  5100: a2 = a2 + a0\n  5103: a0 = a2 <u a0\n  5106: a4 = u64 [s1 + 0x148]\n  5110: a0 = a0 + a4\n  5113: u64 [s1 + 0x578] = a3\n  5117: u64 [s1 + 0x570] = t1\n  5121: u64 [s1 + 0x568] = t2\n  5125: u64 [s1 + 0x560] = a5\n  5129: u64 [s1 + 0x598] = a0\n  5133: u64 [s1 + 0x590] = a2\n  5137: u64 [s1 + 0x588] = a1\n  5141: a0 = s1 + 0x5a0\n  5145: a1 = s1 + 0x580\n  5149: a2 = s1 + 0x560\n  5153: u64 [s1 + 0x580] = t0\n  5157: ra = 116, jump @591\n      : @148 [@dyn 58] (gas: 37)\n  5162: a0 = u64 [s1 + 0x5a8]\n  5166: a2 = u64 [s1 + 0x5b8]\n  5170: a4 = u64 [s1 + 0x5a0]\n  5174: u64 [s1 + 0x150] = a4\n  5178: a3 = u64 [s1 + 0x5b0]\n  5182: t0 = u64 [s1 + 0x128]\n  5186: ra = a0 ^ t0\n  5189: a5 = a0 <u t0\n  5192: t1 = u64 [s1 + 0x120]\n  5196: t2 = a4 <u t1\n  5199: a5 = t2 if ra == 0\n  5202: a1 = u64 [s1 + 0x130]\n  5206: a4 = a3 - a1\n  5209: a3 = a3 <u a1\n  5212: ra = a1\n  5214: a1 = u64 [s1 + 0x170]\n  5218: a2 = a2 - a1\n  5221: a2 = a2 - a3\n  5224: a3 = a4 <u a5\n  5227: a2 = a2 - a3\n  5230: a4 = a4 - a5\n  5233: a0 = a0 - t0\n  5236: a0 = a0 - t2\n  5239: a3 = u64 [s1 + 0x150]\n  5243: a3 = a3 - t1\n  5246: a5 = s1 + 0x500\n  5250: u64 [a5 + 0x20] = a3\n  5253: u64 [a5 + 0x58] = a1\n  5256: u64 [s1 + 0x550] = ra\n  5260: u64 [s1 + 0x548] = t0\n  5264: u64 [s1 + 0x540] = t1\n  5268: u64 [a5 + 0x28] = a0\n  5271: u64 [a5 + 0x30] = a4\n  5274: a0 = s1 + 0x540\n  5278: a1 = s1 + 0x520\n  5282: u64 [a5 + 0x38] = a2\n  5285: ra = 118, jump @620\n      : @149 [@dyn 59] (gas: 10)\n  5290: a2 = s1 + 0x100\n  5294: a0 = u64 [a2 + 0x10]\n  5297: a0 = a0 + 0xffffffffffffffc0\n  5300: a1 = u64 [a2 + 0x78]\n  5303: a0 = a1 <u a0\n  5306: a1 = u64 [a2 + 0x68]\n  5309: a0 = 0 if a1 != 0\n  5311: a1 = u64 [a2 + 0x18]\n  5314: a0 = 0 if a1 != 0\n  5316: jump @151 if a0 != 0\n      : @150 (gas: 1)\n  5319: jump @549\n      : @151 (gas: 13)\n  5322: a0 = u64 [s1 + 0x178]\n  5326: i32 a0 = a0 + 0x40\n  5329: a1 = u64 [s1 + 0x120]\n  5333: a3 = s1 + 0x500\n  5337: u64 [a3] = a1\n  5339: a1 = u64 [s1 + 0x128]\n  5343: u64 [a3 + 0x8] = a1\n  5346: a1 = u64 [s1 + 0x130]\n  5350: u64 [a3 + 0x10] = a1\n  5353: a1 = s1 + 0x500\n  5357: a2 = u64 [s1 + 0x170]\n  5361: u64 [a3 + 0x18] = a2\n  5364: ra = 120, jump @19\n      : @152 [@dyn 60] (gas: 3)\n  5369: a0 = s1 + 0x4e0\n  5373: a1 = 0x40\n  5376: ra = 122, jump @17\n      : @153 [@dyn 61] (gas: 25)\n  5381: a5 = s1 + 0x400\n  5385: a2 = u64 [a5 + 0xf8]\n  5389: u64 [s1 + 0x170] = a2\n  5393: a1 = u64 [a5 + 0xf0]\n  5397: u64 [s1 + 0x150] = a1\n  5401: a3 = u64 [a5 + 0xe8]\n  5405: u64 [s1 + 0x148] = a3\n  5409: a4 = u64 [a5 + 0xe0]\n  5413: u64 [s1 + 0x140] = a4\n  5417: a0 = u64 [s1 + 0x158]\n  5421: u64 [a5 + 0x98] = a0\n  5425: a0 = u64 [s1 + 0x160]\n  5429: u64 [a5 + 0x90] = a0\n  5433: a0 = u64 [s1 + 0x168]\n  5437: u64 [a5 + 0x88] = a0\n  5441: a0 = u64 [s1 + 0x178]\n  5445: u64 [a5 + 0x80] = a0\n  5449: u64 [a5 + 0xb8] = a2\n  5453: u64 [a5 + 0xb0] = a1\n  5457: u64 [a5 + 0xa8] = a3\n  5461: a0 = s1 + 0x4c0\n  5465: a1 = s1 + 0x4a0\n  5469: a2 = s1 + 0x480\n  5473: u64 [a5 + 0xa0] = a4\n  5477: ra = 124, jump @643\n      : @154 [@dyn 62] (gas: 13)\n  5482: a1 = s1 + 0x100\n  5486: a4 = u64 [a1 + 0x48]\n  5489: a2 = u64 [a1 + 0x40]\n  5492: a0 = u64 [a1 + 0x70]\n  5495: a0 = a0 | a4\n  5498: a3 = u64 [a1 + 0x50]\n  5501: a1 = a2 | a3\n  5504: a1 = a1 | a0\n  5507: a1 = a1 >> 0x20\n  5510: a0 = a0 | a3\n  5513: a0 = a0 << 0x20\n  5516: a0 = a0 | a1\n  5519: jump @156 if a0 == 0\n      : @155 (gas: 1)\n  5522: jump @549\n      : @156 (gas: 33)\n  5525: t0 = a3\n  5527: a5 = s1 + 0x400\n  5531: a0 = u64 [a5 + 0xc8]\n  5535: a1 = u64 [a5 + 0xd8]\n  5539: u64 [s1 + 0x178] = a1\n  5543: t1 = u64 [s1 + 0x4c0]\n  5547: a3 = u64 [a5 + 0xd0]\n  5551: t2 = a0 ^ a4\n  5554: a5 = a0 <u a4\n  5557: ra = t1 <u a2\n  5560: a5 = ra if t2 == 0\n  5563: a1 = a3 - t0\n  5566: t2 = a1 - a5\n  5569: a1 = a1 <u a5\n  5572: u64 [s1 + 0x168] = a1\n  5576: a3 = a3 <u t0\n  5579: a5 = u64 [s1 + 0x170]\n  5583: a1 = u64 [s1 + 0x178]\n  5587: a5 = a1 - a5\n  5590: a5 = a5 - a3\n  5593: a1 = u64 [s1 + 0x168]\n  5597: a5 = a5 - a1\n  5600: a0 = a0 - a4\n  5603: a0 = a0 - ra\n  5606: a1 = t1 - a2\n  5609: a0 = a0 | a5\n  5612: a3 = a1 | t2\n  5615: a3 = a3 | a0\n  5618: a0 = a0 | t2\n  5621: a3 = a3 >> 0x20\n  5624: a0 = a0 << 0x20\n  5627: a0 = a0 | a3\n  5630: jump @158 if a0 == 0\n      : @157 (gas: 1)\n  5633: jump @549\n      : @158 (gas: 4)\n  5636: a0 = a2\n  5638: u64 [s1 + 0x178] = a1\n  5642: ra = 0x7e\n  5645: jump @26\n      : @159 (gas: 2)\n  5648: u64 [s1 + 0x178] = a1\n  5652: ra = 126, jump @26\n      : @160 [@dyn 63] (gas: 5)\n  5657: i32 a1 = a0 + 0\n  5659: a2 = i32 [s1 + 0x178]\n  5663: a0 = 0\n  5665: ecalli 7 // 'seal_return'\n  5667: jump @76\n      : @161 (gas: 9)\n  5670: a0 = s1 + 0x18d8\n  5674: u64 [a0 + 224] = 0\n  5678: u64 [a0 + 216] = 0\n  5682: u64 [a0 + 208] = 0\n  5686: u64 [a0 + 200] = 0\n  5690: a0 = s1 + 0x2000\n  5694: i32 a0 = a0 + 0xfffffffffffff9a0\n  5698: ecalli 10 // 'value_transferred'\n  5700: fallthrough\n      : @162 (gas: 9)\n  5701: a3 = s1 + 0x18d8\n  5705: a0 = u64 [a3 + 0xd8]\n  5709: a1 = u64 [a3 + 0xe0]\n  5713: a2 = u64 [a3 + 0xd0]\n  5717: a3 = u64 [a3 + 0xc8]\n  5721: a1 = a1 | a2\n  5724: a0 = a0 | a3\n  5727: a0 = a0 | a1\n  5730: jump @164 if a0 == 0\n      : @163 (gas: 1)\n  5733: jump @562\n      : @164 (gas: 10)\n  5736: a0 = u64 [s1 + 0x178]\n  5740: a0 = u32 [a0]\n  5742: a2 = s1 + 0x10d8\n  5746: u64 [a2 + 1344] = 0\n  5750: u64 [a2 + 1336] = 0\n  5754: u64 [a2 + 0x528] = a0\n  5758: a0 = s1 + 0x1620\n  5762: a1 = s1 + 0x1600\n  5766: u64 [a2 + 1328] = 0\n  5770: ra = 128, jump @698\n      : @165 [@dyn 64] (gas: 27)\n  5776: a1 = s1 + 0x10d8\n  5780: a2 = a1 + 0x500\n  5784: a0 = u64 [a2 + 0x60]\n  5787: a1 = s1 + 0x100\n  5791: u64 [a1] = a0\n  5793: a0 = u64 [a2 + 0x58]\n  5796: u64 [s1 + 0xf8] = a0\n  5800: a0 = u64 [a2 + 0x50]\n  5803: u64 [a1 + 0x8] = a0\n  5806: a0 = u64 [a2 + 0x48]\n  5809: u64 [a1 + 0x10] = a0\n  5812: a0 = u64 [a2 + 0x80]\n  5816: u64 [s1 + 0xc8] = a0\n  5820: a0 = u64 [a2 + 0x78]\n  5823: u64 [s1 + 0xd0] = a0\n  5827: a0 = u64 [a2 + 0x70]\n  5830: u64 [s1 + 0xd8] = a0\n  5834: a0 = u64 [a2 + 0x68]\n  5837: u64 [s1 + 0xe0] = a0\n  5841: a0 = 0x30070\n  5846: u64 [s1 + 0xc0] = a0\n  5850: i32 a0 = a0 + 0\n  5852: u64 [s1 + 0xa8] = a0\n  5856: ra = 0x82\n  5860: ecalli 3 // 'caller'\n  5862: t0 = 0x84\n  5866: jump @723\n      : @166 [@dyn 65] (gas: 1)\n  5869: t0 = 132, jump @723\n      : @167 [@dyn 66] (gas: 8)\n  5875: u64 [a2 + 1312] = 0\n  5879: a4 = a2 + 0x500\n  5883: u64 [a4 + 0x18] = a1\n  5886: u64 [a4 + 0x10] = a0\n  5889: a1 = s1 + 0x15e0\n  5893: u64 [a4 + 0x8] = a3\n  5896: a0 = 0\n  5898: ra = 134, jump @19\n      : @168 [@dyn 67] (gas: 9)\n  5904: a0 = s1 + 0x10d8\n  5908: u64 [a0 + 1280] = 0\n  5912: u64 [a0 + 1272] = 0\n  5916: u64 [a0 + 1264] = 0\n  5920: a2 = a0\n  5922: a0 = 0x20\n  5925: a1 = s1 + 0x15c0\n  5929: u64 [a2 + 1256] = 0\n  5933: ra = 136, jump @19\n      : @169 [@dyn 68] (gas: 4)\n  5939: a2 = 0x20064\n  5944: a0 = i32 [0x20064]\n  5949: a1 = 0x3f\n  5952: jump @171 if a1 <u a0\n      : @170 (gas: 4)\n  5955: u32 [0x20064] = 0x40\n  5961: u64 [s1 + 0xb0] = a2\n  5965: t0 = 0x8a\n  5969: jump @737\n      : @171 (gas: 2)\n  5972: u64 [s1 + 0xb0] = a2\n  5976: t0 = 138, jump @737\n      : @172 [@dyn 69] (gas: 9)\n  5982: a0 = 0x20070\n  5987: i32 a0 = a0 + 0\n  5989: i32 a2 = a2 + 0\n  5991: a1 = 0x40\n  5994: u64 [s1 + 0xb8] = a0\n  5998: ra = 0x8c\n  6002: ecalli 6 // 'hash_keccak_256'\n  6004: t0 = 0x8e\n  6008: jump @735\n      : @173 [@dyn 70] (gas: 1)\n  6011: t0 = 142, jump @735\n      : @174 [@dyn 71] (gas: 8)\n  6017: a4 = s1 + 0x18d8\n  6021: u64 [a4 + 0x100] = a3\n  6025: u64 [a4 + 0xf8] = a2\n  6029: u64 [a4 + 0xf0] = a1\n  6033: u64 [a4 + 0xe8] = a0\n  6037: a0 = s1 + 0x15a0\n  6041: a1 = s1 + 0x19c0\n  6045: ra = 144, jump @21\n      : @175 [@dyn 72] (gas: 7)\n  6051: a2 = s1 + 0x10d8\n  6055: a0 = u32 [a2 + 0x4d8]\n  6059: a1 = u64 [a2 + 0x4c8]\n  6063: a2 = u64 [a2 + 0x4d0]\n  6067: a0 = a0 | a1\n  6070: a0 = a0 | a2\n  6073: jump @258 if a0 != 0\n      : @176 (gas: 3)\n  6077: a0 = s1 + 0x10c0\n  6081: a1 = 0x40\n  6084: ra = 146, jump @17\n      : @177 [@dyn 73] (gas: 14)\n  6090: a0 = s1 + 0x10d8\n  6094: a4 = u64 [a0]\n  6096: a1 = a0 + 0xffffffffffffff00\n  6100: a5 = u64 [a1 + 0xf8]\n  6104: a3 = u64 [a1 + 0xf0]\n  6108: a2 = u64 [a1 + 0xe8]\n  6112: a0 = a3 | a4\n  6115: a1 = a2 | a5\n  6118: a1 = a1 | a0\n  6121: a1 = a1 >> 0x20\n  6124: a0 = a0 | a5\n  6127: a0 = a0 << 0x20\n  6130: a0 = a0 | a1\n  6133: jump @179 if a0 == 0\n      : @178 (gas: 1)\n  6136: jump @549\n      : @179 (gas: 15)\n  6139: a0 = s1 + 0x7ff\n  6143: a0 = a0 + 0xd9\n  6147: u64 [s1 + 0x170] = a3\n  6151: a3 = a0\n  6153: u64 [a0 + 2008] = 0\n  6157: u64 [a0 + 2000] = 0\n  6161: u64 [a0 + 1992] = 0\n  6165: a0 = 0x8c379a000000000\n  6175: a1 = s1 + 0x10a0\n  6179: u64 [a3 + 0x7e0] = a0\n  6183: a0 = a2\n  6185: u64 [s1 + 0x178] = a2\n  6189: u64 [s1 + 0x160] = a4\n  6193: u64 [s1 + 0x168] = a5\n  6197: ra = 148, jump @19\n      : @180 [@dyn 74] (gas: 12)\n  6203: a5 = s1 + 0x100\n  6207: a1 = u64 [a5 + 0x78]\n  6210: a0 = u64 [a5 + 0x68]\n  6213: a3 = u64 [a5 + 0x60]\n  6216: a3 = a3 | a0\n  6219: a4 = 0x100000000\n  6229: a0 = 0xfffffffc\n  6239: a0 = a1 <u a0\n  6242: a2 = u64 [a5 + 0x70]\n  6245: a0 = 0 if a2 != 0\n  6247: a0 = 0 if a3 != 0\n  6249: jump @182 if a0 != 0\n      : @181 (gas: 1)\n  6252: jump @549\n      : @182 (gas: 11)\n  6255: i32 a0 = a1 + 0x4\n  6258: a2 = s1 + 0x7ff\n  6262: a2 = a2 + 0xd9\n  6266: u64 [a2 + 1984] = 0\n  6270: u64 [a2 + 1976] = 0\n  6274: u64 [a2 + 1960] = 0x20\n  6279: a1 = s1 + 0x1080\n  6283: u64 [a2 + 1968] = 0\n  6287: u64 [s1 + 0x168] = a3\n  6291: u64 [s1 + 0x160] = a4\n  6295: ra = 150, jump @19\n      : @183 [@dyn 75] (gas: 10)\n  6301: a2 = s1 + 0x100\n  6305: a4 = u64 [a2 + 0x68]\n  6308: a3 = u64 [a2 + 0x70]\n  6311: a1 = u64 [a2 + 0x78]\n  6314: a0 = u64 [a2 + 0x60]\n  6317: a0 = a0 + 0xffffffffffffffdc\n  6320: a0 = a1 <u a0\n  6323: a0 = 0 if a3 != 0\n  6325: a0 = 0 if a4 != 0\n  6327: jump @185 if a0 != 0\n      : @184 (gas: 1)\n  6330: jump @549\n      : @185 (gas: 9)\n  6333: i32 a0 = a1 + 0x24\n  6336: a2 = s1 + 0x7ff\n  6340: a2 = a2 + 0xd9\n  6344: u64 [a2 + 1952] = 0\n  6348: u64 [a2 + 1944] = 0\n  6352: u64 [a2 + 1928] = 0xe\n  6357: a1 = s1 + 0x1060\n  6361: u64 [a2 + 1936] = 0\n  6365: ra = 152, jump @19\n      : @186 [@dyn 76] (gas: 9)\n  6371: a3 = s1 + 0x100\n  6375: a2 = u64 [a3 + 0x78]\n  6378: a0 = 0xffffffbc\n  6388: a0 = a2 <u a0\n  6391: a1 = u64 [a3 + 0x70]\n  6394: a0 = 0 if a1 != 0\n  6396: a1 = u64 [a3 + 0x68]\n  6399: a0 = 0 if a1 != 0\n  6401: jump @188 if a0 != 0\n      : @187 (gas: 1)\n  6404: jump @549\n      : @188 (gas: 11)\n  6407: i32 a0 = a2 + 0x44\n  6410: a1 = u64 [0x20020]\n  6415: a2 = u64 [0x20028]\n  6420: a3 = s1 + 0x7ff\n  6424: a3 = a3 + 0xd9\n  6428: u64 [a3 + 0x780] = a1\n  6432: u64 [a3 + 1904] = 0\n  6436: u64 [a3 + 0x778] = a2\n  6440: a1 = s1 + 0x1040\n  6444: u64 [a3 + 1896] = 0\n  6448: ra = 154, jump @19\n      : @189 [@dyn 77] (gas: 4)\n  6454: a1 = 0x64\n  6457: a0 = u64 [s1 + 0x178]\n  6461: ra = 0x116\n  6465: jump @26\n      : @190 (gas: 1)\n  6468: jump @192 if a0 == 1299228947\n      : @191 (gas: 1)\n  6475: jump @550\n      : @192 (gas: 10)\n  6478: u64 [a2 + 1728] = 0\n  6482: u64 [a2 + 1720] = 0\n  6486: u64 [a2 + 1712] = 0\n  6490: u64 [a2 + 1704] = 0\n  6494: a0 = s1 + 0x1000\n  6498: i32 a0 = a0 + 0x780\n  6502: ra = 0x9c\n  6506: ecalli 10 // 'value_transferred'\n  6508: t0 = 0x9e\n  6512: jump @745\n      : @193 [@dyn 78] (gas: 1)\n  6515: t0 = 158, jump @745\n      : @194 [@dyn 79] (gas: 8)\n  6521: a0 = u64 [a4 + 0xb8]\n  6525: a1 = u64 [a4 + 0xc0]\n  6529: a2 = u64 [a4 + 0xb0]\n  6533: a3 = u64 [a4 + 0xa8]\n  6537: a1 = a1 | a2\n  6540: a0 = a0 | a3\n  6543: a0 = a0 | a1\n  6546: jump @196 if a0 == 0\n      : @195 (gas: 1)\n  6549: jump @563\n      : @196 (gas: 12)\n  6552: a0 = u64 [s1 + 0x178]\n  6556: a0 = u32 [a0]\n  6558: a2 = s1 + 0x7ff\n  6562: a2 = a2 + 0xd9\n  6566: u64 [a2 + 1824] = 0\n  6570: u64 [a2 + 1816] = 0\n  6574: u64 [a2 + 0x708] = a0\n  6578: a0 = s1 + 0x1000\n  6582: a1 = s1 + 0x7ff\n  6586: a1 = a1 + 0x7e1\n  6590: u64 [a2 + 1808] = 0\n  6594: ra = 160, jump @698\n      : @197 [@dyn 80] (gas: 28)\n  6600: a1 = s1 + 0x7ff\n  6604: a1 = a1 + 0xd9\n  6608: a2 = a1 + 0x700\n  6612: a0 = u64 [a2 + 0x40]\n  6615: a1 = s1 + 0x100\n  6619: u64 [a1 + 0x68] = a0\n  6622: a0 = u64 [a2 + 0x38]\n  6625: u64 [a1 + 0x60] = a0\n  6628: a0 = u64 [a2 + 0x30]\n  6631: u64 [a1 + 0x58] = a0\n  6634: a0 = u64 [a2 + 0x28]\n  6637: u64 [a1 + 0x50] = a0\n  6640: a0 = u64 [a2 + 0x60]\n  6643: u64 [a1 + 0x48] = a0\n  6646: a0 = u64 [a2 + 0x58]\n  6649: u64 [a1 + 0x40] = a0\n  6652: a0 = u64 [a2 + 0x50]\n  6655: u64 [a1 + 0x38] = a0\n  6658: a0 = u64 [a2 + 0x48]\n  6661: u64 [a1 + 0x30] = a0\n  6664: a0 = 0x30070\n  6669: u64 [s1 + 0xe0] = a0\n  6673: i32 a0 = a0 + 0\n  6675: u64 [s1 + 0xd0] = a0\n  6679: ra = 0xa2\n  6683: ecalli 3 // 'caller'\n  6685: t0 = 0xa4\n  6689: jump @718\n      : @198 [@dyn 81] (gas: 1)\n  6692: t0 = 164, jump @718\n      : @199 [@dyn 82] (gas: 9)\n  6698: u64 [a2 + 1792] = 0\n  6702: a4 = a2 + 0x600\n  6706: u64 [a4 + 0xf8] = a1\n  6710: u64 [a4 + 0xf0] = a0\n  6714: a1 = s1 + 0x7ff\n  6718: a1 = a1 + 0x7c1\n  6722: u64 [a4 + 0xe8] = a3\n  6726: a0 = 0\n  6728: ra = 166, jump @19\n      : @200 [@dyn 83] (gas: 11)\n  6734: a0 = s1 + 0x7ff\n  6738: a0 = a0 + 0xd9\n  6742: u64 [a0 + 1760] = 0\n  6746: u64 [a0 + 1752] = 0\n  6750: u64 [a0 + 1744] = 0\n  6754: a2 = a0\n  6756: a0 = 0x20\n  6759: a1 = s1 + 0x7ff\n  6763: a1 = a1 + 0x7a1\n  6767: u64 [a2 + 1736] = 0\n  6771: ra = 168, jump @19\n      : @201 [@dyn 84] (gas: 4)\n  6777: a2 = 0x20064\n  6782: a0 = i32 [0x20064]\n  6787: a1 = 0x3f\n  6790: jump @203 if a1 <u a0\n      : @202 (gas: 4)\n  6793: u32 [0x20064] = 0x40\n  6799: u64 [s1 + 0xb8] = a2\n  6803: t0 = 0xaa\n  6807: jump @737\n      : @203 (gas: 2)\n  6810: u64 [s1 + 0xb8] = a2\n  6814: t0 = 170, jump @737\n      : @204 [@dyn 85] (gas: 9)\n  6820: a0 = 0x20070\n  6825: i32 a0 = a0 + 0\n  6827: i32 a2 = a2 + 0\n  6829: a1 = 0x40\n  6832: u64 [s1 + 0xc0] = a0\n  6836: ra = 0xac\n  6840: ecalli 6 // 'hash_keccak_256'\n  6842: t0 = 0xae\n  6846: jump @735\n      : @205 [@dyn 86] (gas: 1)\n  6849: t0 = 174, jump @735\n      : @206 [@dyn 87] (gas: 10)\n  6855: a4 = s1 + 0x10d8\n  6859: a5 = a4 + 0x600\n  6863: u64 [a5 + 0xe0] = a3\n  6867: u64 [a5 + 0xd8] = a2\n  6871: u64 [a5 + 0xd0] = a1\n  6875: u64 [a5 + 0xc8] = a0\n  6879: a0 = s1 + 0x7ff\n  6883: a0 = a0 + 0x781\n  6887: a1 = s1 + 0x17a0\n  6891: ra = 176, jump @21\n      : @207 [@dyn 88] (gas: 12)\n  6897: a2 = s1 + 0x7ff\n  6901: a2 = a2 + 0xd9\n  6905: a0 = u32 [a2 + 0x6b8]\n  6909: a1 = u64 [a2 + 0x6a8]\n  6913: a2 = u64 [a2 + 0x6b0]\n  6917: a0 = a0 | a1\n  6920: a0 = a0 | a2\n  6923: u64 [s1 + 0x178] = a0\n  6927: a0 = s1 + 0x7ff\n  6931: a0 = a0 + 0x761\n  6935: a1 = 0x40\n  6938: ra = 178, jump @17\n      : @208 [@dyn 89] (gas: 12)\n  6944: a2 = s1 + 0x7ff\n  6948: a2 = a2 + 0xd9\n  6952: a0 = a2 + 0x600\n  6956: a5 = u64 [a0 + 0xa0]\n  6960: a1 = u64 [a0 + 0x98]\n  6964: a3 = u64 [a0 + 0x88]\n  6968: t1 = u64 [a2 + 0x690]\n  6972: t2 = a3 | a1\n  6975: a4 = t1 | a5\n  6978: t0 = a1 | a5\n  6981: a0 = u64 [s1 + 0x178]\n  6985: jump @287 if a0 != 0\n      : @209 (gas: 14)\n  6989: u64 [s1 + 0x170] = t0\n  6993: u64 [a2 + 0x5e8] = a3\n  6997: u64 [a2 + 0x5f0] = t1\n  7001: u64 [a2 + 0x5f8] = a1\n  7005: u64 [s1 + 0x178] = t2\n  7009: a0 = s1 + 0x7ff\n  7013: a0 = a0 + 0x6c1\n  7017: u64 [s1 + 0xa8] = a5\n  7021: u64 [a2 + 0x600] = a5\n  7025: u64 [s1 + 0xd8] = a3\n  7029: u64 [s1 + 0xc8] = t1\n  7033: u64 [s1 + 0xb0] = a1\n  7037: u64 [s1 + 0x128] = a4\n  7041: ra = 180, jump @611\n      : @210 [@dyn 90] (gas: 4)\n  7047: a0 = u64 [s1 + 0xd0]\n  7051: ra = 0xb6\n  7055: ecalli 3 // 'caller'\n  7057: fallthrough\n      : @211 [@dyn 91] (gas: 9)\n  7058: a0 = u64 [s1 + 0x178]\n  7062: a2 = u64 [s1 + 0x128]\n  7066: a0 = a0 | a2\n  7069: a0 = a0 >> 0x20\n  7072: a1 = u64 [s1 + 0xb0]\n  7076: a1 = a1 | a2\n  7079: a1 = a1 << 0x20\n  7082: a0 = a0 | a1\n  7085: jump @213 if a0 == 0\n      : @212 (gas: 1)\n  7088: jump @549\n      : @213 (gas: 1)\n  7091: t0 = 184, jump @718\n      : @214 [@dyn 92] (gas: 9)\n  7097: u64 [a2 + 1504] = 0\n  7101: a4 = a2 + 0x500\n  7105: u64 [a4 + 0xd8] = a1\n  7109: u64 [a4 + 0xd0] = a0\n  7113: a1 = s1 + 0x7ff\n  7117: a1 = a1 + 0x6a1\n  7121: u64 [a4 + 0xc8] = a3\n  7125: a0 = u64 [s1 + 0xd8]\n  7129: ra = 186, jump @19\n      : @215 [@dyn 93] (gas: 9)\n  7135: a2 = 0x100000000\n  7145: a0 = 0xffffffe0\n  7155: a3 = u64 [s1 + 0xd8]\n  7159: a0 = a3 <u a0\n  7162: a1 = u64 [s1 + 0xc8]\n  7166: a0 = 0 if a1 != 0\n  7168: a5 = u64 [s1 + 0x170]\n  7172: a0 = 0 if a5 != 0\n  7174: jump @217 if a0 != 0\n      : @216 (gas: 1)\n  7177: jump @549\n      : @217 (gas: 18)\n  7180: i32 a4 = a3 + 0x20\n  7183: a0 = u64 [s1 + 0x150]\n  7187: a3 = s1 + 0x7ff\n  7191: a3 = a3 + 0xd9\n  7195: a5 = a3 + 0x500\n  7199: u64 [a5 + 0xa8] = a0\n  7203: a0 = u64 [s1 + 0x158]\n  7207: u64 [a5 + 0xb0] = a0\n  7211: a0 = u64 [s1 + 0x160]\n  7215: u64 [a5 + 0xb8] = a0\n  7219: a1 = s1 + 0x7ff\n  7223: a1 = a1 + 0x681\n  7227: a0 = u64 [s1 + 0x168]\n  7231: u64 [a5 + 0xc0] = a0\n  7235: u64 [s1 + 0x168] = a4\n  7239: a0 = a4\n  7241: u64 [s1 + 0x178] = a2\n  7245: ra = 188, jump @19\n      : @218 [@dyn 94] (gas: 9)\n  7251: a1 = u64 [s1 + 0xd8]\n  7255: a0 = u64 [s1 + 0x178]\n  7259: a0 = a0 + 0xffffffffffffffc0\n  7262: a0 = a1 <u a0\n  7265: a2 = u64 [s1 + 0xc8]\n  7269: a0 = 0 if a2 != 0\n  7271: a2 = u64 [s1 + 0x170]\n  7275: a0 = 0 if a2 != 0\n  7277: jump @220 if a0 != 0\n      : @219 (gas: 1)\n  7280: jump @549\n      : @220 (gas: 18)\n  7283: a0 = 0xffffffff\n  7293: u64 [s1 + 0x80] = a0\n  7297: i32 a0 = a1 + 0x40\n  7300: a1 = u64 [s1 + 0x130]\n  7304: a3 = s1 + 0x7ff\n  7308: a3 = a3 + 0xd9\n  7312: a4 = a3 + 0x500\n  7316: u64 [a4 + 0x88] = a1\n  7320: a1 = u64 [s1 + 0x138]\n  7324: u64 [a4 + 0x90] = a1\n  7328: a1 = u64 [s1 + 0x140]\n  7332: u64 [a4 + 0x98] = a1\n  7336: a1 = s1 + 0x7ff\n  7340: a1 = a1 + 0x661\n  7344: a2 = u64 [s1 + 0x148]\n  7348: u64 [a4 + 0xa0] = a2\n  7352: u64 [s1 + 0x60] = a0\n  7355: ra = 190, jump @19\n      : @221 [@dyn 95] (gas: 5)\n  7361: a0 = u64 [s1 + 0xd0]\n  7365: ra = 0xc0\n  7369: ecalli 3 // 'caller'\n  7371: t0 = 0xc2\n  7375: jump @718\n      : @222 [@dyn 96] (gas: 1)\n  7378: t0 = 194, jump @718\n      : @223 [@dyn 97] (gas: 9)\n  7384: u64 [a2 + 1408] = 0\n  7388: a4 = a2 + 0x500\n  7392: u64 [a4 + 0x78] = a1\n  7395: u64 [a4 + 0x70] = a0\n  7398: a1 = s1 + 0x7ff\n  7402: a1 = a1 + 0x641\n  7406: u64 [a4 + 0x68] = a3\n  7409: a0 = 0\n  7411: ra = 196, jump @19\n      : @224 [@dyn 98] (gas: 11)\n  7417: a0 = s1 + 0x7ff\n  7421: a0 = a0 + 0xd9\n  7425: u64 [a0 + 1376] = 0\n  7429: u64 [a0 + 1368] = 0\n  7433: u64 [a0 + 1360] = 0\n  7437: a2 = a0\n  7439: a0 = 0x20\n  7442: a1 = s1 + 0x7ff\n  7446: a1 = a1 + 0x621\n  7450: u64 [a2 + 1352] = 0\n  7454: ra = 198, jump @19\n      : @225 [@dyn 99] (gas: 7)\n  7460: a0 = sp + 0xffffffffffffffe0\n  7463: a0 = a0 & 0xffffffffffffffe0\n  7466: u64 [s1 + 0x178] = a0\n  7470: sp = a0\n  7472: a2 = u64 [s1 + 0xb8]\n  7476: a0 = i32 [a2]\n  7478: jump @227 if a0 >u 63\n      : @226 (gas: 2)\n  7482: u32 [a2 + 0] = 0x40\n  7485: fallthrough\n      : @227 (gas: 30)\n  7486: a0 = sp + 0xffffffffffffffe0\n  7489: a0 = a0 & 0xffffffffffffffe0\n  7492: u64 [s1 + 0x170] = a0\n  7496: sp = a0\n  7498: i32 a2 = a0 + 0\n  7500: a1 = 0x40\n  7503: a0 = u64 [s1 + 0xc0]\n  7507: ecalli 6 // 'hash_keccak_256'\n  7509: a3 = u64 [s1 + 0x170]\n  7513: a0 = u64 [a3 + 0x18]\n  7516: a1 = u64 [a3 + 0x10]\n  7519: a2 = u64 [a3 + 0x8]\n  7522: a3 = u64 [a3]\n  7524: a5 = reverse a0\n  7526: u64 [s1 + 0x88] = a5\n  7530: a4 = reverse a1\n  7532: u64 [s1 + 0x90] = a4\n  7536: a1 = reverse a2\n  7538: u64 [s1 + 0xa0] = a1\n  7542: a0 = reverse a3\n  7544: u64 [s1 + 0x98] = a0\n  7548: a2 = u64 [s1 + 0x178]\n  7552: u64 [a2 + 0x18] = a0\n  7555: u64 [a2 + 0x10] = a1\n  7558: u64 [a2 + 0x8] = a4\n  7561: u64 [a2] = a5\n  7563: a0 = s1 + 0x7ff\n  7567: a0 = a0 + 0x601\n  7571: a1 = u64 [s1 + 0xd8]\n  7575: ra = 200, jump @17\n      : @228 [@dyn 100] (gas: 17)\n  7581: a2 = s1 + 0x7ff\n  7585: a2 = a2 + 0xd9\n  7589: a3 = a2 + 0x500\n  7593: a0 = u64 [a3 + 0x28]\n  7596: a1 = u64 [a3 + 0x30]\n  7599: a2 = u64 [a3 + 0x38]\n  7602: a0 = a0 & 0xffffffffffffffff\n  7605: u64 [s1 + 0x170] = a0\n  7609: a1 = a1 & 0xffffffffffffffff\n  7612: u64 [s1 + 0x160] = a1\n  7616: a0 = u64 [s1 + 0x80]\n  7620: a0 = a0 & a2\n  7623: u64 [s1 + 0x158] = a0\n  7627: a0 = s1 + 0x7ff\n  7631: a0 = a0 + 0x5e1\n  7635: a1 = u64 [s1 + 0x178]\n  7639: ra = 202, jump @21\n      : @229 [@dyn 101] (gas: 18)\n  7645: a1 = s1 + 0x7ff\n  7649: a1 = a1 + 0xd9\n  7653: a0 = u32 [a1 + 0x51c]\n  7657: a0 = a0 << 0x20\n  7660: a1 = u64 [a1 + 0x520]\n  7664: a2 = u64 [s1 + 0x158]\n  7668: a0 = a0 | a2\n  7671: a2 = s1 + 0x10d8\n  7675: a3 = u64 [s1 + 0x160]\n  7679: a4 = a2 + 0x600\n  7683: u64 [a4 + 0xf0] = a3\n  7687: a3 = u64 [s1 + 0x170]\n  7691: u64 [a4 + 0xe8] = a3\n  7695: u64 [a2 + 0x700] = a1\n  7699: u64 [a4 + 0xf8] = a0\n  7703: a1 = s1 + 0x17c0\n  7707: a0 = u64 [s1 + 0x178]\n  7711: ra = 204, jump @23\n      : @230 [@dyn 102] (gas: 28)\n  7717: a0 = sp + 0xffffffffffffffe0\n  7720: a1 = a0 & 0xffffffffffffffe0\n  7723: sp = a1\n  7725: a2 = u64 [s1 + 0x88]\n  7729: a2 = a2 + 0x1\n  7732: a0 = a2 <u 0x1\n  7735: a3 = u64 [s1 + 0x90]\n  7739: a3 = a3 + a0\n  7742: a0 = a2 | a3\n  7745: a0 = a0 <u 0x1\n  7748: a5 = u64 [s1 + 0xa0]\n  7752: a4 = a5 + a0\n  7755: a0 = a4 <u a5\n  7758: a5 = u64 [s1 + 0x98]\n  7762: a0 = a0 + a5\n  7765: u64 [s1 + 0x128] = a0\n  7769: u64 [a1 + 0x18] = a0\n  7772: u64 [s1 + 0x118] = a4\n  7776: u64 [a1 + 0x10] = a4\n  7779: u64 [s1 + 0x120] = a3\n  7783: u64 [a1 + 0x8] = a3\n  7786: u64 [s1 + 0x70] = a1\n  7789: u64 [s1 + 0x130] = a2\n  7793: u64 [a1] = a2\n  7795: a0 = s1 + 0x7ff\n  7799: a0 = a0 + 0x5c1\n  7803: a1 = u64 [s1 + 0x168]\n  7807: ra = 206, jump @17\n      : @231 [@dyn 103] (gas: 8)\n  7813: a0 = s1 + 0x7ff\n  7817: a0 = a0 + 0xd9\n  7821: a3 = u64 [a0 + 0x500]\n  7825: a5 = a0 + 0x400\n  7829: a4 = u64 [a5 + 0xf8]\n  7833: a2 = u64 [a5 + 0xf0]\n  7837: a1 = u64 [a5 + 0xe8]\n  7841: t0 = 208, jump @734\n      : @232 [@dyn 104] (gas: 1)\n  7847: jump @234 if a0 == 0\n      : @233 (gas: 1)\n  7850: jump @549\n      : @234 (gas: 4)\n  7853: a0 = s1 + 0x7ff\n  7857: a0 = a0 + 0x5a1\n  7861: u64 [s1 + 0xf8] = a1\n  7865: ra = 210, jump @17\n      : @235 [@dyn 105] (gas: 19)\n  7871: a2 = s1 + 0x7ff\n  7875: a2 = a2 + 0xd9\n  7879: a0 = a2 + 0x400\n  7883: a4 = u64 [a0 + 0xe0]\n  7887: a1 = u64 [a0 + 0xd8]\n  7891: a3 = u64 [a0 + 0xd0]\n  7895: a0 = a4 >u 0\n  7897: a5 = a1 >u 0\n  7899: a5 = a0 if a4 != 0\n  7902: u64 [s1 + 0xf0] = a3\n  7906: a0 = a3 >u 0\n  7908: u64 [s1 + 0x68] = a1\n  7911: u64 [s1 + 0xe8] = a4\n  7915: a1 = a1 | a4\n  7918: u64 [s1 + 0x40] = a0\n  7921: u64 [s1 + 0x48] = a5\n  7924: u64 [s1 + 0x58] = a1\n  7927: a0 = a5 if a1 != 0\n  7930: jump @237 if a0 == 0\n      : @236 (gas: 1)\n  7933: jump @571\n      : @237 (gas: 6)\n  7936: a0 = u64 [a2 + 0x4c8]\n  7940: u64 [s1 + 0x78] = a0\n  7943: a0 = s1 + 0x7ff\n  7947: a0 = a0 + 0x581\n  7951: a1 = u64 [s1 + 0x70]\n  7954: ra = 212, jump @21\n      : @238 [@dyn 106] (gas: 16)\n  7960: a4 = s1 + 0x7ff\n  7964: a4 = a4 + 0xd9\n  7968: a5 = a4 + 0x400\n  7972: a2 = u64 [a5 + 0xa8]\n  7976: a0 = u64 [a5 + 0xb0]\n  7980: a1 = u64 [a5 + 0xb8]\n  7984: a3 = u64 [a5 + 0xc0]\n  7988: u64 [a5 + 0x80] = a3\n  7992: u64 [a5 + 0x78] = a1\n  7995: u64 [a5 + 0x70] = a0\n  7998: a0 = s1 + 0x7ff\n  8002: a0 = a0 + 0x561\n  8006: a1 = s1 + 0x7ff\n  8010: a1 = a1 + 0x541\n  8014: u64 [a5 + 0x68] = a2\n  8017: ra = 214, jump @582\n      : @239 [@dyn 107] (gas: 20)\n  8023: a0 = s1 + 0x7ff\n  8027: a0 = a0 + 0xd9\n  8031: a1 = a0 + 0x400\n  8035: a3 = u64 [a1 + 0xa0]\n  8039: a4 = u64 [a1 + 0x98]\n  8043: a5 = u64 [a1 + 0x90]\n  8047: t0 = u64 [a0 + 0x488]\n  8051: a0 = a3 >u 0\n  8053: a1 = a4 >u 0\n  8055: a1 = a0 if a3 != 0\n  8058: a0 = a5 >u 0\n  8060: a2 = t0 <u 0x20\n  8063: a2 = a2 ^ 0x1\n  8066: a2 = a0 if a5 != 0\n  8069: a0 = a4 | a3\n  8072: a2 = a1 if a0 != 0\n  8075: a0 = u64 [s1 + 0x78]\n  8078: a0 = a0 <u 0x20\n  8081: u64 [s1 + 0x50] = a0\n  8084: jump @241 if a2 != 0\n      : @240 (gas: 1)\n  8087: jump @381\n      : @241 (gas: 2)\n  8090: u64 [s1 + 0x150] = t0\n  8094: t0 = 216, jump @742\n      : @242 [@dyn 108] (gas: 12)\n  8100: a3 = a0 + 0x400\n  8104: u64 [a3 + 0x48] = a1\n  8107: a1 = u64 [a5 + 0x20]\n  8110: u64 [a3 + 0x50] = a1\n  8113: a1 = u64 [a5 + 0x18]\n  8116: u64 [a3 + 0x58] = a1\n  8119: a1 = s1 + 0x7ff\n  8123: a1 = a1 + 0x521\n  8127: a2 = u64 [a5 + 0x28]\n  8130: u64 [a3 + 0x60] = a2\n  8133: a0 = 0\n  8135: ra = 218, jump @19\n      : @243 [@dyn 109] (gas: 3)\n  8141: a2 = u64 [s1 + 0xb8]\n  8145: a0 = i32 [a2]\n  8147: jump @245 if a0 >u 31\n      : @244 (gas: 3)\n  8151: u32 [a2 + 0] = 0x20\n  8154: t0 = 0xdc\n  8158: jump @743\n      : @245 (gas: 1)\n  8161: t0 = 220, jump @743\n      : @246 [@dyn 110] (gas: 5)\n  8167: ra = 0xde\n  8171: ecalli 6 // 'hash_keccak_256'\n  8173: a0 = u64 [s1 + 0x78]\n  8176: t0 = 0xe0\n  8180: jump @741\n      : @247 [@dyn 111] (gas: 2)\n  8183: a0 = u64 [s1 + 0x78]\n  8186: t0 = 224, jump @741\n      : @248 [@dyn 112] (gas: 2)\n  8192: a4 = u64 [s1 + 0x68]\n  8195: t0 = 226, jump @715\n      : @249 [@dyn 113] (gas: 4)\n  8201: a1 = u64 [s1 + 0x50]\n  8204: a1 = 0 if a5 != 0\n  8206: a3 = u64 [s1 + 0x58]\n  8209: t0 = 228, jump @747\n      : @250 [@dyn 114] (gas: 29)\n  8215: t0 = t2 + a0\n  8218: a0 = t0 <u t2\n  8221: a5 = a2 + a0\n  8224: a4 = a4 + a5\n  8227: u64 [s1 + 0x178] = a4\n  8231: a5 = a4 ^ a2\n  8234: a3 = a4 <u a2\n  8237: a3 = a0 if a5 == 0\n  8240: u64 [s1 + 0x140] = a3\n  8244: a0 = u64 [s1 + 0x150]\n  8248: ra = a0 + 0x1f\n  8251: a4 = ra <u a0\n  8254: a3 = u64 [s1 + 0x158]\n  8258: a0 = a3 + a4\n  8261: a5 = a0 <u a3\n  8264: a5 = a4 if a4 == 0\n  8267: t1 = u64 [s1 + 0x170]\n  8271: t1 = t1 + a5\n  8274: a4 = t1 << 0x3b\n  8277: a3 = a0 >> 0x5\n  8280: a3 = a3 | a4\n  8283: a0 = a0 << 0x3b\n  8286: a4 = ra >> 0x5\n  8289: a0 = a0 | a4\n  8292: a0 = a0 + t2\n  8295: u64 [s1 + 0x158] = a0\n  8299: a0 = a0 <u t2\n  8302: t2 = t0\n  8304: t0 = 230, jump @720\n      : @251 [@dyn 115] (gas: 4)\n  8310: a0 = u64 [s1 + 0x68]\n  8313: a0 = a4 <u a0\n  8316: a3 = u64 [s1 + 0xe8]\n  8320: t0 = 232, jump @728\n      : @252 [@dyn 116] (gas: 8)\n  8326: t0 = u64 [a4]\n  8328: a4 = u64 [a4 + 0x8]\n  8331: a0 = a0 >> 0x5\n  8334: a3 = 0 if a1 != 0\n  8336: a0 = 0 if a1 != 0\n  8338: a1 = reverse a4\n  8340: a4 = reverse t0\n  8342: t0 = 234, jump @724\n      : @253 [@dyn 117] (gas: 25)\n  8348: t0 = a0 + a3\n  8351: a0 = u64 [s1 + 0x170]\n  8355: a0 = t1 <u a0\n  8358: a3 = u64 [s1 + 0x160]\n  8362: a0 = a0 + a3\n  8365: a3 = t1 >> 0x5\n  8368: a5 = a0 << 0x3b\n  8371: a3 = a3 | a5\n  8374: a0 = a0 >> 0x5\n  8377: a0 = a0 + a4\n  8380: a5 = s1 + 0x100\n  8384: a4 = u64 [a5 + 0x78]\n  8387: a3 = a3 + a1\n  8390: a1 = a3 <u a1\n  8393: a0 = a0 + a1\n  8396: a2 = a2 + a3\n  8399: u64 [a5 + 0x48] = a2\n  8402: a1 = a2 <u a3\n  8405: a0 = a0 + a1\n  8408: u64 [a5 + 0x40] = a0\n  8411: a0 = sp + 0xffffffffffffffe0\n  8414: t1 = a0 & 0xffffffffffffffe0\n  8417: sp = t1\n  8419: u64 [s1 + 0x138] = t1\n  8423: fallthrough\n      : @254 (gas: 20)\n  8424: a0 = u64 [s1 + 0x158]\n  8428: a0 = t2 <u a0\n  8431: a2 = u64 [s1 + 0x150]\n  8435: a1 = a4 ^ a2\n  8438: a2 = a4 <u a2\n  8441: a2 = a0 if a1 == 0\n  8444: a5 = u64 [s1 + 0x148]\n  8448: a0 = ra <u a5\n  8451: a3 = u64 [s1 + 0x140]\n  8455: a1 = t0 ^ a3\n  8458: a3 = t0 <u a3\n  8461: a3 = a0 if a1 == 0\n  8464: a0 = ra ^ a5\n  8467: a0 = a0 | a1\n  8470: a3 = a2 if a0 == 0\n  8473: u64 [t1] = t2\n  8475: u64 [t1 + 0x8] = a4\n  8478: u64 [t1 + 0x10] = ra\n  8481: u64 [t1 + 0x18] = t0\n  8484: jump @256 if a3 != 0\n      : @255 (gas: 1)\n  8487: jump @381\n      : @256 (gas: 12)\n  8490: a0 = s1 + 0x10d8\n  8494: u64 [a0 + 1824] = 0\n  8498: u64 [a0 + 1816] = 0\n  8502: u64 [a0 + 1808] = 0\n  8506: u64 [a0 + 1800] = 0\n  8510: a1 = s1 + 0x17e0\n  8514: a0 = t1\n  8516: u64 [s1 + 0x170] = t2\n  8520: u64 [s1 + 0x178] = a4\n  8524: u64 [s1 + 0x168] = t0\n  8528: u64 [s1 + 0x160] = ra\n  8532: ra = 236, jump @23\n      : @257 [@dyn 118] (gas: 15)\n  8538: t1 = u64 [s1 + 0x138]\n  8542: t0 = u64 [s1 + 0x168]\n  8546: a4 = u64 [s1 + 0x178]\n  8550: t2 = u64 [s1 + 0x170]\n  8554: t2 = t2 + 0x1\n  8557: a0 = t2 <u 0x1\n  8560: a4 = a4 + a0\n  8563: a0 = t2 | a4\n  8566: a0 = a0 <u 0x1\n  8569: a1 = u64 [s1 + 0x160]\n  8573: a0 = a0 + a1\n  8576: a1 = a0 <u a1\n  8579: t0 = t0 + a1\n  8582: ra = a0\n  8584: jump @254\n      : @258 (gas: 5)\n  8587: a0 = u64 [s1 + 0xa8]\n  8591: ra = 0xee\n  8595: ecalli 3 // 'caller'\n  8597: t0 = 0xf0\n  8601: jump @723\n      : @259 [@dyn 119] (gas: 1)\n  8604: t0 = 240, jump @723\n      : @260 [@dyn 120] (gas: 8)\n  8610: u64 [a2 + 1216] = 0\n  8614: a4 = a2 + 0x400\n  8618: u64 [a4 + 0xb8] = a1\n  8622: u64 [a4 + 0xb0] = a0\n  8626: a1 = s1 + 0x1580\n  8630: u64 [a4 + 0xa8] = a3\n  8634: a0 = 0\n  8636: ra = 242, jump @19\n      : @261 [@dyn 121] (gas: 9)\n  8642: a0 = s1 + 0x10d8\n  8646: u64 [a0 + 1184] = 0\n  8650: u64 [a0 + 1176] = 0\n  8654: u64 [a0 + 1168] = 0\n  8658: a2 = a0\n  8660: a0 = 0x20\n  8663: a1 = s1 + 0x1560\n  8667: u64 [a2 + 1160] = 0\n  8671: ra = 244, jump @19\n      : @262 [@dyn 122] (gas: 7)\n  8677: a0 = sp + 0xffffffffffffffe0\n  8680: a0 = a0 & 0xffffffffffffffe0\n  8683: u64 [s1 + 0x98] = a0\n  8687: sp = a0\n  8689: a2 = u64 [s1 + 0xb0]\n  8693: a0 = i32 [a2]\n  8695: jump @264 if a0 >u 63\n      : @263 (gas: 2)\n  8699: u32 [a2 + 0] = 0x40\n  8702: fallthrough\n      : @264 (gas: 9)\n  8703: a0 = sp + 0xffffffffffffffe0\n  8706: a0 = a0 & 0xffffffffffffffe0\n  8709: u64 [s1 + 0x178] = a0\n  8713: sp = a0\n  8715: i32 a2 = a0 + 0\n  8717: a1 = 0x40\n  8720: a0 = u64 [s1 + 0xb8]\n  8724: ecalli 6 // 'hash_keccak_256'\n  8726: fallthrough\n      : @265 (gas: 45)\n  8727: a3 = u64 [s1 + 0x178]\n  8731: a0 = u64 [a3 + 0x18]\n  8734: a1 = u64 [a3 + 0x10]\n  8737: a2 = u64 [a3 + 0x8]\n  8740: a3 = u64 [a3]\n  8742: a4 = reverse a0\n  8744: ra = reverse a1\n  8746: a5 = reverse a2\n  8748: t0 = reverse a3\n  8750: a0 = u64 [s1 + 0x98]\n  8754: u64 [a0 + 0x18] = t0\n  8757: u64 [a0 + 0x10] = a5\n  8760: a1 = ra\n  8762: u64 [a0 + 0x8] = a1\n  8765: u64 [a0] = a4\n  8767: a0 = sp + 0xffffffffffffffe0\n  8770: a3 = a0 & 0xffffffffffffffe0\n  8773: sp = a3\n  8775: u64 [s1 + 0x78] = a4\n  8778: a2 = a4 + 0x1\n  8781: a0 = a2 <u 0x1\n  8784: u64 [s1 + 0x80] = a1\n  8788: ra = ra + a0\n  8791: a0 = a2 | ra\n  8794: a0 = a0 <u 0x1\n  8797: a4 = a5 + a0\n  8800: t2 = u64 [s1 + 0xf8]\n  8804: a0 = u64 [s1 + 0x110]\n  8808: a0 = a0 | t2\n  8811: a1 = u64 [s1 + 0x108]\n  8815: t1 = u64 [s1 + 0x100]\n  8819: a1 = a1 | t1\n  8822: a0 = a0 | a1\n  8825: a0 = a0 >> 0x20\n  8828: a1 = a1 | t2\n  8831: a1 = a1 << 0x20\n  8834: a0 = a0 | a1\n  8837: a1 = a4 <u a5\n  8840: a1 = a1 + t0\n  8843: u64 [a3 + 0x10] = a4\n  8846: u64 [a3 + 0x8] = ra\n  8849: u64 [a3] = a2\n  8851: u64 [s1 + 0x90] = a3\n  8855: u64 [a3 + 0x18] = a1\n  8858: jump @267 if a0 == 0\n      : @266 (gas: 1)\n  8861: jump @549\n      : @267 (gas: 9)\n  8864: u64 [s1 + 0x30] = t0\n  8867: u64 [s1 + 0x38] = a5\n  8870: u64 [s1 + 0x58] = a1\n  8873: u64 [s1 + 0x60] = a4\n  8876: u64 [s1 + 0x68] = ra\n  8879: u64 [s1 + 0x70] = a2\n  8882: a0 = s1 + 0x1540\n  8886: a1 = u64 [s1 + 0x110]\n  8890: ra = 246, jump @17\n      : @268 [@dyn 123] (gas: 18)\n  8896: a2 = s1 + 0x10d8\n  8900: a0 = a2 + 0x400\n  8904: a4 = u64 [a0 + 0x80]\n  8908: a1 = u64 [a0 + 0x78]\n  8911: a3 = u64 [a0 + 0x70]\n  8914: a0 = a4 >u 0\n  8916: a5 = a1 >u 0\n  8918: a5 = a0 if a4 != 0\n  8921: u64 [s1 + 0x130] = a3\n  8925: a0 = a3 >u 0\n  8927: u64 [s1 + 0x88] = a1\n  8931: u64 [s1 + 0x128] = a4\n  8935: a1 = a1 | a4\n  8938: u64 [s1 + 0xe8] = a0\n  8942: u64 [s1 + 0xf0] = a5\n  8946: u64 [s1 + 0x120] = a1\n  8950: a0 = a5 if a1 != 0\n  8953: jump @270 if a0 == 0\n      : @269 (gas: 1)\n  8956: jump @564\n      : @270 (gas: 5)\n  8959: a0 = u64 [a2 + 0x468]\n  8963: u64 [s1 + 0xa0] = a0\n  8967: a0 = s1 + 0x1520\n  8971: a1 = u64 [s1 + 0x90]\n  8975: ra = 248, jump @21\n      : @271 [@dyn 124] (gas: 13)\n  8981: a4 = s1 + 0x10d8\n  8985: a5 = a4 + 0x400\n  8989: a2 = u64 [a5 + 0x48]\n  8992: a0 = u64 [a5 + 0x50]\n  8995: a1 = u64 [a5 + 0x58]\n  8998: a3 = u64 [a5 + 0x60]\n  9001: u64 [a5 + 0x20] = a3\n  9004: u64 [a5 + 0x18] = a1\n  9007: u64 [a5 + 0x10] = a0\n  9010: a0 = s1 + 0x1500\n  9014: a1 = s1 + 0x14e0\n  9018: u64 [a5 + 0x8] = a2\n  9021: ra = 250, jump @582\n      : @272 [@dyn 125] (gas: 19)\n  9027: a0 = s1 + 0x10d8\n  9031: a1 = a0 + 0x400\n  9035: a3 = u64 [a1 + 0x40]\n  9038: a4 = u64 [a1 + 0x38]\n  9041: a5 = u64 [a1 + 0x30]\n  9044: t0 = u64 [a0 + 0x428]\n  9048: a0 = a3 >u 0\n  9050: a1 = a4 >u 0\n  9052: a1 = a0 if a3 != 0\n  9055: a0 = a5 >u 0\n  9057: a2 = t0 <u 0x20\n  9060: a2 = a2 ^ 0x1\n  9063: a2 = a0 if a5 != 0\n  9066: a0 = a4 | a3\n  9069: a2 = a1 if a0 != 0\n  9072: a0 = u64 [s1 + 0xa0]\n  9076: a0 = a0 <u 0x20\n  9079: u64 [s1 + 0x118] = a0\n  9083: jump @301 if a2 == 0\n      : @273 (gas: 18)\n  9087: u64 [s1 + 0x150] = t0\n  9091: a0 = s1 + 0x100\n  9095: u64 [a0 + 0x58] = a5\n  9098: u64 [a0 + 0x70] = a4\n  9101: u64 [a0 + 0x60] = a3\n  9104: a0 = s1 + 0x10d8\n  9108: a1 = u64 [s1 + 0x70]\n  9111: a2 = a0 + 0x300\n  9115: u64 [a2 + 0xe8] = a1\n  9119: a1 = u64 [s1 + 0x68]\n  9122: u64 [a2 + 0xf0] = a1\n  9126: a1 = u64 [s1 + 0x60]\n  9129: u64 [a2 + 0xf8] = a1\n  9133: a1 = s1 + 0x14c0\n  9137: a2 = u64 [s1 + 0x58]\n  9140: u64 [a0 + 0x400] = a2\n  9144: a0 = 0\n  9146: ra = 252, jump @19\n      : @274 [@dyn 126] (gas: 3)\n  9152: a2 = u64 [s1 + 0xb0]\n  9156: a0 = i32 [a2]\n  9158: jump @276 if a0 >u 31\n      : @275 (gas: 3)\n  9162: u32 [a2 + 0] = 0x20\n  9165: t0 = 0xfe\n  9169: jump @744\n      : @276 (gas: 1)\n  9172: t0 = 254, jump @744\n      : @277 [@dyn 127] (gas: 3)\n  9178: ra = 0x100\n  9182: ecalli 6 // 'hash_keccak_256'\n  9184: fallthrough\n      : @278 [@dyn 128] (gas: 9)\n  9185: a0 = u64 [s1 + 0xa0]\n  9189: a1 = a0 + 0x1f\n  9192: a0 = a1 <u a0\n  9195: a5 = u64 [s1 + 0x130]\n  9199: a2 = a5 + a0\n  9202: a3 = a2 <u a5\n  9205: a3 = a0 if a0 == 0\n  9208: a4 = u64 [s1 + 0x88]\n  9212: t0 = 258, jump @715\n      : @279 [@dyn 129] (gas: 4)\n  9218: a1 = u64 [s1 + 0x118]\n  9222: a1 = 0 if a5 != 0\n  9224: a3 = u64 [s1 + 0x120]\n  9228: t0 = 260, jump @747\n      : @280 [@dyn 130] (gas: 29)\n  9234: t0 = t2 + a0\n  9237: a0 = t0 <u t2\n  9240: a5 = a2 + a0\n  9243: a4 = a4 + a5\n  9246: u64 [s1 + 0x178] = a4\n  9250: a5 = a4 ^ a2\n  9253: a3 = a4 <u a2\n  9256: a3 = a0 if a5 == 0\n  9259: u64 [s1 + 0x140] = a3\n  9263: a0 = u64 [s1 + 0x150]\n  9267: ra = a0 + 0x1f\n  9270: a4 = ra <u a0\n  9273: a3 = u64 [s1 + 0x158]\n  9277: a0 = a3 + a4\n  9280: a5 = a0 <u a3\n  9283: a5 = a4 if a4 == 0\n  9286: t1 = u64 [s1 + 0x170]\n  9290: t1 = t1 + a5\n  9293: a4 = t1 << 0x3b\n  9296: a3 = a0 >> 0x5\n  9299: a3 = a3 | a4\n  9302: a0 = a0 << 0x3b\n  9305: a4 = ra >> 0x5\n  9308: a0 = a0 | a4\n  9311: a0 = a0 + t2\n  9314: u64 [s1 + 0x158] = a0\n  9318: a0 = a0 <u t2\n  9321: t2 = t0\n  9323: t0 = 262, jump @720\n      : @281 [@dyn 131] (gas: 4)\n  9329: a0 = u64 [s1 + 0x88]\n  9333: a0 = a4 <u a0\n  9336: a3 = u64 [s1 + 0x128]\n  9340: t0 = 264, jump @728\n      : @282 [@dyn 132] (gas: 8)\n  9346: t0 = u64 [a4]\n  9348: a4 = u64 [a4 + 0x8]\n  9351: a0 = a0 >> 0x5\n  9354: a3 = 0 if a1 != 0\n  9356: a0 = 0 if a1 != 0\n  9358: a1 = reverse a4\n  9360: a4 = reverse t0\n  9362: t0 = 266, jump @724\n      : @283 [@dyn 133] (gas: 25)\n  9368: t0 = a0 + a3\n  9371: a0 = u64 [s1 + 0x170]\n  9375: a0 = t1 <u a0\n  9378: a3 = u64 [s1 + 0x160]\n  9382: a0 = a0 + a3\n  9385: a3 = t1 >> 0x5\n  9388: a5 = a0 << 0x3b\n  9391: a3 = a3 | a5\n  9394: a0 = a0 >> 0x5\n  9397: a0 = a0 + a4\n  9400: a5 = s1 + 0x100\n  9404: a4 = u64 [a5 + 0x78]\n  9407: a3 = a3 + a1\n  9410: a1 = a3 <u a1\n  9413: a0 = a0 + a1\n  9416: a2 = a2 + a3\n  9419: u64 [a5 + 0x48] = a2\n  9422: a1 = a2 <u a3\n  9425: a0 = a0 + a1\n  9428: u64 [a5 + 0x40] = a0\n  9431: a0 = sp + 0xffffffffffffffe0\n  9434: t1 = a0 & 0xffffffffffffffe0\n  9437: sp = t1\n  9439: u64 [s1 + 0x138] = t1\n  9443: fallthrough\n      : @284 (gas: 21)\n  9444: a0 = u64 [s1 + 0x158]\n  9448: a0 = t2 <u a0\n  9451: a2 = u64 [s1 + 0x150]\n  9455: a1 = a4 ^ a2\n  9458: a2 = a4 <u a2\n  9461: a2 = a0 if a1 == 0\n  9464: a5 = u64 [s1 + 0x148]\n  9468: a0 = ra <u a5\n  9471: a3 = u64 [s1 + 0x140]\n  9475: a1 = t0 ^ a3\n  9478: a3 = t0 <u a3\n  9481: a3 = a0 if a1 == 0\n  9484: a0 = ra ^ a5\n  9487: a0 = a0 | a1\n  9490: a3 = a2 if a0 == 0\n  9493: u64 [t1] = t2\n  9495: u64 [t1 + 0x8] = a4\n  9498: u64 [t1 + 0x10] = ra\n  9501: u64 [t1 + 0x18] = t0\n  9504: a0 = s1 + 0x18d8\n  9508: jump @301 if a3 == 0\n      : @285 (gas: 11)\n  9512: u64 [a0 + 288] = 0\n  9516: u64 [a0 + 280] = 0\n  9520: u64 [a0 + 272] = 0\n  9524: u64 [a0 + 264] = 0\n  9528: a1 = s1 + 0x19e0\n  9532: a0 = t1\n  9534: u64 [s1 + 0x170] = t2\n  9538: u64 [s1 + 0x178] = a4\n  9542: u64 [s1 + 0x168] = t0\n  9546: u64 [s1 + 0x160] = ra\n  9550: ra = 268, jump @23\n      : @286 [@dyn 134] (gas: 15)\n  9556: t1 = u64 [s1 + 0x138]\n  9560: t0 = u64 [s1 + 0x168]\n  9564: a4 = u64 [s1 + 0x178]\n  9568: t2 = u64 [s1 + 0x170]\n  9572: t2 = t2 + 0x1\n  9575: a0 = t2 <u 0x1\n  9578: a4 = a4 + a0\n  9581: a0 = t2 | a4\n  9584: a0 = a0 <u 0x1\n  9587: a1 = u64 [s1 + 0x160]\n  9591: a0 = a0 + a1\n  9594: a1 = a0 <u a1\n  9597: t0 = t0 + a1\n  9600: ra = a0\n  9602: jump @284\n      : @287 (gas: 6)\n  9605: a0 = t2 | a4\n  9608: a0 = a0 >> 0x20\n  9611: a1 = a1 | a4\n  9614: a1 = a1 << 0x20\n  9617: a0 = a0 | a1\n  9620: jump @289 if a0 == 0\n      : @288 (gas: 1)\n  9623: jump @549\n      : @289 (gas: 12)\n  9626: u64 [a2 + 1656] = 0\n  9630: u64 [a2 + 1648] = 0\n  9634: u64 [a2 + 1640] = 0\n  9638: a0 = 0x8c379a000000000\n  9648: a1 = s1 + 0x7ff\n  9652: a1 = a1 + 0x741\n  9656: u64 [a2 + 0x680] = a0\n  9660: a0 = a3\n  9662: u64 [s1 + 0xd8] = a3\n  9666: u64 [s1 + 0xc8] = t1\n  9670: u64 [s1 + 0x170] = t0\n  9674: ra = 270, jump @19\n      : @290 [@dyn 135] (gas: 9)\n  9680: a1 = u64 [s1 + 0xd8]\n  9684: a3 = 0x100000000\n  9694: a0 = 0xfffffffc\n  9704: a0 = a1 <u a0\n  9707: a2 = u64 [s1 + 0xc8]\n  9711: a0 = 0 if a2 != 0\n  9713: a2 = u64 [s1 + 0x170]\n  9717: a0 = 0 if a2 != 0\n  9719: jump @292 if a0 != 0\n      : @291 (gas: 1)\n  9722: jump @549\n      : @292 (gas: 11)\n  9725: i32 a0 = a1 + 0x4\n  9728: a2 = s1 + 0x7ff\n  9732: a2 = a2 + 0xd9\n  9736: u64 [a2 + 1632] = 0\n  9740: u64 [a2 + 1624] = 0\n  9744: u64 [a2 + 1608] = 0x20\n  9749: a1 = s1 + 0x7ff\n  9753: a1 = a1 + 0x721\n  9757: u64 [a2 + 1616] = 0\n  9761: u64 [s1 + 0x178] = a3\n  9765: ra = 272, jump @19\n      : @293 [@dyn 136] (gas: 9)\n  9771: a3 = u64 [s1 + 0x170]\n  9775: a2 = u64 [s1 + 0xc8]\n  9779: a1 = u64 [s1 + 0xd8]\n  9783: a0 = u64 [s1 + 0x178]\n  9787: a0 = a0 + 0xffffffffffffffdc\n  9790: a0 = a1 <u a0\n  9793: a0 = 0 if a2 != 0\n  9795: a0 = 0 if a3 != 0\n  9797: jump @295 if a0 != 0\n      : @294 (gas: 1)\n  9800: jump @549\n      : @295 (gas: 10)\n  9803: i32 a0 = a1 + 0x24\n  9806: a4 = s1 + 0x7ff\n  9810: a4 = a4 + 0xd9\n  9814: u64 [a4 + 1600] = 0\n  9818: u64 [a4 + 1592] = 0\n  9822: u64 [a4 + 1576] = 0x12\n  9827: a1 = s1 + 0x7ff\n  9831: a1 = a1 + 0x701\n  9835: u64 [a4 + 1584] = 0\n  9839: ra = 274, jump @19\n      : @296 [@dyn 137] (gas: 8)\n  9845: a3 = u64 [s1 + 0xd8]\n  9849: a0 = 0xffffffbc\n  9859: a0 = a3 <u a0\n  9862: a1 = u64 [s1 + 0xc8]\n  9866: a0 = 0 if a1 != 0\n  9868: a1 = u64 [s1 + 0x170]\n  9872: a0 = 0 if a1 != 0\n  9874: jump @298 if a0 != 0\n      : @297 (gas: 1)\n  9877: jump @549\n      : @298 (gas: 14)\n  9880: i32 a0 = a3 + 0x44\n  9883: a1 = u64 [0x20030]\n  9888: a2 = u64 [0x20038]\n  9893: a4 = s1 + 0x7ff\n  9897: a4 = a4 + 0xd9\n  9901: a3 = a4 + 0x600\n  9905: u64 [a3 + 0x20] = a1\n  9908: u64 [a3 + 0x18] = a2\n  9911: a1 = 0x6564000000000000\n  9921: u64 [a3 + 0x10] = a1\n  9924: a1 = s1 + 0x7ff\n  9928: a1 = a1 + 0x6e1\n  9932: u64 [a4 + 1544] = 0\n  9936: ra = 276, jump @19\n      : @299 [@dyn 138] (gas: 3)\n  9942: a1 = 0x64\n  9945: a0 = u64 [s1 + 0xd8]\n  9949: ra = 278, jump @26\n      : @300 [@dyn 139] (gas: 5)\n  9955: i32 a1 = a0 + 0\n  9957: a0 = 0x1\n  9960: a2 = 0x64\n  9963: ecalli 7 // 'seal_return'\n  9965: fallthrough\n      : @301 (gas: 27)\n  9966: a0 = u64 [s1 + 0x118]\n  9970: a0 = a0 ^ 0x1\n  9973: ra = u64 [s1 + 0x130]\n  9977: a1 = u64 [s1 + 0xe8]\n  9981: a0 = a1 if ra != 0\n  9984: a1 = u64 [s1 + 0xf0]\n  9988: a2 = u64 [s1 + 0x120]\n  9992: a0 = a1 if a2 != 0\n  9995: t1 = u64 [s1 + 0x128]\n  9999: t0 = ra | t1\n 10002: a2 = u64 [s1 + 0x88]\n 10006: a1 = a2 >> 0x3f\n 10009: u64 [s1 + 0x28] = a1\n 10012: t1 = t1 << 0x1\n 10015: a5 = ra >> 0x3f\n 10018: a4 = a2 << 0x1\n 10021: a1 = u64 [s1 + 0xa0]\n 10025: t2 = a1 >> 0x3f\n 10028: ra = ra << 0x1\n 10031: a3 = a1 << 0x1\n 10034: u64 [s1 + 0x10] = a3\n 10037: u64 [s1 + 0x20] = t1\n 10040: u64 [s1 + 0x18] = t2\n 10043: u64 [s1 + 0x50] = a5\n 10046: u64 [s1 + 0x48] = ra\n 10049: u64 [s1 + 0x40] = a4\n 10052: jump @314 if a0 == 0\n      : @302 (gas: 16)\n 10056: u64 [s1 + 0xe8] = t0\n 10060: a1 = a1 & 0xffffffffffffffe0\n 10063: u64 [s1 + 0xf0] = a1\n 10067: a0 = s1 + 0x10d8\n 10071: a1 = u64 [s1 + 0x70]\n 10074: a3 = a0 + 0x300\n 10078: u64 [a3 + 0xa8] = a1\n 10082: a1 = u64 [s1 + 0x68]\n 10085: u64 [a3 + 0xb0] = a1\n 10089: a1 = u64 [s1 + 0x60]\n 10092: u64 [a3 + 0xb8] = a1\n 10096: a1 = s1 + 0x1480\n 10100: a2 = u64 [s1 + 0x58]\n 10103: u64 [a3 + 0xc0] = a2\n 10107: a0 = 0\n 10109: ra = 280, jump @19\n      : @303 [@dyn 140] (gas: 7)\n 10115: a0 = sp + 0xffffffffffffffe0\n 10118: a0 = a0 & 0xffffffffffffffe0\n 10121: u64 [s1 + 0x158] = a0\n 10125: sp = a0\n 10127: a1 = 0x20\n 10130: a0 = 0\n 10132: ra = 282, jump @26\n      : @304 [@dyn 141] (gas: 1)\n 10138: t0 = 284, jump @740\n      : @305 [@dyn 142] (gas: 28)\n 10144: ecalli 6 // 'hash_keccak_256'\n 10146: u64 [s1 + 376] = 0x20\n 10151: t0 = 0\n 10153: u64 [s1 + 368] = 0\n 10157: u64 [s1 + 360] = 0\n 10161: a4 = 0\n 10163: a5 = 0\n 10165: ra = 0\n 10167: u64 [s1 + 352] = 0\n 10171: a3 = u64 [s1 + 0x150]\n 10175: a0 = u64 [a3 + 0x18]\n 10178: a1 = u64 [a3 + 0x10]\n 10181: a2 = u64 [a3 + 0x8]\n 10184: t1 = u64 [a3]\n 10186: a0 = reverse a0\n 10188: a1 = reverse a1\n 10190: a3 = reverse a2\n 10192: t1 = reverse t1\n 10194: t2 = t1\n 10196: a2 = u64 [s1 + 0x158]\n 10200: u64 [a2 + 0x18] = t1\n 10203: u64 [s1 + 0x148] = a3\n 10207: u64 [a2 + 0x10] = a3\n 10210: u64 [s1 + 0x150] = a1\n 10214: u64 [a2 + 0x8] = a1\n 10217: a3 = a0\n 10219: u64 [a2] = a0\n 10221: fallthrough\n      : @306 (gas: 25)\n 10222: u64 [s1 + 0x140] = t2\n 10226: t1 = a3\n 10228: a0 = u64 [s1 + 0xf0]\n 10232: u64 [s1 + 0x138] = a4\n 10236: a0 = a4 <u a0\n 10239: a4 = a0 ^ 0x1\n 10242: u64 [s1 + 0x130] = a5\n 10246: a4 = 0x1 if a5 != 0\n 10249: a5 = s1 + 0x100\n 10253: a0 = u64 [a5 + 0x60]\n 10256: a0 = ra | a0\n 10259: a4 = 0x1 if a0 != 0\n 10262: a1 = u64 [a5 + 0x10]\n 10265: a0 = u64 [a5 + 0x78]\n 10268: a1 = a1 + a0\n 10271: a3 = u64 [a5 + 0x8]\n 10274: a3 = a3 + t0\n 10277: a2 = u64 [s1 + 0xf8]\n 10281: a0 = u64 [a5 + 0x70]\n 10284: a2 = a2 + a0\n 10287: a0 = u64 [a5]\n 10289: t2 = u64 [s1 + 0x168]\n 10293: t2 = t2 + a0\n 10296: a0 = u64 [s1 + 0xe8]\n 10300: jump @317 if a4 != 0\n      : @307 (gas: 9)\n 10304: a0 = u64 [s1 + 0x178]\n 10308: a4 = a1 <u a0\n 10311: a3 = a3 + a4\n 10314: a0 = t0\n 10316: t0 = a3 ^ t0\n 10319: u64 [s1 + 0x120] = a0\n 10323: a5 = a3 <u a0\n 10326: a5 = a4 if t0 == 0\n 10329: t0 = 286, jump @725\n      : @308 [@dyn 143] (gas: 1)\n 10335: jump @310 if a0 == 0\n      : @309 (gas: 1)\n 10338: jump @549\n      : @310 (gas: 3)\n 10341: a0 = s1 + 0x1120\n 10345: u64 [s1 + 0x118] = ra\n 10349: ra = 288, jump @17\n      : @311 [@dyn 144] (gas: 14)\n 10355: a3 = s1 + 0x10d8\n 10359: a0 = u64 [a3 + 0x60]\n 10362: a1 = u64 [a3 + 0x58]\n 10365: a2 = u64 [a3 + 0x50]\n 10368: a3 = u64 [a3 + 0x48]\n 10371: a4 = s1 + 0x18d8\n 10375: a5 = a4 + 0x100\n 10379: u64 [a5 + 0x40] = a0\n 10382: u64 [a5 + 0x38] = a1\n 10385: u64 [a5 + 0x30] = a2\n 10388: u64 [a5 + 0x28] = a3\n 10391: a1 = s1 + 0x1a00\n 10395: a0 = u64 [s1 + 0x158]\n 10399: ra = 290, jump @23\n      : @312 [@dyn 145] (gas: 44)\n 10405: t2 = u64 [s1 + 0x128]\n 10409: t2 = t2 + 0x1\n 10412: a0 = t2 <u 0x1\n 10415: t0 = u64 [s1 + 0x150]\n 10419: t0 = t0 + a0\n 10422: a0 = t2 | t0\n 10425: a0 = a0 <u 0x1\n 10428: a1 = u64 [s1 + 0x148]\n 10432: t1 = a1 + a0\n 10435: a1 = t1 <u a1\n 10438: a0 = u64 [s1 + 0x140]\n 10442: a0 = a0 + a1\n 10445: a1 = u64 [s1 + 0x178]\n 10449: a2 = a1 + 0x20\n 10452: u64 [s1 + 0x140] = a2\n 10456: a3 = a2 <u a1\n 10459: a1 = u64 [s1 + 0x120]\n 10463: a2 = a1 + a3\n 10466: u64 [s1 + 0x128] = a2\n 10470: a4 = a2 <u a1\n 10473: a4 = a3 if a3 == 0\n 10476: a1 = u64 [s1 + 0x170]\n 10480: ra = a1 + a4\n 10483: a4 = ra <u a1\n 10486: a1 = u64 [s1 + 0x168]\n 10490: a1 = a1 + a4\n 10493: u64 [s1 + 0x168] = a1\n 10497: a1 = u64 [s1 + 0x138]\n 10501: a4 = a1 + 0x20\n 10504: a5 = a4 <u a1\n 10507: a2 = u64 [s1 + 0x130]\n 10511: a1 = a2 + a5\n 10514: a2 = a1 <u a2\n 10517: a2 = a5 if a5 == 0\n 10520: a3 = u64 [s1 + 0x118]\n 10524: a2 = a2 + a3\n 10527: a5 = a2 <u a3\n 10530: a3 = u64 [s1 + 0x160]\n 10534: a3 = a3 + a5\n 10537: u64 [s1 + 0x160] = a3\n 10541: u64 [s1 + 0x150] = t0\n 10545: a5 = u64 [s1 + 0x158]\n 10549: u64 [a5 + 0x8] = t0\n 10552: t0 = 292, jump @736\n      : @313 [@dyn 146] (gas: 5)\n 10558: t0 = u64 [s1 + 0x128]\n 10562: u64 [s1 + 0x170] = ra\n 10566: a5 = a1\n 10568: ra = a2\n 10570: jump @306\n      : @314 (gas: 4)\n 10573: a0 = a1 | a2\n 10576: a0 = a0 | t0\n 10579: a2 = u64 [s1 + 0x110]\n 10583: jump @332 if a0 != 0\n      : @315 (gas: 1)\n 10587: t0 = 294, jump @727\n      : @316 [@dyn 147] (gas: 6)\n 10593: a2 = u64 [s1 + 0x28]\n 10596: t0 = u64 [s1 + 0x20]\n 10599: a4 = u64 [s1 + 0x50]\n 10602: a5 = u64 [s1 + 0x40]\n 10605: t1 = u64 [s1 + 0x48]\n 10608: jump @336\n      : @317 (gas: 11)\n 10611: ra = t0\n 10613: a4 = u64 [s1 + 0xa0]\n 10617: a5 = u64 [s1 + 0xf0]\n 10621: a4 = a4 ^ a5\n 10624: a5 = u64 [s1 + 0x88]\n 10628: a4 = a4 | a5\n 10631: a4 = a4 | a0\n 10634: t1 = u64 [s1 + 0x50]\n 10637: t0 = u64 [s1 + 0x48]\n 10640: a5 = u64 [s1 + 0x40]\n 10643: jump @331 if a4 == 0\n      : @318 (gas: 7)\n 10647: a0 = u64 [s1 + 0x178]\n 10651: a4 = a1 <u a0\n 10654: a3 = a3 + a4\n 10657: t0 = a3 ^ ra\n 10660: a5 = a3 <u ra\n 10663: a5 = a4 if t0 == 0\n 10666: t0 = 296, jump @726\n      : @319 [@dyn 148] (gas: 1)\n 10672: jump @321 if a0 == 0\n      : @320 (gas: 1)\n 10675: jump @549\n      : @321 (gas: 2)\n 10678: a0 = s1 + 0x1460\n 10682: ra = 298, jump @17\n      : @322 [@dyn 149] (gas: 12)\n 10688: a0 = s1 + 0x10d8\n 10692: a2 = a0 + 0x300\n 10696: a1 = u64 [a2 + 0xa0]\n 10700: u64 [s1 + 0x170] = a1\n 10704: a1 = u64 [a2 + 0x98]\n 10708: u64 [s1 + 0x168] = a1\n 10712: a1 = u64 [a2 + 0x90]\n 10716: u64 [s1 + 0x160] = a1\n 10720: a0 = u64 [a2 + 0x88]\n 10724: u64 [s1 + 0x150] = a0\n 10728: a0 = u64 [s1 + 0xa0]\n 10732: t0 = 300, jump @721\n      : @323 [@dyn 150] (gas: 1)\n 10738: ra = 302, jump @753\n      : @324 [@dyn 151] (gas: 1)\n 10744: t0 = 304, jump @731\n      : @325 [@dyn 152] (gas: 1)\n 10750: ra = 306, jump @748\n      : @326 [@dyn 153] (gas: 1)\n 10756: t0 = 308, jump @719\n      : @327 [@dyn 154] (gas: 1)\n 10762: ra = 310, jump @748\n      : @328 [@dyn 155] (gas: 1)\n 10768: t0 = 312, jump @716\n      : @329 [@dyn 156] (gas: 9)\n 10774: a4 = s1 + 0x18d8\n 10778: a5 = a4 + 0x100\n 10782: u64 [a5 + 0x60] = a3\n 10785: u64 [a5 + 0x58] = a2\n 10788: u64 [a5 + 0x50] = a1\n 10791: u64 [a5 + 0x48] = a0\n 10794: a1 = s1 + 0x1a20\n 10798: a0 = u64 [s1 + 0x158]\n 10802: ra = 314, jump @23\n      : @330 [@dyn 157] (gas: 4)\n 10808: a5 = u64 [s1 + 0x40]\n 10811: t0 = u64 [s1 + 0x48]\n 10814: t1 = u64 [s1 + 0x50]\n 10817: fallthrough\n      : @331 (gas: 16)\n 10818: a0 = u64 [s1 + 0x28]\n 10821: a1 = u64 [s1 + 0x20]\n 10824: a0 = a0 | a1\n 10827: a1 = a5 | t1\n 10830: a2 = u64 [s1 + 0x18]\n 10833: a2 = t0 | a2\n 10836: a3 = u64 [s1 + 0x10]\n 10839: a3 = a3 + 0x1\n 10842: a4 = s1 + 0x18d8\n 10846: a5 = a4 + 0x100\n 10850: u64 [a5 + 0x68] = a3\n 10853: u64 [a5 + 0x70] = a2\n 10856: u64 [a5 + 0x78] = a1\n 10859: u64 [a5 + 0x80] = a0\n 10863: a0 = 0x1a40\n 10867: jump @343\n      : @332 (gas: 9)\n 10870: a0 = u64 [s1 + 0x100]\n 10874: a1 = u64 [s1 + 0xf8]\n 10878: a0 = a0 | a1\n 10881: a1 = 0xffffffe0\n 10891: a1 = a2 <u a1\n 10894: a3 = u64 [s1 + 0x108]\n 10898: a1 = 0 if a3 != 0\n 10900: a1 = 0 if a0 != 0\n 10902: jump @334 if a1 != 0\n      : @333 (gas: 1)\n 10905: jump @549\n      : @334 (gas: 3)\n 10908: i32 a1 = a2 + 0x20\n 10911: a0 = s1 + 0x14a0\n 10915: ra = 316, jump @17\n      : @335 [@dyn 158] (gas: 16)\n 10921: a5 = u64 [s1 + 0x40]\n 10924: t1 = u64 [s1 + 0x48]\n 10927: a4 = u64 [s1 + 0x50]\n 10930: t0 = u64 [s1 + 0x20]\n 10933: a2 = u64 [s1 + 0x28]\n 10936: a0 = s1 + 0x10d8\n 10940: a3 = a0 + 0x300\n 10944: a1 = u64 [a3 + 0xe0]\n 10948: u64 [s1 + 0x170] = a1\n 10952: a1 = u64 [a3 + 0xd8]\n 10956: u64 [s1 + 0x168] = a1\n 10960: a1 = u64 [a3 + 0xd0]\n 10964: u64 [s1 + 0x158] = a1\n 10968: a0 = u64 [a3 + 0xc8]\n 10972: u64 [s1 + 0x160] = a0\n 10976: fallthrough\n      : @336 (gas: 10)\n 10977: a1 = u64 [s1 + 0x18]\n 10980: a0 = a5 | a4\n 10983: u64 [s1 + 0x150] = a0\n 10987: a0 = t0 | a2\n 10990: u64 [s1 + 0x148] = a0\n 10994: a0 = t1 | a1\n 10997: u64 [s1 + 0x140] = a0\n 11001: a1 = u64 [s1 + 0xa0]\n 11005: a1 = a1 << 0x3\n 11008: t0 = 318, jump @738\n      : @337 [@dyn 159] (gas: 1)\n 11014: ra = 320, jump @753\n      : @338 [@dyn 160] (gas: 7)\n 11020: u64 [s1 + 0x120] = a0\n 11024: u64 [s1 + 0x138] = a1\n 11028: a0 = u64 [s1 + 0xa0]\n 11032: i32 a2 = a0 << 0x3\n 11035: a0 = 0xffffffffffffffff\n 11038: a1 = 0xffffffffffffffff\n 11041: ra = 322, jump @748\n      : @339 [@dyn 161] (gas: 1)\n 11047: t0 = 324, jump @732\n      : @340 [@dyn 162] (gas: 1)\n 11053: ra = 326, jump @748\n      : @341 [@dyn 163] (gas: 1)\n 11059: t0 = 328, jump @717\n      : @342 [@dyn 164] (gas: 17)\n 11065: a4 = u64 [s1 + 0x10]\n 11068: a0 = a0 | a4\n 11071: a5 = s1 + 0x100\n 11075: a4 = u64 [a5 + 0x40]\n 11078: a1 = a1 | a4\n 11081: a4 = u64 [a5 + 0x48]\n 11084: a3 = a3 | a4\n 11087: a4 = u64 [a5 + 0x50]\n 11090: a2 = a2 | a4\n 11093: a4 = s1 + 0x18d8\n 11097: a5 = a4 + 0x100\n 11101: u64 [a5 + 0x98] = a2\n 11105: u64 [a5 + 0xa0] = a3\n 11109: u64 [a5 + 0x90] = a1\n 11113: u64 [a5 + 0x88] = a0\n 11117: a0 = 0x1a60\n 11121: fallthrough\n      : @343 (gas: 3)\n 11122: a1 = s1 + a0\n 11125: a0 = u64 [s1 + 0x90]\n 11129: ra = 330, jump @23\n      : @344 [@dyn 165] (gas: 32)\n 11135: a0 = sp + 0xffffffffffffffe0\n 11138: a5 = a0 & 0xffffffffffffffe0\n 11141: sp = a5\n 11143: a0 = u64 [s1 + 0x78]\n 11146: t0 = a0 + 0x2\n 11149: a0 = t0 <u a0\n 11152: a1 = u64 [s1 + 0x80]\n 11156: t1 = a1 + a0\n 11159: a1 = t1 <u a1\n 11162: a1 = a0 if a0 == 0\n 11165: a0 = u64 [s1 + 0x38]\n 11168: ra = a0 + a1\n 11171: a0 = ra <u a0\n 11174: t2 = u64 [s1 + 0x30]\n 11177: t2 = t2 + a0\n 11180: a1 = u64 [s1 + 0xe0]\n 11184: a3 = u64 [s1 + 0xd0]\n 11188: a0 = a1 | a3\n 11191: a2 = u64 [s1 + 0xd8]\n 11195: a4 = u64 [s1 + 0xc8]\n 11199: a2 = a2 | a4\n 11202: a0 = a0 | a2\n 11205: a0 = a0 >> 0x20\n 11208: a2 = a2 | a3\n 11211: a2 = a2 << 0x20\n 11214: a0 = a0 | a2\n 11217: u64 [a5 + 0x10] = ra\n 11220: u64 [a5 + 0x8] = t1\n 11223: u64 [a5] = t0\n 11225: u64 [s1 + 0xf8] = a5\n 11229: u64 [a5 + 0x18] = t2\n 11232: jump @346 if a0 == 0\n      : @345 (gas: 1)\n 11235: jump @549\n      : @346 (gas: 6)\n 11238: u64 [s1 + 0x78] = t2\n 11241: u64 [s1 + 0x80] = ra\n 11245: u64 [s1 + 0x88] = t1\n 11249: u64 [s1 + 0x90] = t0\n 11253: a0 = s1 + 0x1440\n 11257: ra = 332, jump @17\n      : @347 [@dyn 166] (gas: 19)\n 11263: a2 = s1 + 0x10d8\n 11267: a0 = a2 + 0x300\n 11271: a4 = u64 [a0 + 0x80]\n 11275: a3 = u64 [a0 + 0x78]\n 11278: a1 = u64 [a0 + 0x70]\n 11281: a0 = a4 >u 0\n 11283: a5 = a3 >u 0\n 11285: a5 = a0 if a4 != 0\n 11288: u64 [s1 + 0xf0] = a1\n 11292: a0 = a1 >u 0\n 11294: u64 [s1 + 0xe8] = a3\n 11298: u64 [s1 + 0xa0] = a4\n 11302: a3 = a3 | a4\n 11305: a1 = s1 + 0x100\n 11309: u64 [a1 + 0x18] = a0\n 11312: u64 [a1 + 0x20] = a5\n 11315: u64 [a1 + 0x30] = a3\n 11318: a0 = a5 if a3 != 0\n 11321: jump @349 if a0 == 0\n      : @348 (gas: 1)\n 11324: jump @566\n      : @349 (gas: 5)\n 11327: a0 = u64 [a2 + 0x368]\n 11331: u64 [s1 + 0x100] = a0\n 11335: a0 = s1 + 0x1420\n 11339: a1 = u64 [s1 + 0xf8]\n 11343: ra = 334, jump @21\n      : @350 [@dyn 167] (gas: 13)\n 11349: a4 = s1 + 0x10d8\n 11353: a5 = a4 + 0x300\n 11357: a2 = u64 [a5 + 0x48]\n 11360: a0 = u64 [a5 + 0x50]\n 11363: a1 = u64 [a5 + 0x58]\n 11366: a3 = u64 [a5 + 0x60]\n 11369: u64 [a5 + 0x20] = a3\n 11372: u64 [a5 + 0x18] = a1\n 11375: u64 [a5 + 0x10] = a0\n 11378: a0 = s1 + 0x1400\n 11382: a1 = s1 + 0x13e0\n 11386: u64 [a5 + 0x8] = a2\n 11389: ra = 336, jump @582\n      : @351 [@dyn 168] (gas: 19)\n 11395: a0 = s1 + 0x10d8\n 11399: a1 = a0 + 0x300\n 11403: a3 = u64 [a1 + 0x40]\n 11406: a4 = u64 [a1 + 0x38]\n 11409: a5 = u64 [a1 + 0x30]\n 11412: t0 = u64 [a0 + 0x328]\n 11416: a0 = a3 >u 0\n 11418: a1 = a4 >u 0\n 11420: a1 = a0 if a3 != 0\n 11423: a0 = a5 >u 0\n 11425: a2 = t0 <u 0x20\n 11428: a2 = a2 ^ 0x1\n 11431: a2 = a0 if a5 != 0\n 11434: a0 = a4 | a3\n 11437: a2 = a1 if a0 != 0\n 11440: a0 = u64 [s1 + 0x100]\n 11444: a0 = a0 <u 0x20\n 11447: u64 [s1 + 0x128] = a0\n 11451: jump @367 if a2 == 0\n      : @352 (gas: 18)\n 11455: u64 [s1 + 0x150] = t0\n 11459: a0 = s1 + 0x100\n 11463: u64 [a0 + 0x58] = a5\n 11466: u64 [a0 + 0x70] = a4\n 11469: u64 [a0 + 0x60] = a3\n 11472: a0 = s1 + 0x10d8\n 11476: a1 = u64 [s1 + 0x90]\n 11480: a2 = a0 + 0x200\n 11484: u64 [a2 + 0xe8] = a1\n 11488: a1 = u64 [s1 + 0x88]\n 11492: u64 [a2 + 0xf0] = a1\n 11496: a1 = u64 [s1 + 0x80]\n 11500: u64 [a2 + 0xf8] = a1\n 11504: a1 = s1 + 0x13c0\n 11508: a2 = u64 [s1 + 0x78]\n 11511: u64 [a0 + 0x300] = a2\n 11515: a0 = 0\n 11517: ra = 338, jump @19\n      : @353 [@dyn 169] (gas: 3)\n 11523: a2 = u64 [s1 + 0xb0]\n 11527: a0 = i32 [a2]\n 11529: jump @355 if a0 >u 31\n      : @354 (gas: 3)\n 11533: u32 [a2 + 0] = 0x20\n 11536: t0 = 0x154\n 11540: jump @744\n      : @355 (gas: 1)\n 11543: t0 = 340, jump @744\n      : @356 [@dyn 170] (gas: 5)\n 11549: ra = 0x156\n 11553: ecalli 6 // 'hash_keccak_256'\n 11555: a0 = u64 [s1 + 0x100]\n 11559: t0 = 0x158\n 11563: jump @741\n      : @357 [@dyn 171] (gas: 2)\n 11566: a0 = u64 [s1 + 0x100]\n 11570: t0 = 344, jump @741\n      : @358 [@dyn 172] (gas: 2)\n 11576: a4 = u64 [s1 + 0xe8]\n 11580: t0 = 346, jump @715\n      : @359 [@dyn 173] (gas: 4)\n 11586: a1 = u64 [s1 + 0x128]\n 11590: a1 = 0 if a5 != 0\n 11592: a3 = u64 [s1 + 0x130]\n 11596: t0 = 348, jump @747\n      : @360 [@dyn 174] (gas: 29)\n 11602: t0 = t2 + a0\n 11605: a0 = t0 <u t2\n 11608: a5 = a2 + a0\n 11611: a4 = a4 + a5\n 11614: u64 [s1 + 0x178] = a4\n 11618: a5 = a4 ^ a2\n 11621: a3 = a4 <u a2\n 11624: a3 = a0 if a5 == 0\n 11627: u64 [s1 + 0x140] = a3\n 11631: a0 = u64 [s1 + 0x150]\n 11635: ra = a0 + 0x1f\n 11638: a4 = ra <u a0\n 11641: a3 = u64 [s1 + 0x158]\n 11645: a0 = a3 + a4\n 11648: a5 = a0 <u a3\n 11651: a5 = a4 if a4 == 0\n 11654: t1 = u64 [s1 + 0x170]\n 11658: t1 = t1 + a5\n 11661: a4 = t1 << 0x3b\n 11664: a3 = a0 >> 0x5\n 11667: a3 = a3 | a4\n 11670: a0 = a0 << 0x3b\n 11673: a4 = ra >> 0x5\n 11676: a0 = a0 | a4\n 11679: a0 = a0 + t2\n 11682: u64 [s1 + 0x158] = a0\n 11686: a0 = a0 <u t2\n 11689: t2 = t0\n 11691: t0 = 350, jump @720\n      : @361 [@dyn 175] (gas: 4)\n 11697: a0 = u64 [s1 + 0xe8]\n 11701: a0 = a4 <u a0\n 11704: a3 = u64 [s1 + 0xa0]\n 11708: t0 = 352, jump @728\n      : @362 [@dyn 176] (gas: 8)\n 11714: t0 = u64 [a4]\n 11716: a4 = u64 [a4 + 0x8]\n 11719: a0 = a0 >> 0x5\n 11722: a3 = 0 if a1 != 0\n 11724: a0 = 0 if a1 != 0\n 11726: a1 = reverse a4\n 11728: a4 = reverse t0\n 11730: t0 = 354, jump @724\n      : @363 [@dyn 177] (gas: 25)\n 11736: t0 = a0 + a3\n 11739: a0 = u64 [s1 + 0x170]\n 11743: a0 = t1 <u a0\n 11746: a3 = u64 [s1 + 0x160]\n 11750: a0 = a0 + a3\n 11753: a3 = t1 >> 0x5\n 11756: a5 = a0 << 0x3b\n 11759: a3 = a3 | a5\n 11762: a0 = a0 >> 0x5\n 11765: a0 = a0 + a4\n 11768: a5 = s1 + 0x100\n 11772: a4 = u64 [a5 + 0x78]\n 11775: a3 = a3 + a1\n 11778: a1 = a3 <u a1\n 11781: a0 = a0 + a1\n 11784: a2 = a2 + a3\n 11787: u64 [a5 + 0x48] = a2\n 11790: a1 = a2 <u a3\n 11793: a0 = a0 + a1\n 11796: u64 [a5 + 0x40] = a0\n 11799: a0 = sp + 0xffffffffffffffe0\n 11802: t1 = a0 & 0xffffffffffffffe0\n 11805: sp = t1\n 11807: u64 [s1 + 0x138] = t1\n 11811: fallthrough\n      : @364 (gas: 21)\n 11812: a0 = u64 [s1 + 0x158]\n 11816: a0 = t2 <u a0\n 11819: a2 = u64 [s1 + 0x150]\n 11823: a1 = a4 ^ a2\n 11826: a2 = a4 <u a2\n 11829: a2 = a0 if a1 == 0\n 11832: a5 = u64 [s1 + 0x148]\n 11836: a0 = ra <u a5\n 11839: a3 = u64 [s1 + 0x140]\n 11843: a1 = t0 ^ a3\n 11846: a3 = t0 <u a3\n 11849: a3 = a0 if a1 == 0\n 11852: a0 = ra ^ a5\n 11855: a0 = a0 | a1\n 11858: a3 = a2 if a0 == 0\n 11861: u64 [t1] = t2\n 11863: u64 [t1 + 0x8] = a4\n 11866: u64 [t1 + 0x10] = ra\n 11869: u64 [t1 + 0x18] = t0\n 11872: a0 = s1 + 0x18d8\n 11876: jump @367 if a3 == 0\n      : @365 (gas: 11)\n 11879: u64 [a0 + 448] = 0\n 11883: u64 [a0 + 440] = 0\n 11887: u64 [a0 + 432] = 0\n 11891: u64 [a0 + 424] = 0\n 11895: a1 = s1 + 0x1a80\n 11899: a0 = t1\n 11901: u64 [s1 + 0x170] = t2\n 11905: u64 [s1 + 0x178] = a4\n 11909: u64 [s1 + 0x168] = t0\n 11913: u64 [s1 + 0x160] = ra\n 11917: ra = 356, jump @23\n      : @366 [@dyn 178] (gas: 15)\n 11923: t1 = u64 [s1 + 0x138]\n 11927: t0 = u64 [s1 + 0x168]\n 11931: a4 = u64 [s1 + 0x178]\n 11935: t2 = u64 [s1 + 0x170]\n 11939: t2 = t2 + 0x1\n 11942: a0 = t2 <u 0x1\n 11945: a4 = a4 + a0\n 11948: a0 = t2 | a4\n 11951: a0 = a0 <u 0x1\n 11954: a1 = u64 [s1 + 0x160]\n 11958: a0 = a0 + a1\n 11961: a1 = a0 <u a1\n 11964: t0 = t0 + a1\n 11967: ra = a0\n 11969: jump @364\n      : @367 (gas: 10)\n 11972: a3 = s1 + 0x100\n 11976: a0 = u64 [a3 + 0x28]\n 11979: a0 = a0 ^ 0x1\n 11982: a5 = u64 [s1 + 0xf0]\n 11986: a1 = u64 [a3 + 0x18]\n 11989: a0 = a1 if a5 != 0\n 11992: a1 = u64 [a3 + 0x20]\n 11995: a2 = u64 [a3 + 0x30]\n 11998: a0 = a1 if a2 != 0\n 12001: jump @378 if a0 == 0\n      : @368 (gas: 16)\n 12005: a0 = u64 [s1 + 0x100]\n 12009: a0 = a0 & 0xffffffffffffffe0\n 12012: u64 [s1 + 0x108] = a0\n 12016: a0 = s1 + 0x10d8\n 12020: a1 = u64 [s1 + 0x90]\n 12024: a3 = a0 + 0x200\n 12028: u64 [a3 + 0xa8] = a1\n 12032: a1 = u64 [s1 + 0x88]\n 12036: u64 [a3 + 0xb0] = a1\n 12040: a1 = u64 [s1 + 0x80]\n 12044: u64 [a3 + 0xb8] = a1\n 12048: a1 = s1 + 0x1380\n 12052: a2 = u64 [s1 + 0x78]\n 12055: u64 [a3 + 0xc0] = a2\n 12059: a0 = 0\n 12061: ra = 358, jump @19\n      : @369 [@dyn 179] (gas: 7)\n 12067: a0 = sp + 0xffffffffffffffe0\n 12070: a0 = a0 & 0xffffffffffffffe0\n 12073: u64 [s1 + 0x160] = a0\n 12077: sp = a0\n 12079: a1 = 0x20\n 12082: a0 = 0\n 12084: ra = 360, jump @26\n      : @370 [@dyn 180] (gas: 35)\n 12090: a1 = sp + 0xffffffffffffffe0\n 12093: a1 = a1 & 0xffffffffffffffe0\n 12096: u64 [s1 + 0x158] = a1\n 12100: sp = a1\n 12102: i32 a0 = a0 + 0\n 12104: i32 a2 = a1 + 0\n 12106: a1 = 0x20\n 12109: ecalli 6 // 'hash_keccak_256'\n 12111: u64 [s1 + 368] = 0x20\n 12116: u64 [s1 + 360] = 0\n 12120: t1 = 0\n 12122: u64 [s1 + 376] = 0\n 12126: a4 = 0\n 12128: a5 = 0\n 12130: a2 = 0\n 12132: a3 = 0\n 12134: a0 = u64 [s1 + 0x158]\n 12138: t2 = u64 [a0 + 0x18]\n 12141: a1 = u64 [a0 + 0x10]\n 12144: ra = u64 [a0 + 0x8]\n 12147: t0 = u64 [a0]\n 12149: t2 = reverse t2\n 12151: a1 = reverse a1\n 12153: ra = reverse ra\n 12155: t0 = reverse t0\n 12157: u64 [s1 + 0x148] = t0\n 12161: a0 = u64 [s1 + 0x160]\n 12165: u64 [a0 + 0x18] = t0\n 12168: u64 [s1 + 0x120] = ra\n 12172: u64 [a0 + 0x10] = ra\n 12175: u64 [s1 + 0x150] = a1\n 12179: u64 [a0 + 0x8] = a1\n 12182: t0 = t2\n 12184: u64 [a0] = t2\n 12186: fallthrough\n      : @371 (gas: 24)\n 12187: ra = t0\n 12189: a0 = u64 [s1 + 0x108]\n 12193: u64 [s1 + 0x130] = a4\n 12197: a0 = a4 <u a0\n 12200: a4 = a0 ^ 0x1\n 12203: u64 [s1 + 0x128] = a5\n 12207: a4 = 0x1 if a5 != 0\n 12210: u64 [s1 + 0x158] = a3\n 12214: u64 [s1 + 0x140] = a2\n 12218: a0 = a2 | a3\n 12221: a4 = 0x1 if a0 != 0\n 12224: a0 = u64 [s1 + 0xe0]\n 12228: a1 = u64 [s1 + 0x170]\n 12232: a1 = a1 + a0\n 12235: a3 = u64 [s1 + 0xd8]\n 12239: t0 = u64 [s1 + 0x168]\n 12243: t0 = t0 + a3\n 12246: t2 = u64 [s1 + 0xd0]\n 12250: u64 [s1 + 0x138] = t1\n 12254: a2 = t2 + t1\n 12257: t1 = u64 [s1 + 0xc8]\n 12261: a5 = u64 [s1 + 0x178]\n 12265: t1 = t1 + a5\n 12268: jump @394 if a4 != 0\n      : @372 (gas: 6)\n 12272: a0 = a1 <u a0\n 12275: a4 = t0 + a0\n 12278: t0 = a4 ^ a3\n 12281: a5 = a4 <u a3\n 12284: a5 = a0 if t0 == 0\n 12287: t0 = 362, jump @730\n      : @373 [@dyn 181] (gas: 2)\n 12293: u64 [s1 + 0x118] = ra\n 12297: jump @375 if a0 == 0\n      : @374 (gas: 1)\n 12300: jump @549\n      : @375 (gas: 2)\n 12303: a0 = s1 + 0x1180\n 12307: ra = 364, jump @17\n      : @376 [@dyn 182] (gas: 14)\n 12313: a3 = s1 + 0x10d8\n 12317: a0 = u64 [a3 + 0xc0]\n 12321: a1 = u64 [a3 + 0xb8]\n 12325: a2 = u64 [a3 + 0xb0]\n 12329: a3 = u64 [a3 + 0xa8]\n 12333: a4 = s1 + 0x18d8\n 12337: a5 = a4 + 0x100\n 12341: u64 [a5 + 0xe0] = a0\n 12345: u64 [a5 + 0xd8] = a1\n 12349: u64 [a5 + 0xd0] = a2\n 12353: u64 [a5 + 0xc8] = a3\n 12357: a1 = s1 + 0x1aa0\n 12361: a0 = u64 [s1 + 0x160]\n 12365: ra = 366, jump @23\n      : @377 [@dyn 183] (gas: 57)\n 12371: a3 = u64 [s1 + 0x118]\n 12375: a3 = a3 + 0x1\n 12378: a0 = a3 <u 0x1\n 12381: t0 = u64 [s1 + 0x150]\n 12385: t0 = t0 + a0\n 12388: a0 = a3 | t0\n 12391: a0 = a0 <u 0x1\n 12394: a1 = u64 [s1 + 0x120]\n 12398: t1 = a1 + a0\n 12401: a1 = t1 <u a1\n 12404: a0 = u64 [s1 + 0x148]\n 12408: a0 = a0 + a1\n 12411: a1 = u64 [s1 + 0x170]\n 12415: a2 = a1 + 0x20\n 12418: u64 [s1 + 0x118] = a2\n 12422: a1 = a2 <u a1\n 12425: a2 = u64 [s1 + 0x168]\n 12429: a4 = a2 + a1\n 12432: u64 [s1 + 0x110] = a4\n 12436: a4 = a4 <u a2\n 12439: a4 = a1 if a1 == 0\n 12442: a1 = u64 [s1 + 0x138]\n 12446: t2 = a1 + a4\n 12449: a4 = t2 <u a1\n 12452: a1 = u64 [s1 + 0x178]\n 12456: a1 = a1 + a4\n 12459: u64 [s1 + 0x178] = a1\n 12463: a1 = u64 [s1 + 0x130]\n 12467: a4 = a1 + 0x20\n 12470: a5 = a4 <u a1\n 12473: a2 = u64 [s1 + 0x128]\n 12477: a1 = a2 + a5\n 12480: a2 = a1 <u a2\n 12483: a2 = a5 if a5 == 0\n 12486: a5 = u64 [s1 + 0x140]\n 12490: a2 = a2 + a5\n 12493: a5 = a2 <u a5\n 12496: ra = u64 [s1 + 0x158]\n 12500: ra = ra + a5\n 12503: u64 [s1 + 0x150] = t0\n 12507: a5 = u64 [s1 + 0x160]\n 12511: u64 [a5 + 0x8] = t0\n 12514: t0 = a3\n 12516: u64 [a5] = a3\n 12518: u64 [a5 + 0x10] = t1\n 12521: u64 [s1 + 0x148] = a0\n 12525: u64 [a5 + 0x18] = a0\n 12528: u64 [s1 + 0x120] = t1\n 12532: a5 = s1 + 0x100\n 12536: a0 = u64 [a5 + 0x18]\n 12539: u64 [a5 + 0x70] = a0\n 12542: a3 = ra\n 12544: a0 = u64 [a5 + 0x10]\n 12547: u64 [a5 + 0x68] = a0\n 12550: t1 = t2\n 12552: a5 = a1\n 12554: jump @371\n      : @378 (gas: 10)\n 12557: a4 = u64 [s1 + 0x100]\n 12561: a2 = u64 [s1 + 0xe8]\n 12565: a0 = a4 | a2\n 12568: a3 = u64 [s1 + 0xa0]\n 12572: a1 = a5 | a3\n 12575: a0 = a0 | a1\n 12578: t0 = u64 [s1 + 0xe0]\n 12582: t1 = u64 [s1 + 0xd8]\n 12586: a1 = u64 [s1 + 0xd0]\n 12590: jump @409 if a0 != 0\n      : @379 (gas: 1)\n 12594: t0 = 368, jump @727\n      : @380 [@dyn 184] (gas: 1)\n 12600: jump @413\n      : @381 (gas: 27)\n 12603: a0 = u64 [s1 + 0x50]\n 12606: a0 = a0 ^ 0x1\n 12609: a5 = u64 [s1 + 0xf0]\n 12613: a1 = u64 [s1 + 0x40]\n 12616: a0 = a1 if a5 != 0\n 12619: a1 = u64 [s1 + 0x48]\n 12622: a2 = u64 [s1 + 0x58]\n 12625: a0 = a1 if a2 != 0\n 12628: t1 = u64 [s1 + 0xe8]\n 12632: t0 = a5 | t1\n 12635: a2 = u64 [s1 + 0x68]\n 12638: a1 = a2 >> 0x3f\n 12641: u64 [s1 + 0x40] = a1\n 12644: t1 = t1 << 0x1\n 12647: ra = a5 >> 0x3f\n 12650: a4 = a2 << 0x1\n 12653: a1 = u64 [s1 + 0x78]\n 12656: t2 = a1 >> 0x3f\n 12659: a5 = a5 << 0x1\n 12662: a3 = a1 << 0x1\n 12665: u64 [s1 + 0x28] = a3\n 12668: u64 [s1 + 0x38] = t1\n 12671: u64 [s1 + 0x30] = t2\n 12674: u64 [s1 + 0x58] = ra\n 12677: u64 [s1 + 0x50] = a5\n 12680: u64 [s1 + 0x48] = a4\n 12683: jump @441 if a0 == 0\n      : @382 (gas: 18)\n 12687: u64 [s1 + 0xe8] = t0\n 12691: a1 = a1 & 0xffffffffffffffe0\n 12694: u64 [s1 + 0xf0] = a1\n 12698: a0 = s1 + 0x7ff\n 12702: a0 = a0 + 0xd9\n 12706: a1 = u64 [s1 + 0x130]\n 12710: a3 = a0 + 0x400\n 12714: u64 [a3 + 0x8] = a1\n 12717: a1 = u64 [s1 + 0x120]\n 12721: u64 [a3 + 0x10] = a1\n 12724: a1 = u64 [s1 + 0x118]\n 12728: u64 [a3 + 0x18] = a1\n 12731: a1 = s1 + 0x7ff\n 12735: a1 = a1 + 0x4e1\n 12739: a2 = u64 [s1 + 0x128]\n 12743: u64 [a3 + 0x20] = a2\n 12746: a0 = 0\n 12748: ra = 370, jump @19\n      : @383 [@dyn 185] (gas: 7)\n 12754: a0 = sp + 0xffffffffffffffe0\n 12757: a0 = a0 & 0xffffffffffffffe0\n 12760: u64 [s1 + 0x158] = a0\n 12764: sp = a0\n 12766: a1 = 0x20\n 12769: a0 = 0\n 12771: ra = 372, jump @26\n      : @384 [@dyn 186] (gas: 1)\n 12777: t0 = 374, jump @740\n      : @385 [@dyn 187] (gas: 28)\n 12783: ecalli 6 // 'hash_keccak_256'\n 12785: u64 [s1 + 376] = 0x20\n 12790: t0 = 0\n 12792: u64 [s1 + 368] = 0\n 12796: u64 [s1 + 360] = 0\n 12800: a4 = 0\n 12802: a5 = 0\n 12804: ra = 0\n 12806: u64 [s1 + 352] = 0\n 12810: a3 = u64 [s1 + 0x150]\n 12814: a0 = u64 [a3 + 0x18]\n 12817: a1 = u64 [a3 + 0x10]\n 12820: a2 = u64 [a3 + 0x8]\n 12823: t1 = u64 [a3]\n 12825: a0 = reverse a0\n 12827: a1 = reverse a1\n 12829: a3 = reverse a2\n 12831: t1 = reverse t1\n 12833: t2 = t1\n 12835: a2 = u64 [s1 + 0x158]\n 12839: u64 [a2 + 0x18] = t1\n 12842: u64 [s1 + 0x148] = a3\n 12846: u64 [a2 + 0x10] = a3\n 12849: u64 [s1 + 0x150] = a1\n 12853: u64 [a2 + 0x8] = a1\n 12856: a3 = a0\n 12858: u64 [a2] = a0\n 12860: fallthrough\n      : @386 (gas: 25)\n 12861: u64 [s1 + 0x140] = t2\n 12865: t1 = a3\n 12867: a0 = u64 [s1 + 0xf0]\n 12871: u64 [s1 + 0x138] = a4\n 12875: a0 = a4 <u a0\n 12878: a4 = a0 ^ 0x1\n 12881: u64 [s1 + 0x130] = a5\n 12885: a4 = 0x1 if a5 != 0\n 12888: a5 = s1 + 0x100\n 12892: a0 = u64 [a5 + 0x60]\n 12895: a0 = ra | a0\n 12898: a4 = 0x1 if a0 != 0\n 12901: a1 = u64 [s1 + 0xf8]\n 12905: a0 = u64 [a5 + 0x78]\n 12908: a1 = a1 + a0\n 12911: a3 = u64 [a5 + 0x10]\n 12914: a3 = a3 + t0\n 12917: a2 = u64 [a5]\n 12919: a0 = u64 [a5 + 0x70]\n 12922: a2 = a2 + a0\n 12925: a0 = u64 [a5 + 0x8]\n 12928: t2 = u64 [s1 + 0x168]\n 12932: t2 = t2 + a0\n 12935: a0 = u64 [s1 + 0xe8]\n 12939: jump @444 if a4 != 0\n      : @387 (gas: 9)\n 12943: a0 = u64 [s1 + 0x178]\n 12947: a4 = a1 <u a0\n 12950: a3 = a3 + a4\n 12953: a0 = t0\n 12955: t0 = a3 ^ t0\n 12958: u64 [s1 + 0x120] = a0\n 12962: a5 = a3 <u a0\n 12965: a5 = a4 if t0 == 0\n 12968: t0 = 376, jump @725\n      : @388 [@dyn 188] (gas: 1)\n 12974: jump @390 if a0 == 0\n      : @389 (gas: 1)\n 12977: jump @549\n      : @390 (gas: 4)\n 12980: a0 = s1 + 0x7ff\n 12984: a0 = a0 + 0x141\n 12988: u64 [s1 + 0x118] = ra\n 12992: ra = 378, jump @17\n      : @391 [@dyn 189] (gas: 15)\n 12998: a3 = s1 + 0x7ff\n 13002: a3 = a3 + 0xd9\n 13006: a0 = u64 [a3 + 0x80]\n 13010: a1 = u64 [a3 + 0x78]\n 13013: a2 = u64 [a3 + 0x70]\n 13016: a3 = u64 [a3 + 0x68]\n 13019: a4 = s1 + 0x10d8\n 13023: a5 = a4 + 0x700\n 13027: u64 [a5 + 0x40] = a0\n 13030: u64 [a5 + 0x38] = a1\n 13033: u64 [a5 + 0x30] = a2\n 13036: u64 [a5 + 0x28] = a3\n 13039: a1 = s1 + 0x1800\n 13043: a0 = u64 [s1 + 0x158]\n 13047: ra = 380, jump @23\n      : @392 [@dyn 190] (gas: 44)\n 13053: t2 = u64 [s1 + 0x128]\n 13057: t2 = t2 + 0x1\n 13060: a0 = t2 <u 0x1\n 13063: t0 = u64 [s1 + 0x150]\n 13067: t0 = t0 + a0\n 13070: a0 = t2 | t0\n 13073: a0 = a0 <u 0x1\n 13076: a1 = u64 [s1 + 0x148]\n 13080: t1 = a1 + a0\n 13083: a1 = t1 <u a1\n 13086: a0 = u64 [s1 + 0x140]\n 13090: a0 = a0 + a1\n 13093: a1 = u64 [s1 + 0x178]\n 13097: a2 = a1 + 0x20\n 13100: u64 [s1 + 0x140] = a2\n 13104: a3 = a2 <u a1\n 13107: a1 = u64 [s1 + 0x120]\n 13111: a2 = a1 + a3\n 13114: u64 [s1 + 0x128] = a2\n 13118: a4 = a2 <u a1\n 13121: a4 = a3 if a3 == 0\n 13124: a1 = u64 [s1 + 0x170]\n 13128: ra = a1 + a4\n 13131: a4 = ra <u a1\n 13134: a1 = u64 [s1 + 0x168]\n 13138: a1 = a1 + a4\n 13141: u64 [s1 + 0x168] = a1\n 13145: a1 = u64 [s1 + 0x138]\n 13149: a4 = a1 + 0x20\n 13152: a5 = a4 <u a1\n 13155: a2 = u64 [s1 + 0x130]\n 13159: a1 = a2 + a5\n 13162: a2 = a1 <u a2\n 13165: a2 = a5 if a5 == 0\n 13168: a3 = u64 [s1 + 0x118]\n 13172: a2 = a2 + a3\n 13175: a5 = a2 <u a3\n 13178: a3 = u64 [s1 + 0x160]\n 13182: a3 = a3 + a5\n 13185: u64 [s1 + 0x160] = a3\n 13189: u64 [s1 + 0x150] = t0\n 13193: a5 = u64 [s1 + 0x158]\n 13197: u64 [a5 + 0x8] = t0\n 13200: t0 = 382, jump @736\n      : @393 [@dyn 191] (gas: 5)\n 13206: t0 = u64 [s1 + 0x128]\n 13210: u64 [s1 + 0x170] = ra\n 13214: a5 = a1\n 13216: ra = a2\n 13218: jump @386\n      : @394 (gas: 12)\n 13221: a4 = u64 [s1 + 0x108]\n 13225: a5 = u64 [s1 + 0x100]\n 13229: a4 = a4 ^ a5\n 13232: ra = u64 [s1 + 0xe8]\n 13236: a4 = a4 | ra\n 13239: u64 [s1 + 0x178] = a4\n 13243: a5 = u64 [s1 + 0xf0]\n 13247: a4 = u64 [s1 + 0xa0]\n 13251: a5 = a5 | a4\n 13254: a4 = u64 [s1 + 0x178]\n 13258: a4 = a4 | a5\n 13261: jump @408 if a4 == 0\n      : @395 (gas: 6)\n 13265: a0 = a1 <u a0\n 13268: a4 = t0 + a0\n 13271: t0 = a4 ^ a3\n 13274: a5 = a4 <u a3\n 13277: a5 = a0 if t0 == 0\n 13280: t0 = 384, jump @730\n      : @396 [@dyn 192] (gas: 1)\n 13286: jump @398 if a0 == 0\n      : @397 (gas: 1)\n 13289: jump @549\n      : @398 (gas: 2)\n 13292: a0 = s1 + 0x1360\n 13296: ra = 386, jump @17\n      : @399 [@dyn 193] (gas: 12)\n 13302: a0 = s1 + 0x10d8\n 13306: a2 = a0 + 0x200\n 13310: a1 = u64 [a2 + 0xa0]\n 13314: u64 [s1 + 0x170] = a1\n 13318: a1 = u64 [a2 + 0x98]\n 13322: u64 [s1 + 0x168] = a1\n 13326: a1 = u64 [a2 + 0x90]\n 13330: u64 [s1 + 0x158] = a1\n 13334: a0 = u64 [a2 + 0x88]\n 13338: u64 [s1 + 0x150] = a0\n 13342: a0 = u64 [s1 + 0x100]\n 13346: t0 = 388, jump @721\n      : @400 [@dyn 194] (gas: 1)\n 13352: ra = 390, jump @753\n      : @401 [@dyn 195] (gas: 1)\n 13358: t0 = 392, jump @731\n      : @402 [@dyn 196] (gas: 1)\n 13364: ra = 394, jump @748\n      : @403 [@dyn 197] (gas: 1)\n 13370: t0 = 396, jump @719\n      : @404 [@dyn 198] (gas: 1)\n 13376: ra = 398, jump @748\n      : @405 [@dyn 199] (gas: 17)\n 13382: a4 = u64 [s1 + 0x178]\n 13386: a2 = a4 <u 0x80\n 13390: a3 = u64 [s1 + 0x130]\n 13394: a1 = a3 if a2 != 0\n 13397: a5 = u64 [s1 + 0x138]\n 13401: a3 = u64 [s1 + 0x148]\n 13405: a3 = a3 | a5\n 13408: a3 = a0 if a2 == 0\n 13411: a1 = 0xffffffffffffffff if a4 == 0\n 13414: a3 = 0xffffffffffffffff if a4 == 0\n 13417: a4 = u64 [s1 + 0x140]\n 13421: a4 = 0 if a2 == 0\n 13423: a5 = 0 if a2 == 0\n 13425: a0 = u64 [s1 + 0x150]\n 13429: a0 = a0 & ~a3\n 13432: a2 = u64 [s1 + 0x158]\n 13436: t0 = 400, jump @722\n      : @406 [@dyn 200] (gas: 8)\n 13442: u64 [a4 + 0x200] = a3\n 13446: a3 = a4 + 0x100\n 13450: u64 [a3 + 0xf8] = a2\n 13454: u64 [a3 + 0xf0] = a1\n 13458: u64 [a3 + 0xe8] = a0\n 13462: a1 = s1 + 0x1ac0\n 13466: a0 = u64 [s1 + 0x160]\n 13470: ra = 402, jump @23\n      : @407 [@dyn 201] (gas: 2)\n 13476: ra = u64 [s1 + 0xe8]\n 13480: fallthrough\n      : @408 (gas: 22)\n 13481: a0 = ra >> 0x3f\n 13484: a1 = u64 [s1 + 0xa0]\n 13488: a1 = a1 << 0x1\n 13491: a0 = a0 | a1\n 13494: a3 = u64 [s1 + 0xf0]\n 13498: a1 = a3 >> 0x3f\n 13501: a2 = ra << 0x1\n 13504: a1 = a1 | a2\n 13507: a4 = u64 [s1 + 0x100]\n 13511: a2 = a4 >> 0x3f\n 13514: a3 = a3 << 0x1\n 13517: a2 = a2 | a3\n 13520: a3 = a4 << 0x1\n 13523: a3 = a3 + 0x1\n 13526: a4 = s1 + 0x18d8\n 13530: a5 = a4 + 0x200\n 13534: u64 [a5 + 0x8] = a3\n 13537: u64 [a5 + 0x10] = a2\n 13540: u64 [a5 + 0x18] = a1\n 13543: u64 [a5 + 0x20] = a0\n 13546: a0 = 0x1ae0\n 13550: jump @420\n      : @409 (gas: 7)\n 13553: a0 = u64 [s1 + 0xc8]\n 13557: a0 = a0 | a1\n 13560: a1 = 0xffffffe0\n 13570: a1 = t0 <u a1\n 13573: a1 = 0 if t1 != 0\n 13575: a1 = 0 if a0 != 0\n 13577: jump @411 if a1 != 0\n      : @410 (gas: 1)\n 13580: jump @549\n      : @411 (gas: 3)\n 13583: i32 a1 = t0 + 0x20\n 13586: a0 = s1 + 0x13a0\n 13590: ra = 404, jump @17\n      : @412 [@dyn 202] (gas: 14)\n 13596: a3 = u64 [s1 + 0xa0]\n 13600: a2 = u64 [s1 + 0xe8]\n 13604: a5 = u64 [s1 + 0xf0]\n 13608: a4 = u64 [s1 + 0x100]\n 13612: a0 = s1 + 0x10d8\n 13616: a1 = u64 [a0 + 0x2e0]\n 13620: u64 [s1 + 0x170] = a1\n 13624: a1 = u64 [a0 + 0x2d8]\n 13628: u64 [s1 + 0x168] = a1\n 13632: a1 = u64 [a0 + 0x2d0]\n 13636: u64 [s1 + 0x158] = a1\n 13640: a0 = u64 [a0 + 0x2c8]\n 13644: u64 [s1 + 0x160] = a0\n 13648: fallthrough\n      : @413 (gas: 16)\n 13649: a0 = a5 >> 0x3f\n 13652: a1 = a2 << 0x1\n 13655: a0 = a0 | a1\n 13658: u64 [s1 + 0x150] = a0\n 13662: a0 = a2 >> 0x3f\n 13665: a1 = a3 << 0x1\n 13668: a0 = a0 | a1\n 13671: u64 [s1 + 0x148] = a0\n 13675: a0 = a4 >> 0x3f\n 13678: a1 = a5 << 0x1\n 13681: a0 = a0 | a1\n 13684: u64 [s1 + 0x140] = a0\n 13688: a0 = a4 << 0x1\n 13691: u64 [s1 + 0x138] = a0\n 13695: a1 = a4 << 0x3\n 13698: t0 = 406, jump @738\n      : @414 [@dyn 203] (gas: 1)\n 13704: ra = 408, jump @753\n      : @415 [@dyn 204] (gas: 7)\n 13710: u64 [s1 + 0x118] = a0\n 13714: u64 [s1 + 0x130] = a1\n 13718: a0 = u64 [s1 + 0x100]\n 13722: i32 a2 = a0 << 0x3\n 13725: a0 = 0xffffffffffffffff\n 13728: a1 = 0xffffffffffffffff\n 13731: ra = 410, jump @748\n      : @416 [@dyn 205] (gas: 1)\n 13737: t0 = 412, jump @733\n      : @417 [@dyn 206] (gas: 1)\n 13743: ra = 414, jump @748\n      : @418 [@dyn 207] (gas: 1)\n 13749: t0 = 416, jump @714\n      : @419 [@dyn 208] (gas: 7)\n 13755: a5 = a4 + 0x200\n 13759: u64 [a5 + 0x38] = a2\n 13762: u64 [a5 + 0x40] = a3\n 13765: u64 [a5 + 0x30] = a1\n 13768: u64 [a5 + 0x28] = a0\n 13771: a0 = 0x1b00\n 13775: fallthrough\n      : @420 (gas: 3)\n 13776: a1 = s1 + a0\n 13779: a0 = u64 [s1 + 0xf8]\n 13783: ra = 418, jump @23\n      : @421 [@dyn 209] (gas: 3)\n 13789: a0 = s1 + 0x1340\n 13793: a1 = 0x40\n 13796: ra = 420, jump @17\n      : @422 [@dyn 210] (gas: 14)\n 13802: a2 = s1 + 0x10d8\n 13806: t0 = u64 [a2 + 0x280]\n 13810: a1 = a2 + 0x200\n 13814: a5 = u64 [a1 + 0x78]\n 13817: a4 = u64 [a1 + 0x70]\n 13820: a0 = u64 [a1 + 0x68]\n 13823: a3 = a4 | t0\n 13826: a1 = a0 | a5\n 13829: a1 = a1 | a3\n 13832: a1 = a1 >> 0x20\n 13835: a3 = a3 | a5\n 13838: a3 = a3 << 0x20\n 13841: a1 = a1 | a3\n 13844: jump @424 if a1 == 0\n      : @423 (gas: 1)\n 13847: jump @549\n      : @424 (gas: 10)\n 13850: u64 [a2 + 608] = 0\n 13854: u64 [a2 + 600] = 0\n 13858: u64 [a2 + 592] = 0\n 13862: a1 = s1 + 0x1320\n 13866: u64 [a2 + 584] = 0x20\n 13871: u64 [s1 + 0x178] = a0\n 13875: u64 [s1 + 0x170] = a4\n 13879: u64 [s1 + 0x168] = t0\n 13883: u64 [s1 + 0x160] = a5\n 13887: ra = 422, jump @19\n      : @425 [@dyn 211] (gas: 3)\n 13893: a0 = s1 + 0x1300\n 13897: a1 = u64 [s1 + 0x98]\n 13901: ra = 424, jump @21\n      : @426 [@dyn 212] (gas: 12)\n 13907: a4 = s1 + 0x100\n 13911: a5 = u64 [a4 + 0x78]\n 13914: a0 = u64 [a4 + 0x68]\n 13917: a1 = u64 [a4 + 0x60]\n 13920: a2 = a1 | a0\n 13923: a3 = 0x100000000\n 13933: a0 = 0xffffffe0\n 13943: a0 = a5 <u a0\n 13946: a1 = u64 [a4 + 0x70]\n 13949: a0 = 0 if a1 != 0\n 13951: a0 = 0 if a2 != 0\n 13953: jump @428 if a0 != 0\n      : @427 (gas: 1)\n 13956: jump @549\n      : @428 (gas: 20)\n 13959: t0 = 0xffffffffffffffff\n 13962: a1 = s1 + 0x10d8\n 13966: u64 [s1 + 0x158] = a2\n 13970: a2 = a1\n 13972: a1 = u64 [a1 + 0x238]\n 13976: a0 = u64 [a2 + 0x230]\n 13980: u64 [s1 + 0x150] = a3\n 13984: a3 = u64 [a2 + 0x228]\n 13988: a4 = 0xffffffff\n 13998: a4 = a4 & a1\n 14001: a1 = a0 & t0\n 14004: a3 = a3 & t0\n 14007: i32 a0 = a5 + 0x20\n 14010: u64 [a2 + 544] = 0\n 14014: a5 = a2 + 0x200\n 14018: u64 [a5 + 0x8] = a3\n 14021: u64 [a5 + 0x10] = a1\n 14024: a1 = s1 + 0x12e0\n 14028: u64 [a5 + 0x18] = a4\n 14031: ra = 426, jump @19\n      : @429 [@dyn 213] (gas: 10)\n 14037: a3 = s1 + 0x100\n 14041: a1 = u64 [a3 + 0x78]\n 14044: a0 = u64 [a3 + 0x50]\n 14047: a0 = a0 + 0xffffffffffffffc0\n 14050: a0 = a1 <u a0\n 14053: a2 = u64 [a3 + 0x70]\n 14056: a0 = 0 if a2 != 0\n 14058: a2 = u64 [a3 + 0x58]\n 14061: a0 = 0 if a2 != 0\n 14063: jump @431 if a0 != 0\n      : @430 (gas: 1)\n 14066: jump @549\n      : @431 (gas: 8)\n 14069: i32 a0 = a1 + 0x40\n 14072: a3 = s1 + 0x10d8\n 14076: u64 [a3 + 512] = 0\n 14080: u64 [a3 + 504] = 0\n 14084: u64 [a3 + 488] = 0x60\n 14089: a1 = s1 + 0x12c0\n 14093: u64 [a3 + 496] = 0\n 14097: ra = 428, jump @19\n      : @432 [@dyn 214] (gas: 33)\n 14103: a0 = u64 [s1 + 0x178]\n 14107: a0 = a0 + 0x80\n 14111: a1 = u64 [s1 + 0x178]\n 14115: a1 = a0 <u a1\n 14118: a2 = u64 [s1 + 0x170]\n 14122: a2 = a2 + a1\n 14125: a3 = u64 [s1 + 0x170]\n 14129: a3 = a2 <u a3\n 14132: a3 = a1 if a1 == 0\n 14135: a1 = u64 [s1 + 0x160]\n 14139: a3 = a3 + a1\n 14142: a1 = a3 <u a1\n 14145: a4 = u64 [s1 + 0x168]\n 14149: a4 = a4 + a1\n 14152: a1 = s1 + 0x10d8\n 14156: a5 = a1 + 0x100\n 14160: u64 [a5 + 0x90] = a2\n 14164: u64 [a5 + 0x88] = a0\n 14168: a0 = u64 [s1 + 0x58]\n 14171: u64 [a5 + 0xc0] = a0\n 14175: a0 = u64 [s1 + 0x60]\n 14178: u64 [a5 + 0xb8] = a0\n 14182: a0 = u64 [s1 + 0x68]\n 14185: u64 [a5 + 0xb0] = a0\n 14189: a0 = u64 [s1 + 0x70]\n 14192: u64 [a5 + 0xa8] = a0\n 14196: u64 [a5 + 0x98] = a3\n 14200: a3 = a1\n 14202: a0 = s1 + 0x12a0\n 14206: a1 = s1 + 0x1280\n 14210: a2 = s1 + 0x1260\n 14214: u64 [a3 + 0x1a0] = a4\n 14218: ra = 430, jump @591\n      : @433 [@dyn 215] (gas: 8)\n 14224: a4 = u64 [s1 + 0x170]\n 14228: t1 = u64 [s1 + 0x178]\n 14232: a0 = 0xffffffa0\n 14242: a0 = t1 <u a0\n 14245: a0 = 0 if a4 != 0\n 14247: a1 = u64 [s1 + 0x158]\n 14251: a0 = 0 if a1 != 0\n 14253: jump @435 if a0 != 0\n      : @434 (gas: 1)\n 14256: jump @549\n      : @435 (gas: 49)\n 14259: a1 = s1 + 0x10d8\n 14263: a5 = a1 + 0x100\n 14267: a0 = u64 [a5 + 0xc8]\n 14271: a3 = u64 [a5 + 0xd0]\n 14275: a2 = u64 [a5 + 0xe0]\n 14279: u64 [s1 + 0x158] = a2\n 14283: ra = u64 [a1 + 0x1d8]\n 14287: u64 [s1 + 0x140] = ra\n 14291: a1 = a0 <u t1\n 14294: a5 = a0\n 14296: u64 [s1 + 0x148] = a0\n 14300: a2 = a3 ^ a4\n 14303: a0 = a3 <u a4\n 14306: u64 [s1 + 0x150] = a3\n 14310: a0 = a1 if a2 == 0\n 14313: a2 = a3 - a4\n 14316: a3 = a2 - a1\n 14319: a2 = a5 - t1\n 14322: t0 = a2 + 0xffffffffffffffe0\n 14325: a4 = t0 <u a2\n 14328: a2 = a3 + a4\n 14331: a2 = a2 + 0xffffffffffffffff\n 14334: a5 = a2 ^ a3\n 14337: a3 = a2 <u a3\n 14340: a3 = a4 if a5 == 0\n 14343: a1 = u64 [s1 + 0x160]\n 14347: t2 = ra <u a1\n 14350: a4 = u64 [s1 + 0x168]\n 14354: a5 = u64 [s1 + 0x158]\n 14358: a5 = a5 - a4\n 14361: a5 = a5 - t2\n 14364: a4 = ra - a1\n 14367: a1 = a4 <u a0\n 14370: a5 = a5 - a1\n 14373: a4 = a4 - a0\n 14376: a0 = a4 <u 0x1\n 14379: a5 = a5 - a0\n 14382: a4 = a4 + 0xffffffffffffffff\n 14385: a3 = a3 + a4\n 14388: a0 = a3 <u a4\n 14391: a5 = a5 + a0\n 14394: i32 a0 = t1 + 0x60\n 14397: a4 = s1 + 0x10d8\n 14401: u64 [a4 + 0x168] = t0\n 14405: u64 [a4 + 0x170] = a2\n 14409: u64 [a4 + 0x178] = a3\n 14413: a1 = s1 + 0x1240\n 14417: u64 [a4 + 0x180] = a5\n 14421: ra = 432, jump @19\n      : @436 [@dyn 216] (gas: 32)\n 14427: a0 = u64 [s1 + 0xa8]\n 14431: ecalli 3 // 'caller'\n 14433: a0 = u64 [s1 + 0xc0]\n 14437: a1 = u32 [a0 + 0x10]\n 14440: u64 [s1 + 0x130] = a1\n 14444: a1 = u64 [a0 + 0x8]\n 14447: u64 [s1 + 0x128] = a1\n 14451: a0 = u64 [a0]\n 14453: u64 [s1 + 0x138] = a0\n 14457: a1 = s1 + 0x10d8\n 14461: a0 = u64 [s1 + 0x158]\n 14465: a2 = a1 + 0x100\n 14469: u64 [a2 + 0x20] = a0\n 14472: a0 = u64 [s1 + 0x140]\n 14476: u64 [a2 + 0x18] = a0\n 14479: a0 = u64 [s1 + 0x150]\n 14483: u64 [a2 + 0x10] = a0\n 14486: a0 = u64 [s1 + 0x148]\n 14490: u64 [a2 + 0x8] = a0\n 14493: a0 = u64 [s1 + 0x78]\n 14496: u64 [a2 + 0x40] = a0\n 14499: a0 = u64 [s1 + 0x80]\n 14503: u64 [a2 + 0x38] = a0\n 14506: a0 = u64 [s1 + 0x88]\n 14510: u64 [a2 + 0x30] = a0\n 14513: a4 = a1\n 14515: a0 = s1 + 0x1220\n 14519: a1 = s1 + 0x1200\n 14523: a2 = s1 + 0x11e0\n 14527: a3 = u64 [s1 + 0x90]\n 14531: u64 [a4 + 0x128] = a3\n 14535: ra = 434, jump @591\n      : @437 [@dyn 217] (gas: 34)\n 14541: a1 = s1 + 0x10d8\n 14545: a0 = u64 [a1 + 0x150]\n 14549: t0 = u64 [a1 + 0x160]\n 14553: t1 = u64 [a1 + 0x148]\n 14557: a3 = u64 [a1 + 0x158]\n 14561: a1 = u64 [s1 + 0x170]\n 14565: a4 = a0 ^ a1\n 14568: a5 = a0 <u a1\n 14571: t2 = a1\n 14573: a1 = u64 [s1 + 0x178]\n 14577: a1 = t1 <u a1\n 14580: a5 = a1 if a4 == 0\n 14583: a2 = u64 [s1 + 0x160]\n 14587: a4 = a3 - a2\n 14590: a3 = a3 <u a2\n 14593: a2 = u64 [s1 + 0x168]\n 14597: a2 = t0 - a2\n 14600: a2 = a2 - a3\n 14603: a3 = a4 <u a5\n 14606: a2 = a2 - a3\n 14609: a4 = a4 - a5\n 14612: a0 = a0 - t2\n 14615: a3 = a0 - a1\n 14618: a0 = u64 [s1 + 0x178]\n 14622: a1 = t1 - a0\n 14625: a0 = u64 [s1 + 0x178]\n 14629: a3 = a3 | a2\n 14632: a2 = a1 | a4\n 14635: a2 = a2 | a3\n 14638: a3 = a3 | a4\n 14641: a2 = a2 >> 0x20\n 14644: a3 = a3 << 0x20\n 14647: a2 = a2 | a3\n 14650: jump @439 if a2 == 0\n      : @438 (gas: 1)\n 14653: jump @549\n      : @439 (gas: 31)\n 14656: a5 = s1 + 0x100\n 14660: a2 = u64 [a5 + 0x28]\n 14663: a2 = reverse a2\n 14665: a4 = a2 << 0x20\n 14668: a3 = u64 [a5 + 0x30]\n 14671: a3 = reverse a3\n 14673: a3 = a3 >> 0x20\n 14676: t0 = a3 | a4\n 14679: a3 = u64 [a5 + 0x38]\n 14682: a3 = reverse a3\n 14684: a4 = a3 << 0x20\n 14687: a2 = a2 >> 0x20\n 14690: t1 = a4 | a2\n 14693: a3 = a3 >> 0x20\n 14696: a4 = u64 [0x20000]\n 14701: t2 = s1 + 0x10d8\n 14705: u64 [t2 + 0x100] = a4\n 14709: a4 = u64 [0x20008]\n 14714: a5 = u64 [0x20010]\n 14719: a2 = u64 [0x20018]\n 14724: u64 [t2 + 0xf8] = a4\n 14728: a4 = t2\n 14730: u64 [a4 + 0xf0] = a5\n 14734: u64 [t2 + 224] = 0\n 14738: u64 [a4 + 0xe8] = a2\n 14742: u64 [a4 + 0xd8] = a3\n 14746: u64 [t2 + 0xd0] = t1\n 14750: a2 = s1 + 0x11c0\n 14754: a3 = s1 + 0x11a0\n 14758: u64 [t2 + 0xc8] = t0\n 14762: ra = 436, jump @24\n      : @440 [@dyn 218] (gas: 6)\n 14768: a0 = 0\n 14770: a1 = u64 [s1 + 0xb8]\n 14774: a2 = 0\n 14776: ecalli 7 // 'seal_return'\n 14778: a1 = 0x20070\n 14783: jump @551\n      : @441 (gas: 4)\n 14786: a0 = a1 | a2\n 14789: a0 = a0 | t0\n 14792: a2 = u64 [s1 + 0xf8]\n 14796: jump @459 if a0 != 0\n      : @442 (gas: 1)\n 14800: t0 = 438, jump @727\n      : @443 [@dyn 219] (gas: 6)\n 14806: t1 = u64 [s1 + 0x40]\n 14809: t0 = u64 [s1 + 0x38]\n 14812: a4 = u64 [s1 + 0x58]\n 14815: t2 = u64 [s1 + 0x48]\n 14818: a5 = u64 [s1 + 0x50]\n 14821: jump @463\n      : @444 (gas: 11)\n 14824: ra = t0\n 14826: a4 = u64 [s1 + 0x78]\n 14829: a5 = u64 [s1 + 0xf0]\n 14833: a4 = a4 ^ a5\n 14836: a5 = u64 [s1 + 0x68]\n 14839: a4 = a4 | a5\n 14842: a4 = a4 | a0\n 14845: t1 = u64 [s1 + 0x58]\n 14848: t0 = u64 [s1 + 0x50]\n 14851: a5 = u64 [s1 + 0x48]\n 14854: jump @458 if a4 == 0\n      : @445 (gas: 7)\n 14858: a0 = u64 [s1 + 0x178]\n 14862: a4 = a1 <u a0\n 14865: a3 = a3 + a4\n 14868: t0 = a3 ^ ra\n 14871: a5 = a3 <u ra\n 14874: a5 = a4 if t0 == 0\n 14877: t0 = 440, jump @726\n      : @446 [@dyn 220] (gas: 1)\n 14883: jump @448 if a0 == 0\n      : @447 (gas: 1)\n 14886: jump @549\n      : @448 (gas: 3)\n 14889: a0 = s1 + 0x7ff\n 14893: a0 = a0 + 0x4c1\n 14897: ra = 442, jump @17\n      : @449 [@dyn 221] (gas: 13)\n 14903: a0 = s1 + 0x7ff\n 14907: a0 = a0 + 0xd9\n 14911: a1 = u64 [a0 + 0x400]\n 14915: u64 [s1 + 0x170] = a1\n 14919: a2 = a0 + 0x300\n 14923: a1 = u64 [a2 + 0xf8]\n 14927: u64 [s1 + 0x168] = a1\n 14931: a1 = u64 [a2 + 0xf0]\n 14935: u64 [s1 + 0x160] = a1\n 14939: a0 = u64 [a2 + 0xe8]\n 14943: u64 [s1 + 0x150] = a0\n 14947: a0 = u64 [s1 + 0x78]\n 14950: t0 = 444, jump @721\n      : @450 [@dyn 222] (gas: 1)\n 14956: ra = 446, jump @753\n      : @451 [@dyn 223] (gas: 1)\n 14962: t0 = 448, jump @731\n      : @452 [@dyn 224] (gas: 1)\n 14968: ra = 450, jump @748\n      : @453 [@dyn 225] (gas: 1)\n 14974: t0 = 452, jump @719\n      : @454 [@dyn 226] (gas: 1)\n 14980: ra = 454, jump @748\n      : @455 [@dyn 227] (gas: 1)\n 14986: t0 = 456, jump @716\n      : @456 [@dyn 228] (gas: 9)\n 14992: a4 = s1 + 0x10d8\n 14996: a5 = a4 + 0x700\n 15000: u64 [a5 + 0x60] = a3\n 15003: u64 [a5 + 0x58] = a2\n 15006: u64 [a5 + 0x50] = a1\n 15009: u64 [a5 + 0x48] = a0\n 15012: a1 = s1 + 0x1820\n 15016: a0 = u64 [s1 + 0x158]\n 15020: ra = 458, jump @23\n      : @457 [@dyn 229] (gas: 4)\n 15026: a5 = u64 [s1 + 0x48]\n 15029: t0 = u64 [s1 + 0x50]\n 15032: t1 = u64 [s1 + 0x58]\n 15035: fallthrough\n      : @458 (gas: 16)\n 15036: a0 = u64 [s1 + 0x40]\n 15039: a1 = u64 [s1 + 0x38]\n 15042: a0 = a0 | a1\n 15045: a1 = a5 | t1\n 15048: a2 = u64 [s1 + 0x30]\n 15051: a2 = t0 | a2\n 15054: a3 = u64 [s1 + 0x28]\n 15057: a3 = a3 + 0x1\n 15060: a4 = s1 + 0x10d8\n 15064: a5 = a4 + 0x700\n 15068: u64 [a5 + 0x68] = a3\n 15071: u64 [a5 + 0x70] = a2\n 15074: u64 [a5 + 0x78] = a1\n 15077: u64 [a5 + 0x80] = a0\n 15081: a0 = 0x1840\n 15085: jump @469\n      : @459 (gas: 10)\n 15088: a4 = s1 + 0x100\n 15092: a0 = u64 [a4 + 0x8]\n 15095: a1 = u64 [a4]\n 15097: a0 = a0 | a1\n 15100: a1 = 0xffffffe0\n 15110: a1 = a2 <u a1\n 15113: a3 = u64 [a4 + 0x10]\n 15116: a1 = 0 if a3 != 0\n 15118: a1 = 0 if a0 != 0\n 15120: jump @461 if a1 != 0\n      : @460 (gas: 1)\n 15123: jump @549\n      : @461 (gas: 4)\n 15126: i32 a1 = a2 + 0x20\n 15129: a0 = s1 + 0x7ff\n 15133: a0 = a0 + 0x501\n 15137: ra = 460, jump @17\n      : @462 [@dyn 230] (gas: 18)\n 15143: t2 = u64 [s1 + 0x48]\n 15146: a5 = u64 [s1 + 0x50]\n 15149: a4 = u64 [s1 + 0x58]\n 15152: t0 = u64 [s1 + 0x38]\n 15155: t1 = u64 [s1 + 0x40]\n 15158: a1 = u64 [s1 + 0x78]\n 15161: a0 = s1 + 0x7ff\n 15165: a0 = a0 + 0xd9\n 15169: a3 = a0 + 0x400\n 15173: a2 = u64 [a3 + 0x40]\n 15176: u64 [s1 + 0x170] = a2\n 15180: a2 = u64 [a3 + 0x38]\n 15183: u64 [s1 + 0x168] = a2\n 15187: a2 = u64 [a3 + 0x30]\n 15190: u64 [s1 + 0x158] = a2\n 15194: a0 = u64 [a3 + 0x28]\n 15197: u64 [s1 + 0x160] = a0\n 15201: fallthrough\n      : @463 (gas: 13)\n 15202: a3 = u64 [s1 + 0x30]\n 15205: a0 = t2 | a4\n 15208: u64 [s1 + 0x150] = a0\n 15212: a0 = t0 | t1\n 15215: u64 [s1 + 0x148] = a0\n 15219: a3 = a3 | a5\n 15222: u64 [s1 + 0x140] = a3\n 15226: a2 = a1 << 0x3\n 15229: u64 [s1 + 0x178] = a2\n 15233: i32 a2 = 0x80 - a2\n 15237: a0 = 0xffffffffffffffff\n 15240: a1 = 0xffffffffffffffff\n 15243: ra = 462, jump @753\n      : @464 [@dyn 231] (gas: 7)\n 15249: u64 [s1 + 0x120] = a0\n 15253: u64 [s1 + 0x138] = a1\n 15257: a0 = u64 [s1 + 0x78]\n 15260: i32 a2 = a0 << 0x3\n 15263: a0 = 0xffffffffffffffff\n 15266: a1 = 0xffffffffffffffff\n 15269: ra = 464, jump @748\n      : @465 [@dyn 232] (gas: 1)\n 15275: t0 = 466, jump @732\n      : @466 [@dyn 233] (gas: 1)\n 15281: ra = 468, jump @748\n      : @467 [@dyn 234] (gas: 1)\n 15287: t0 = 470, jump @717\n      : @468 [@dyn 235] (gas: 17)\n 15293: a4 = u64 [s1 + 0x28]\n 15296: a0 = a0 | a4\n 15299: a5 = s1 + 0x100\n 15303: a4 = u64 [a5 + 0x40]\n 15306: a1 = a1 | a4\n 15309: a4 = u64 [a5 + 0x48]\n 15312: a3 = a3 | a4\n 15315: a4 = u64 [a5 + 0x50]\n 15318: a2 = a2 | a4\n 15321: a4 = s1 + 0x10d8\n 15325: a5 = a4 + 0x700\n 15329: u64 [a5 + 0x98] = a2\n 15333: u64 [a5 + 0xa0] = a3\n 15337: u64 [a5 + 0x90] = a1\n 15341: u64 [a5 + 0x88] = a0\n 15345: a0 = 0x1860\n 15349: fallthrough\n      : @469 (gas: 3)\n 15350: a1 = s1 + a0\n 15353: a0 = u64 [s1 + 0x70]\n 15356: ra = 472, jump @23\n      : @470 [@dyn 236] (gas: 28)\n 15362: a0 = sp + 0xffffffffffffffe0\n 15365: a2 = a0 & 0xffffffffffffffe0\n 15368: sp = a2\n 15370: a0 = u64 [s1 + 0x88]\n 15374: a3 = a0 + 0x2\n 15377: a0 = a3 <u a0\n 15380: a1 = u64 [s1 + 0x90]\n 15384: a4 = a1 + a0\n 15387: a1 = a4 <u a1\n 15390: a1 = a0 if a0 == 0\n 15393: a0 = u64 [s1 + 0xa0]\n 15397: a5 = a0 + a1\n 15400: a0 = a5 <u a0\n 15403: a1 = u64 [s1 + 0x98]\n 15407: a0 = a0 + a1\n 15410: u64 [s1 + 0x118] = a5\n 15414: u64 [a2 + 0x10] = a5\n 15417: u64 [s1 + 0x128] = a4\n 15421: u64 [a2 + 0x8] = a4\n 15424: u64 [s1 + 0x130] = a3\n 15428: u64 [a2] = a3\n 15430: u64 [s1 + 0xa0] = a2\n 15434: u64 [s1 + 0x120] = a0\n 15438: u64 [a2 + 0x18] = a0\n 15441: a0 = s1 + 0x7ff\n 15445: a0 = a0 + 0x4a1\n 15449: a1 = u64 [s1 + 0x60]\n 15452: ra = 474, jump @17\n      : @471 [@dyn 237] (gas: 8)\n 15458: a0 = s1 + 0x7ff\n 15462: a0 = a0 + 0xd9\n 15466: a5 = a0 + 0x300\n 15470: a3 = u64 [a5 + 0xe0]\n 15474: a4 = u64 [a5 + 0xd8]\n 15478: a2 = u64 [a5 + 0xd0]\n 15482: a1 = u64 [a5 + 0xc8]\n 15486: t0 = 476, jump @734\n      : @472 [@dyn 238] (gas: 1)\n 15492: jump @549 if a0 != 0\n      : @473 (gas: 4)\n 15496: a0 = s1 + 0x7ff\n 15500: a0 = a0 + 0x481\n 15504: u64 [s1 + 0xf8] = a1\n 15508: ra = 478, jump @17\n      : @474 [@dyn 239] (gas: 19)\n 15514: a2 = s1 + 0x7ff\n 15518: a2 = a2 + 0xd9\n 15522: a0 = a2 + 0x300\n 15526: a4 = u64 [a0 + 0xc0]\n 15530: a3 = u64 [a0 + 0xb8]\n 15534: a1 = u64 [a0 + 0xb0]\n 15538: a0 = a4 >u 0\n 15540: a5 = a3 >u 0\n 15542: a5 = a0 if a4 != 0\n 15545: u64 [s1 + 0x90] = a1\n 15549: a0 = a1 >u 0\n 15551: u64 [s1 + 0x98] = a3\n 15555: u64 [s1 + 0x88] = a4\n 15559: a3 = a3 | a4\n 15562: u64 [s1 + 0x68] = a0\n 15565: u64 [s1 + 0x70] = a5\n 15568: u64 [s1 + 0xf0] = a3\n 15572: a0 = a5 if a3 != 0\n 15575: jump @476 if a0 == 0\n      : @475 (gas: 1)\n 15578: jump @573\n      : @476 (gas: 6)\n 15581: a0 = u64 [a2 + 0x3a8]\n 15585: u64 [s1 + 0xe8] = a0\n 15589: a0 = s1 + 0x7ff\n 15593: a0 = a0 + 0x461\n 15597: a1 = u64 [s1 + 0xa0]\n 15601: ra = 480, jump @21\n      : @477 [@dyn 240] (gas: 16)\n 15607: a4 = s1 + 0x7ff\n 15611: a4 = a4 + 0xd9\n 15615: a5 = a4 + 0x300\n 15619: a2 = u64 [a5 + 0x88]\n 15623: a0 = u64 [a5 + 0x90]\n 15627: a1 = u64 [a5 + 0x98]\n 15631: a3 = u64 [a5 + 0xa0]\n 15635: u64 [a5 + 0x60] = a3\n 15638: u64 [a5 + 0x58] = a1\n 15641: u64 [a5 + 0x50] = a0\n 15644: a0 = s1 + 0x7ff\n 15648: a0 = a0 + 0x441\n 15652: a1 = s1 + 0x7ff\n 15656: a1 = a1 + 0x421\n 15660: u64 [a5 + 0x48] = a2\n 15663: ra = 482, jump @582\n      : @478 [@dyn 241] (gas: 20)\n 15669: a0 = s1 + 0x7ff\n 15673: a0 = a0 + 0xd9\n 15677: a1 = a0 + 0x300\n 15681: a3 = u64 [a1 + 0x80]\n 15685: a4 = u64 [a1 + 0x78]\n 15688: a5 = u64 [a1 + 0x70]\n 15691: t0 = u64 [a0 + 0x368]\n 15695: a0 = a3 >u 0\n 15697: a1 = a4 >u 0\n 15699: a1 = a0 if a3 != 0\n 15702: a0 = a5 >u 0\n 15704: a2 = t0 <u 0x20\n 15707: a2 = a2 ^ 0x1\n 15710: a2 = a0 if a5 != 0\n 15713: a0 = a4 | a3\n 15716: a2 = a1 if a0 != 0\n 15719: a0 = u64 [s1 + 0xe8]\n 15723: a0 = a0 <u 0x20\n 15726: u64 [s1 + 0x78] = a0\n 15729: jump @494 if a2 == 0\n      : @479 (gas: 2)\n 15733: u64 [s1 + 0x150] = t0\n 15737: t0 = 484, jump @742\n      : @480 [@dyn 242] (gas: 12)\n 15743: a3 = a0 + 0x300\n 15747: u64 [a3 + 0x28] = a1\n 15750: a1 = u64 [a5 + 0x28]\n 15753: u64 [a3 + 0x30] = a1\n 15756: a1 = u64 [a5 + 0x18]\n 15759: u64 [a3 + 0x38] = a1\n 15762: a1 = s1 + 0x7ff\n 15766: a1 = a1 + 0x401\n 15770: a2 = u64 [a5 + 0x20]\n 15773: u64 [a3 + 0x40] = a2\n 15776: a0 = 0\n 15778: ra = 486, jump @19\n      : @481 [@dyn 243] (gas: 3)\n 15784: a2 = u64 [s1 + 0xb8]\n 15788: a0 = i32 [a2]\n 15790: jump @483 if a0 >u 31\n      : @482 (gas: 3)\n 15794: u32 [a2 + 0] = 0x20\n 15797: t0 = 0x1e8\n 15801: jump @743\n      : @483 (gas: 1)\n 15804: t0 = 488, jump @743\n      : @484 [@dyn 244] (gas: 3)\n 15810: ra = 0x1ea\n 15814: ecalli 6 // 'hash_keccak_256'\n 15816: fallthrough\n      : @485 [@dyn 245] (gas: 9)\n 15817: a0 = u64 [s1 + 0xe8]\n 15821: a1 = a0 + 0x1f\n 15824: a0 = a1 <u a0\n 15827: a5 = u64 [s1 + 0x90]\n 15831: a2 = a5 + a0\n 15834: a3 = a2 <u a5\n 15837: a3 = a0 if a0 == 0\n 15840: a4 = u64 [s1 + 0x98]\n 15844: t0 = 492, jump @715\n      : @486 [@dyn 246] (gas: 4)\n 15850: a1 = u64 [s1 + 0x78]\n 15853: a1 = 0 if a5 != 0\n 15855: a3 = u64 [s1 + 0xf0]\n 15859: t0 = 494, jump @747\n      : @487 [@dyn 247] (gas: 29)\n 15865: t0 = t2 + a0\n 15868: a0 = t0 <u t2\n 15871: a5 = a2 + a0\n 15874: a4 = a4 + a5\n 15877: u64 [s1 + 0x178] = a4\n 15881: a5 = a4 ^ a2\n 15884: a3 = a4 <u a2\n 15887: a3 = a0 if a5 == 0\n 15890: u64 [s1 + 0x140] = a3\n 15894: a0 = u64 [s1 + 0x150]\n 15898: ra = a0 + 0x1f\n 15901: a4 = ra <u a0\n 15904: a3 = u64 [s1 + 0x158]\n 15908: a0 = a3 + a4\n 15911: a5 = a0 <u a3\n 15914: a5 = a4 if a4 == 0\n 15917: t1 = u64 [s1 + 0x170]\n 15921: t1 = t1 + a5\n 15924: a4 = t1 << 0x3b\n 15927: a3 = a0 >> 0x5\n 15930: a3 = a3 | a4\n 15933: a0 = a0 << 0x3b\n 15936: a4 = ra >> 0x5\n 15939: a0 = a0 | a4\n 15942: a0 = a0 + t2\n 15945: u64 [s1 + 0x158] = a0\n 15949: a0 = a0 <u t2\n 15952: t2 = t0\n 15954: t0 = 496, jump @720\n      : @488 [@dyn 248] (gas: 4)\n 15960: a0 = u64 [s1 + 0x98]\n 15964: a0 = a4 <u a0\n 15967: a3 = u64 [s1 + 0x88]\n 15971: t0 = 498, jump @728\n      : @489 [@dyn 249] (gas: 8)\n 15977: t0 = u64 [a4]\n 15979: a4 = u64 [a4 + 0x8]\n 15982: a0 = a0 >> 0x5\n 15985: a3 = 0 if a1 != 0\n 15987: a0 = 0 if a1 != 0\n 15989: a1 = reverse a4\n 15991: a4 = reverse t0\n 15993: t0 = 500, jump @724\n      : @490 [@dyn 250] (gas: 25)\n 15999: t0 = a0 + a3\n 16002: a0 = u64 [s1 + 0x170]\n 16006: a0 = t1 <u a0\n 16009: a3 = u64 [s1 + 0x160]\n 16013: a0 = a0 + a3\n 16016: a3 = t1 >> 0x5\n 16019: a5 = a0 << 0x3b\n 16022: a3 = a3 | a5\n 16025: a0 = a0 >> 0x5\n 16028: a0 = a0 + a4\n 16031: a5 = s1 + 0x100\n 16035: a4 = u64 [a5 + 0x78]\n 16038: a3 = a3 + a1\n 16041: a1 = a3 <u a1\n 16044: a0 = a0 + a1\n 16047: a2 = a2 + a3\n 16050: u64 [a5 + 0x48] = a2\n 16053: a1 = a2 <u a3\n 16056: a0 = a0 + a1\n 16059: u64 [a5 + 0x40] = a0\n 16062: a0 = sp + 0xffffffffffffffe0\n 16065: t1 = a0 & 0xffffffffffffffe0\n 16068: sp = t1\n 16070: u64 [s1 + 0x138] = t1\n 16074: fallthrough\n      : @491 (gas: 20)\n 16075: a0 = u64 [s1 + 0x158]\n 16079: a0 = t2 <u a0\n 16082: a2 = u64 [s1 + 0x150]\n 16086: a1 = a4 ^ a2\n 16089: a2 = a4 <u a2\n 16092: a2 = a0 if a1 == 0\n 16095: a5 = u64 [s1 + 0x148]\n 16099: a0 = ra <u a5\n 16102: a3 = u64 [s1 + 0x140]\n 16106: a1 = t0 ^ a3\n 16109: a3 = t0 <u a3\n 16112: a3 = a0 if a1 == 0\n 16115: a0 = ra ^ a5\n 16118: a0 = a0 | a1\n 16121: a3 = a2 if a0 == 0\n 16124: u64 [t1] = t2\n 16126: u64 [t1 + 0x8] = a4\n 16129: u64 [t1 + 0x10] = ra\n 16132: u64 [t1 + 0x18] = t0\n 16135: jump @494 if a3 == 0\n      : @492 (gas: 12)\n 16138: a0 = s1 + 0x10d8\n 16142: u64 [a0 + 1984] = 0\n 16146: u64 [a0 + 1976] = 0\n 16150: u64 [a0 + 1968] = 0\n 16154: u64 [a0 + 1960] = 0\n 16158: a1 = s1 + 0x1880\n 16162: a0 = t1\n 16164: u64 [s1 + 0x170] = t2\n 16168: u64 [s1 + 0x178] = a4\n 16172: u64 [s1 + 0x168] = t0\n 16176: u64 [s1 + 0x160] = ra\n 16180: ra = 502, jump @23\n      : @493 [@dyn 251] (gas: 15)\n 16186: t1 = u64 [s1 + 0x138]\n 16190: t0 = u64 [s1 + 0x168]\n 16194: a4 = u64 [s1 + 0x178]\n 16198: t2 = u64 [s1 + 0x170]\n 16202: t2 = t2 + 0x1\n 16205: a0 = t2 <u 0x1\n 16208: a4 = a4 + a0\n 16211: a0 = t2 | a4\n 16214: a0 = a0 <u 0x1\n 16217: a1 = u64 [s1 + 0x160]\n 16221: a0 = a0 + a1\n 16224: a1 = a0 <u a1\n 16227: t0 = t0 + a1\n 16230: ra = a0\n 16232: jump @491\n      : @494 (gas: 9)\n 16235: a0 = u64 [s1 + 0x78]\n 16238: a0 = a0 ^ 0x1\n 16241: a3 = u64 [s1 + 0x90]\n 16245: a1 = u64 [s1 + 0x68]\n 16248: a0 = a1 if a3 != 0\n 16251: a1 = u64 [s1 + 0x70]\n 16254: a2 = u64 [s1 + 0xf0]\n 16258: a0 = a1 if a2 != 0\n 16261: jump @503 if a0 == 0\n      : @495 (gas: 18)\n 16265: a0 = u64 [s1 + 0xe8]\n 16269: a0 = a0 & 0xffffffffffffffe0\n 16272: u64 [s1 + 0xf0] = a0\n 16276: a0 = s1 + 0x7ff\n 16280: a0 = a0 + 0xd9\n 16284: a1 = u64 [s1 + 0x130]\n 16288: a2 = a0 + 0x200\n 16292: u64 [a2 + 0xe8] = a1\n 16296: a1 = u64 [s1 + 0x128]\n 16300: u64 [a2 + 0xf0] = a1\n 16304: a1 = u64 [s1 + 0x118]\n 16308: u64 [a2 + 0xf8] = a1\n 16312: a1 = s1 + 0x7ff\n 16316: a1 = a1 + 0x3c1\n 16320: a2 = u64 [s1 + 0x120]\n 16324: u64 [a0 + 0x300] = a2\n 16328: a0 = 0\n 16330: ra = 504, jump @19\n      : @496 [@dyn 252] (gas: 7)\n 16336: a0 = sp + 0xffffffffffffffe0\n 16339: a0 = a0 & 0xffffffffffffffe0\n 16342: u64 [s1 + 0x150] = a0\n 16346: sp = a0\n 16348: a1 = 0x20\n 16351: a0 = 0\n 16353: ra = 506, jump @26\n      : @497 [@dyn 253] (gas: 35)\n 16359: a1 = sp + 0xffffffffffffffe0\n 16362: a1 = a1 & 0xffffffffffffffe0\n 16365: u64 [s1 + 0x148] = a1\n 16369: sp = a1\n 16371: i32 a0 = a0 + 0\n 16373: i32 a2 = a1 + 0\n 16375: a1 = 0x20\n 16378: ecalli 6 // 'hash_keccak_256'\n 16380: u64 [s1 + 376] = 0x20\n 16385: a5 = 0\n 16387: u64 [s1 + 368] = 0\n 16391: u64 [s1 + 360] = 0\n 16395: a4 = 0\n 16397: ra = 0\n 16399: u64 [s1 + 344] = 0\n 16403: u64 [s1 + 352] = 0\n 16407: a3 = u64 [s1 + 0x148]\n 16411: a0 = u64 [a3 + 0x18]\n 16414: a1 = u64 [a3 + 0x10]\n 16417: a2 = u64 [a3 + 0x8]\n 16420: t0 = u64 [a3]\n 16422: t1 = reverse a0\n 16424: a1 = reverse a1\n 16426: a3 = reverse a2\n 16428: a2 = reverse t0\n 16430: t0 = a2\n 16432: a0 = u64 [s1 + 0x150]\n 16436: u64 [a0 + 0x18] = a2\n 16439: u64 [s1 + 0x130] = a3\n 16443: u64 [a0 + 0x10] = a3\n 16446: u64 [s1 + 0x148] = a1\n 16450: u64 [a0 + 0x8] = a1\n 16453: a3 = t1\n 16455: u64 [a0] = t1\n 16457: fallthrough\n      : @498 (gas: 25)\n 16458: t1 = t0\n 16460: t2 = a3\n 16462: a0 = u64 [s1 + 0xf0]\n 16466: u64 [s1 + 0x140] = a4\n 16470: a0 = a4 <u a0\n 16473: a4 = a0 ^ 0x1\n 16476: u64 [s1 + 0x138] = ra\n 16480: a4 = 0x1 if ra != 0\n 16483: a0 = u64 [s1 + 0x160]\n 16487: a2 = u64 [s1 + 0x158]\n 16491: a0 = a0 | a2\n 16494: a4 = 0x1 if a0 != 0\n 16497: a1 = u64 [s1 + 0xf8]\n 16501: a0 = u64 [s1 + 0x178]\n 16505: a1 = a1 + a0\n 16508: a3 = u64 [s1 + 0x110]\n 16512: t0 = a5\n 16514: a3 = a3 + a5\n 16517: a2 = u64 [s1 + 0x100]\n 16521: a0 = u64 [s1 + 0x170]\n 16525: a2 = a2 + a0\n 16528: a0 = u64 [s1 + 0x108]\n 16532: a5 = u64 [s1 + 0x168]\n 16536: a0 = a0 + a5\n 16539: jump @506 if a4 != 0\n      : @499 (gas: 23)\n 16543: a4 = u64 [s1 + 0x178]\n 16547: a4 = a1 <u a4\n 16550: ra = a3 + a4\n 16553: a3 = t0\n 16555: t0 = ra ^ t0\n 16558: a5 = ra <u a3\n 16561: a5 = a4 if t0 == 0\n 16564: a5 = a5 + a2\n 16567: t0 = a5 <u a2\n 16570: a4 = u64 [s1 + 0x170]\n 16574: a2 = a2 <u a4\n 16577: a0 = a0 + a2\n 16580: a0 = a0 + t0\n 16583: a2 = a1 | a5\n 16586: a0 = ra | a0\n 16589: a2 = a2 | a0\n 16592: a2 = a2 >> 0x20\n 16595: a0 = a0 | a5\n 16598: a0 = a0 << 0x20\n 16601: a0 = a0 | a2\n 16604: u64 [s1 + 0x128] = t2\n 16608: u64 [s1 + 0x120] = t1\n 16612: jump @549 if a0 != 0\n      : @500 (gas: 4)\n 16616: a0 = s1 + 0x7ff\n 16620: a0 = a0 + 0x1a1\n 16624: u64 [s1 + 0x118] = a3\n 16628: ra = 508, jump @17\n      : @501 [@dyn 254] (gas: 15)\n 16634: a3 = s1 + 0x7ff\n 16638: a3 = a3 + 0xd9\n 16642: a0 = u64 [a3 + 0xe0]\n 16646: a1 = u64 [a3 + 0xd8]\n 16650: a2 = u64 [a3 + 0xd0]\n 16654: a3 = u64 [a3 + 0xc8]\n 16658: a4 = s1 + 0x10d8\n 16662: a5 = a4 + 0x700\n 16666: u64 [a5 + 0xe0] = a0\n 16670: u64 [a5 + 0xd8] = a1\n 16674: u64 [a5 + 0xd0] = a2\n 16678: u64 [a5 + 0xc8] = a3\n 16682: a1 = s1 + 0x18a0\n 16686: a0 = u64 [s1 + 0x150]\n 16690: ra = 510, jump @23\n      : @502 [@dyn 255] (gas: 56)\n 16696: ra = u64 [s1 + 0x128]\n 16700: ra = ra + 0x1\n 16703: a0 = ra <u 0x1\n 16706: t0 = u64 [s1 + 0x148]\n 16710: t0 = t0 + a0\n 16713: a0 = ra | t0\n 16716: a0 = a0 <u 0x1\n 16719: a1 = u64 [s1 + 0x130]\n 16723: t1 = a1 + a0\n 16726: a1 = t1 <u a1\n 16729: a0 = u64 [s1 + 0x120]\n 16733: a0 = a0 + a1\n 16736: a1 = u64 [s1 + 0x178]\n 16740: a2 = a1 + 0x20\n 16743: u64 [s1 + 0x128] = a2\n 16747: a3 = a2 <u a1\n 16750: a1 = u64 [s1 + 0x118]\n 16754: a2 = a1 + a3\n 16757: u64 [s1 + 0x120] = a2\n 16761: a4 = a2 <u a1\n 16764: a4 = a3 if a3 == 0\n 16767: a1 = u64 [s1 + 0x170]\n 16771: t2 = a1 + a4\n 16774: a4 = t2 <u a1\n 16777: a1 = u64 [s1 + 0x168]\n 16781: a1 = a1 + a4\n 16784: u64 [s1 + 0x168] = a1\n 16788: a1 = u64 [s1 + 0x140]\n 16792: a4 = a1 + 0x20\n 16795: a5 = a4 <u a1\n 16798: a2 = u64 [s1 + 0x138]\n 16802: a1 = a2 + a5\n 16805: a2 = a1 <u a2\n 16808: a2 = a5 if a5 == 0\n 16811: a3 = u64 [s1 + 0x158]\n 16815: a2 = a2 + a3\n 16818: a5 = a2 <u a3\n 16821: a3 = u64 [s1 + 0x160]\n 16825: a3 = a3 + a5\n 16828: u64 [s1 + 0x160] = a3\n 16832: u64 [s1 + 0x148] = t0\n 16836: a5 = u64 [s1 + 0x150]\n 16840: u64 [a5 + 0x8] = t0\n 16843: a3 = ra\n 16845: u64 [a5] = ra\n 16847: u64 [a5 + 0x10] = t1\n 16850: t0 = a0\n 16852: u64 [a5 + 0x18] = a0\n 16855: u64 [s1 + 0x130] = t1\n 16859: a0 = u64 [s1 + 0x128]\n 16863: u64 [s1 + 0x178] = a0\n 16867: a5 = u64 [s1 + 0x120]\n 16871: u64 [s1 + 0x170] = t2\n 16875: ra = a1\n 16877: u64 [s1 + 0x158] = a2\n 16881: jump @498\n      : @503 (gas: 8)\n 16884: a2 = u64 [s1 + 0xe8]\n 16888: a0 = u64 [s1 + 0x98]\n 16892: a0 = a0 | a2\n 16895: a1 = u64 [s1 + 0x88]\n 16899: a1 = a1 | a3\n 16902: a0 = a0 | a1\n 16905: a4 = u64 [s1 + 0xf8]\n 16909: jump @519 if a0 != 0\n      : @504 (gas: 1)\n 16913: t0 = 512, jump @727\n      : @505 [@dyn 256] (gas: 1)\n 16919: jump @522\n      : @506 (gas: 11)\n 16922: t2 = t0\n 16924: t1 = u64 [s1 + 0xe8]\n 16928: a4 = u64 [s1 + 0xf0]\n 16932: a4 = a4 ^ t1\n 16935: a5 = u64 [s1 + 0x98]\n 16939: a4 = a4 | a5\n 16942: t0 = u64 [s1 + 0x90]\n 16946: a5 = u64 [s1 + 0x88]\n 16950: a5 = t0 | a5\n 16953: a4 = a4 | a5\n 16956: jump @518 if a4 == 0\n      : @507 (gas: 20)\n 16960: a4 = u64 [s1 + 0x178]\n 16964: a4 = a1 <u a4\n 16967: a3 = a3 + a4\n 16970: t0 = a3 ^ t2\n 16973: a5 = a3 <u t2\n 16976: a5 = a4 if t0 == 0\n 16979: a5 = a5 + a2\n 16982: t0 = a5 <u a2\n 16985: a4 = u64 [s1 + 0x170]\n 16989: a2 = a2 <u a4\n 16992: a0 = a0 + a2\n 16995: a0 = a0 + t0\n 16998: a2 = a1 | a5\n 17001: a0 = a0 | a3\n 17004: a2 = a2 | a0\n 17007: a2 = a2 >> 0x20\n 17010: a0 = a0 | a5\n 17013: a0 = a0 << 0x20\n 17016: a0 = a0 | a2\n 17019: jump @549 if a0 != 0\n      : @508 (gas: 3)\n 17023: a0 = s1 + 0x7ff\n 17027: a0 = a0 + 0x3a1\n 17031: ra = 514, jump @17\n      : @509 [@dyn 257] (gas: 13)\n 17037: a0 = s1 + 0x7ff\n 17041: a0 = a0 + 0xd9\n 17045: a2 = a0 + 0x200\n 17049: a1 = u64 [a2 + 0xe0]\n 17053: u64 [s1 + 0x170] = a1\n 17057: a1 = u64 [a2 + 0xd8]\n 17061: u64 [s1 + 0x168] = a1\n 17065: a1 = u64 [a2 + 0xd0]\n 17069: u64 [s1 + 0x160] = a1\n 17073: a0 = u64 [a2 + 0xc8]\n 17077: u64 [s1 + 0x158] = a0\n 17081: a0 = u64 [s1 + 0xe8]\n 17085: t0 = 516, jump @721\n      : @510 [@dyn 258] (gas: 1)\n 17091: ra = 518, jump @753\n      : @511 [@dyn 259] (gas: 1)\n 17097: t0 = 520, jump @731\n      : @512 [@dyn 260] (gas: 1)\n 17103: ra = 522, jump @748\n      : @513 [@dyn 261] (gas: 1)\n 17109: t0 = 524, jump @719\n      : @514 [@dyn 262] (gas: 1)\n 17115: ra = 526, jump @748\n      : @515 [@dyn 263] (gas: 17)\n 17121: a4 = u64 [s1 + 0x178]\n 17125: a2 = a4 <u 0x80\n 17129: a3 = u64 [s1 + 0x130]\n 17133: a1 = a3 if a2 != 0\n 17136: a5 = u64 [s1 + 0x138]\n 17140: a3 = u64 [s1 + 0x148]\n 17144: a3 = a3 | a5\n 17147: a3 = a0 if a2 == 0\n 17150: a1 = 0xffffffffffffffff if a4 == 0\n 17153: a3 = 0xffffffffffffffff if a4 == 0\n 17156: a4 = u64 [s1 + 0x140]\n 17160: a4 = 0 if a2 == 0\n 17162: a5 = 0 if a2 == 0\n 17164: a0 = u64 [s1 + 0x158]\n 17168: a0 = a0 & ~a3\n 17171: a2 = u64 [s1 + 0x160]\n 17175: t0 = 528, jump @722\n      : @516 [@dyn 264] (gas: 8)\n 17181: u64 [a4] = a3\n 17183: a3 = a4 + 0xffffffffffffff00\n 17187: u64 [a3 + 0xf8] = a2\n 17191: u64 [a3 + 0xf0] = a1\n 17195: u64 [a3 + 0xe8] = a0\n 17199: a1 = s1 + 0x18c0\n 17203: a0 = u64 [s1 + 0x150]\n 17207: ra = 530, jump @23\n      : @517 [@dyn 265] (gas: 3)\n 17213: t1 = u64 [s1 + 0xe8]\n 17217: t0 = u64 [s1 + 0x90]\n 17221: fallthrough\n      : @518 (gas: 20)\n 17222: a2 = u64 [s1 + 0x98]\n 17226: a0 = a2 >> 0x3f\n 17229: a1 = u64 [s1 + 0x88]\n 17233: a1 = a1 << 0x1\n 17236: a0 = a0 | a1\n 17239: a1 = t0 >> 0x3f\n 17242: a2 = a2 << 0x1\n 17245: a1 = a1 | a2\n 17248: a2 = t1 >> 0x3f\n 17251: a3 = t0 << 0x1\n 17254: a2 = a2 | a3\n 17257: a3 = t1 << 0x1\n 17260: a3 = a3 + 0x1\n 17263: a4 = s1 + 0x18d8\n 17267: u64 [a4 + 0x8] = a3\n 17270: u64 [a4 + 0x10] = a2\n 17273: u64 [a4 + 0x18] = a1\n 17276: u64 [a4 + 0x20] = a0\n 17279: a0 = 0x18e0\n 17283: jump @529\n      : @519 (gas: 10)\n 17286: a3 = s1 + 0x100\n 17290: a0 = u64 [a3 + 0x8]\n 17293: a1 = u64 [a3]\n 17295: a0 = a0 | a1\n 17298: a1 = 0xffffffe0\n 17308: a1 = a4 <u a1\n 17311: a2 = u64 [a3 + 0x10]\n 17314: a1 = 0 if a2 != 0\n 17316: a1 = 0 if a0 != 0\n 17318: jump @549 if a1 == 0\n      : @520 (gas: 4)\n 17322: i32 a1 = a4 + 0x20\n 17325: a0 = s1 + 0x7ff\n 17329: a0 = a0 + 0x3e1\n 17333: ra = 532, jump @17\n      : @521 [@dyn 266] (gas: 15)\n 17339: a3 = u64 [s1 + 0x90]\n 17343: a2 = u64 [s1 + 0xe8]\n 17347: a0 = s1 + 0x7ff\n 17351: a0 = a0 + 0xd9\n 17355: a4 = a0 + 0x300\n 17359: a1 = u64 [a4 + 0x20]\n 17362: a5 = s1 + 0x100\n 17366: u64 [a5 + 0x70] = a1\n 17369: a1 = u64 [a4 + 0x18]\n 17372: u64 [a5 + 0x68] = a1\n 17375: a1 = u64 [a4 + 0x10]\n 17378: u64 [a5 + 0x58] = a1\n 17381: a0 = u64 [a4 + 0x8]\n 17384: u64 [a5 + 0x60] = a0\n 17387: fallthrough\n      : @522 (gas: 18)\n 17388: a0 = a3 >> 0x3f\n 17391: a4 = u64 [s1 + 0x98]\n 17395: a1 = a4 << 0x1\n 17398: a0 = a0 | a1\n 17401: u64 [s1 + 0x150] = a0\n 17405: a0 = a4 >> 0x3f\n 17408: a1 = u64 [s1 + 0x88]\n 17412: a1 = a1 << 0x1\n 17415: a0 = a0 | a1\n 17418: u64 [s1 + 0x148] = a0\n 17422: a0 = a2 >> 0x3f\n 17425: a1 = a3 << 0x1\n 17428: a0 = a0 | a1\n 17431: u64 [s1 + 0x140] = a0\n 17435: a0 = a2 << 0x1\n 17438: u64 [s1 + 0x138] = a0\n 17442: a1 = a2 << 0x3\n 17445: t0 = 534, jump @738\n      : @523 [@dyn 267] (gas: 1)\n 17451: ra = 536, jump @753\n      : @524 [@dyn 268] (gas: 7)\n 17457: u64 [s1 + 0x118] = a0\n 17461: u64 [s1 + 0x130] = a1\n 17465: a0 = u64 [s1 + 0xe8]\n 17469: i32 a2 = a0 << 0x3\n 17472: a0 = 0xffffffffffffffff\n 17475: a1 = 0xffffffffffffffff\n 17478: ra = 538, jump @748\n      : @525 [@dyn 269] (gas: 1)\n 17484: t0 = 540, jump @733\n      : @526 [@dyn 270] (gas: 1)\n 17490: ra = 542, jump @748\n      : @527 [@dyn 271] (gas: 1)\n 17496: t0 = 544, jump @714\n      : @528 [@dyn 272] (gas: 6)\n 17502: u64 [a4 + 0x38] = a2\n 17505: u64 [a4 + 0x40] = a3\n 17508: u64 [a4 + 0x30] = a1\n 17511: u64 [a4 + 0x28] = a0\n 17514: a0 = 0x1900\n 17518: fallthrough\n      : @529 (gas: 3)\n 17519: a1 = s1 + a0\n 17522: a0 = u64 [s1 + 0xa0]\n 17526: ra = 546, jump @23\n      : @530 [@dyn 273] (gas: 9)\n 17532: a0 = s1 + 0x18d8\n 17536: u64 [a0 + 96] = 0\n 17539: u64 [a0 + 88] = 0\n 17542: u64 [a0 + 80] = 0\n 17545: u64 [a0 + 72] = 0x1\n 17549: a0 = s1 + 0x7ff\n 17553: a0 = a0 + 0x381\n 17557: a1 = s1 + 0x1920\n 17561: ra = 548, jump @21\n      : @531 [@dyn 274] (gas: 13)\n 17567: t0 = s1 + 0x7ff\n 17571: t0 = t0 + 0xd9\n 17575: a0 = t0 + 0x200\n 17579: a3 = u64 [a0 + 0xc0]\n 17583: a5 = u64 [a0 + 0xb8]\n 17587: a4 = u64 [a0 + 0xb0]\n 17591: a0 = a3 >u 0\n 17593: a1 = a5 >u 0\n 17595: a1 = a0 if a3 != 0\n 17598: a0 = a5 | a3\n 17601: a2 = a4 >u 0\n 17603: a2 = a1 if a0 != 0\n 17606: jump @575 if a2 != 0\n      : @532 (gas: 25)\n 17610: a0 = u64 [t0 + 0x2a8]\n 17614: u64 [s1 + 0x178] = a0\n 17618: a0 = a0 + 0x1\n 17621: a2 = s1 + 0x18d8\n 17625: u64 [a2 + 104] = 0x1\n 17629: a1 = a0 <u 0x1\n 17632: a1 = a1 + a4\n 17635: u64 [a2 + 0x88] = a0\n 17639: a0 = a0 | a1\n 17642: u64 [a2 + 0x90] = a1\n 17646: a0 = a0 <u 0x1\n 17649: a0 = a0 + a5\n 17652: u64 [a2 + 0x98] = a0\n 17656: a0 = a0 <u a5\n 17659: a0 = a0 + a3\n 17662: u64 [a2 + 0xa0] = a0\n 17666: u64 [a2 + 128] = 0\n 17670: u64 [a2 + 120] = 0\n 17673: u64 [a2 + 112] = 0\n 17676: a0 = s1 + 0x1940\n 17680: a1 = s1 + 0x1960\n 17684: u64 [s1 + 0x170] = a4\n 17688: u64 [s1 + 0x168] = a5\n 17692: u64 [s1 + 0x160] = a3\n 17696: ra = 550, jump @23\n      : @533 [@dyn 275] (gas: 20)\n 17702: a0 = sp + 0xffffffffffffffe0\n 17705: a0 = a0 & 0xffffffffffffffe0\n 17708: u64 [s1 + 0x150] = a0\n 17712: sp = a0\n 17714: a3 = s1 + 0x7ff\n 17718: a3 = a3 + 0xd9\n 17722: a0 = u64 [s1 + 0x160]\n 17726: a4 = a3 + 0x200\n 17730: u64 [a4 + 0x60] = a0\n 17733: a0 = u64 [s1 + 0x168]\n 17737: u64 [a4 + 0x58] = a0\n 17740: a0 = u64 [s1 + 0x170]\n 17744: u64 [a4 + 0x50] = a0\n 17747: a0 = s1 + 0x7ff\n 17751: a0 = a0 + 0x341\n 17755: a1 = s1 + 0x7ff\n 17759: a1 = a1 + 0x321\n 17763: a2 = u64 [s1 + 0x178]\n 17767: u64 [a4 + 0x48] = a2\n 17770: ra = 552, jump @661\n      : @534 [@dyn 276] (gas: 23)\n 17776: a1 = s1 + 0x7ff\n 17780: a1 = a1 + 0xd9\n 17784: a4 = a1 + 0x200\n 17788: a0 = u64 [a4 + 0xa0]\n 17792: u64 [s1 + 0x178] = a0\n 17796: a0 = u64 [a4 + 0x98]\n 17800: u64 [s1 + 0x158] = a0\n 17804: a0 = u64 [a4 + 0x90]\n 17808: u64 [s1 + 0x168] = a0\n 17812: a0 = u64 [a4 + 0x88]\n 17816: u64 [s1 + 0x170] = a0\n 17820: a0 = u64 [a4 + 0x78]\n 17823: a5 = u64 [a4 + 0x80]\n 17827: a2 = u64 [a4 + 0x68]\n 17830: a3 = u64 [a4 + 0x70]\n 17833: a1 = u64 [s1 + 0x150]\n 17837: u64 [a1 + 0x10] = a0\n 17840: u64 [a1 + 0x18] = a5\n 17843: u64 [a1] = a2\n 17845: u64 [a1 + 0x8] = a3\n 17848: a0 = s1 + 0x7ff\n 17852: a0 = a0 + 0x301\n 17856: ra = 554, jump @21\n      : @535 [@dyn 277] (gas: 68)\n 17862: a0 = s1 + 0x7ff\n 17866: a0 = a0 + 0xd9\n 17870: a2 = a0 + 0x200\n 17874: a1 = u64 [a2 + 0x28]\n 17877: u64 [s1 + 0x130] = a1\n 17881: a1 = u64 [a2 + 0x30]\n 17884: u64 [s1 + 0x128] = a1\n 17888: a1 = u64 [a2 + 0x38]\n 17891: u64 [s1 + 0x120] = a1\n 17895: a2 = a0\n 17897: a3 = u64 [s1 + 0x170]\n 17901: a0 = a3 >> 0x3d\n 17904: a4 = u64 [s1 + 0x168]\n 17908: a1 = a4 << 0x3\n 17911: a0 = a0 | a1\n 17914: u64 [s1 + 0x160] = a0\n 17918: a0 = a4 >> 0x3d\n 17921: a4 = u64 [s1 + 0x158]\n 17925: a1 = a4 << 0x3\n 17928: a0 = a0 | a1\n 17931: u64 [s1 + 0x168] = a0\n 17935: a0 = u64 [a2 + 0x240]\n 17939: u64 [s1 + 0x118] = a0\n 17943: a0 = a4 >> 0x3d\n 17946: a1 = u64 [s1 + 0x178]\n 17950: a1 = a1 << 0x3\n 17953: a0 = a0 | a1\n 17956: u64 [s1 + 0x158] = a0\n 17960: a3 = a3 << 0x3\n 17963: u64 [s1 + 0x178] = a3\n 17967: a0 = u64 [s1 + 0xd0]\n 17971: ecalli 3 // 'caller'\n 17973: a2 = u64 [s1 + 0x160]\n 17977: a0 = a2 >u 0\n 17979: a5 = u64 [s1 + 0x178]\n 17983: a1 = a5 <u 0x100\n 17987: a3 = a1 ^ 0x1\n 17990: a3 = a0 if a2 != 0\n 17993: a4 = u64 [s1 + 0x158]\n 17997: a0 = a4 >u 0\n 17999: a2 = u64 [s1 + 0x168]\n 18003: a1 = a2 >u 0\n 18005: a1 = a0 if a4 != 0\n 18008: a0 = a4\n 18010: a4 = u64 [s1 + 0xe0]\n 18014: t1 = u64 [a4 + 0x8]\n 18017: a2 = a2 | a0\n 18020: t0 = i32 [a4 + 0x10]\n 18023: a3 = a1 if a2 != 0\n 18026: u64 [s1 + 0x148] = a3\n 18030: a1 = u64 [a4]\n 18032: a0 = reverse t1\n 18034: a2 = a0 << 0x20\n 18037: a3 = reverse t0\n 18039: a3 = a3 >> 0x20\n 18042: a3 = a3 | a2\n 18045: u64 [s1 + 0x140] = a3\n 18049: a0 = a0 >> 0x20\n 18052: a4 = reverse a1\n 18054: a2 = a4 << 0x20\n 18057: a1 = a2 | a0\n 18060: u64 [s1 + 0x138] = a1\n 18064: a4 = a4 >> 0x20\n 18067: u64 [s1 + 0x168] = a4\n 18071: i32 a2 = 0x80 - a5\n 18075: u64 [s1 + 0x110] = a2\n 18079: a0 = a3\n 18081: ra = 556, jump @748\n      : @536 [@dyn 278] (gas: 8)\n 18087: u64 [s1 + 0x158] = a0\n 18091: u64 [s1 + 0x100] = a1\n 18095: a0 = u64 [s1 + 0x170]\n 18099: i32 a2 = a0 << 0x3\n 18102: u64 [s1 + 0x160] = a2\n 18106: a0 = u64 [s1 + 0x168]\n 18110: a1 = 0\n 18112: ra = 558, jump @753\n      : @537 [@dyn 279] (gas: 10)\n 18118: u64 [s1 + 0xf8] = a1\n 18122: a1 = u64 [s1 + 0x158]\n 18126: a0 = a0 | a1\n 18129: u64 [s1 + 0x170] = a0\n 18133: a0 = u64 [s1 + 0x178]\n 18137: i32 a2 = a0 + 0xffffffffffffff80\n 18140: u64 [s1 + 0x108] = a2\n 18144: a0 = u64 [s1 + 0x140]\n 18148: a1 = u64 [s1 + 0x138]\n 18152: ra = 560, jump @753\n      : @538 [@dyn 280] (gas: 18)\n 18158: a2 = u64 [s1 + 0x178]\n 18162: a4 = a2 <u 0x80\n 18166: u64 [s1 + 0x158] = a4\n 18170: a3 = u64 [s1 + 0x170]\n 18174: a0 = a3 if a4 != 0\n 18177: a3 = u64 [s1 + 0x168]\n 18181: a0 = a3 if a2 == 0\n 18184: u64 [s1 + 0x170] = a0\n 18188: a0 = u64 [s1 + 0x100]\n 18192: a3 = u64 [s1 + 0xf8]\n 18196: a0 = a0 | a3\n 18199: a0 = a1 if a4 == 0\n 18202: a0 = 0 if a2 == 0\n 18204: u64 [s1 + 0x168] = a0\n 18208: a0 = u64 [s1 + 0x140]\n 18212: a1 = u64 [s1 + 0x138]\n 18216: a2 = u64 [s1 + 0x160]\n 18220: ra = 562, jump @753\n      : @539 [@dyn 281] (gas: 19)\n 18226: a2 = a1\n 18228: a1 = u64 [s1 + 0x158]\n 18232: a0 = 0 if a1 == 0\n 18234: a2 = 0 if a1 == 0\n 18236: a3 = u64 [s1 + 0x148]\n 18240: a1 = u64 [s1 + 0x168]\n 18244: a1 = 0 if a3 != 0\n 18246: u64 [s1 + 0x168] = a1\n 18250: a1 = u64 [s1 + 0x170]\n 18254: a1 = 0 if a3 != 0\n 18256: u64 [s1 + 0x170] = a1\n 18260: a2 = 0 if a3 != 0\n 18262: u64 [s1 + 0x140] = a2\n 18266: a0 = 0 if a3 != 0\n 18268: u64 [s1 + 0x138] = a0\n 18272: a0 = 0xffffffffffffffff\n 18275: a1 = 0xffffffffffffffff\n 18278: a2 = u64 [s1 + 0x108]\n 18282: ra = 564, jump @753\n      : @540 [@dyn 282] (gas: 6)\n 18288: u64 [s1 + 0x100] = a0\n 18292: u64 [s1 + 0x108] = a1\n 18296: a0 = u64 [s1 + 0x80]\n 18300: a1 = 0\n 18302: a2 = u64 [s1 + 0x160]\n 18306: ra = 566, jump @753\n      : @541 [@dyn 283] (gas: 6)\n 18312: u64 [s1 + 0xf0] = a0\n 18316: u64 [s1 + 0xf8] = a1\n 18320: a0 = 0xffffffffffffffff\n 18323: a1 = 0xffffffffffffffff\n 18326: a2 = u64 [s1 + 0x110]\n 18330: ra = 568, jump @748\n      : @542 [@dyn 284] (gas: 19)\n 18336: a3 = u64 [s1 + 0xf0]\n 18340: a3 = a3 | a0\n 18343: a2 = u64 [s1 + 0x158]\n 18347: a0 = u64 [s1 + 0x100]\n 18351: a3 = a0 if a2 == 0\n 18354: a0 = u64 [s1 + 0x178]\n 18358: a4 = u64 [s1 + 0x80]\n 18362: a3 = a4 if a0 == 0\n 18365: u64 [s1 + 0x110] = a3\n 18369: a3 = u64 [s1 + 0xf8]\n 18373: a3 = a3 | a1\n 18376: a1 = u64 [s1 + 0x108]\n 18380: a3 = a1 if a2 == 0\n 18383: a3 = 0 if a0 == 0\n 18385: u64 [s1 + 0x178] = a3\n 18389: a0 = 0xffffffffffffffff\n 18392: a1 = 0xffffffffffffffff\n 18395: a2 = u64 [s1 + 0x160]\n 18399: ra = 570, jump @753\n      : @543 [@dyn 285] (gas: 38)\n 18405: a2 = u64 [s1 + 0x158]\n 18409: a0 = 0 if a2 == 0\n 18411: a1 = 0 if a2 == 0\n 18413: a2 = u64 [s1 + 0x178]\n 18417: a2 = a2 ^ 0xffffffffffffffff\n 18420: a3 = u64 [s1 + 0x110]\n 18424: a3 = a3 ^ 0xffffffffffffffff\n 18427: a1 = a1 ^ 0xffffffffffffffff\n 18430: a0 = a0 ^ 0xffffffffffffffff\n 18433: a5 = u64 [s1 + 0x148]\n 18437: a3 = 0xffffffffffffffff if a5 != 0\n 18440: a2 = 0xffffffffffffffff if a5 != 0\n 18443: a0 = 0xffffffffffffffff if a5 != 0\n 18446: a1 = 0xffffffffffffffff if a5 != 0\n 18449: a4 = u64 [s1 + 0x118]\n 18453: a2 = a2 & a4\n 18456: a4 = u64 [s1 + 0x120]\n 18460: a3 = a3 & a4\n 18463: a4 = u64 [s1 + 0x128]\n 18467: a1 = a1 & a4\n 18470: a4 = u64 [s1 + 0x130]\n 18474: a0 = a0 & a4\n 18477: a4 = u64 [s1 + 0x170]\n 18481: a3 = a3 | a4\n 18484: a4 = u64 [s1 + 0x168]\n 18488: a2 = a2 | a4\n 18491: a4 = u64 [s1 + 0x138]\n 18495: a0 = a0 | a4\n 18498: a4 = u64 [s1 + 0x140]\n 18502: a1 = a1 | a4\n 18505: a4 = s1 + 0x18d8\n 18509: u64 [a4 + 0xb0] = a1\n 18513: u64 [a4 + 0xa8] = a0\n 18517: u64 [a4 + 0xc0] = a2\n 18521: u64 [a4 + 0xb8] = a3\n 18525: a1 = s1 + 0x1980\n 18529: a0 = u64 [s1 + 0x150]\n 18533: ra = 572, jump @23\n      : @544 [@dyn 286] (gas: 4)\n 18539: a0 = s1 + 0x7ff\n 18543: a0 = a0 + 0x2e1\n 18547: a1 = 0x40\n 18550: ra = 574, jump @17\n      : @545 [@dyn 287] (gas: 49)\n 18556: a0 = s1 + 0x7ff\n 18560: a0 = a0 + 0xd9\n 18564: a2 = a0 + 0x200\n 18568: a1 = u64 [a2 + 0x20]\n 18571: u64 [s1 + 0x170] = a1\n 18575: a1 = u64 [a2 + 0x18]\n 18578: u64 [s1 + 0x168] = a1\n 18582: a1 = u64 [a2 + 0x10]\n 18585: u64 [s1 + 0x160] = a1\n 18589: a1 = u64 [a2 + 0x8]\n 18592: u64 [s1 + 0x178] = a1\n 18596: a0 = u64 [s1 + 0xd0]\n 18600: ecalli 3 // 'caller'\n 18602: a2 = u64 [s1 + 0xe0]\n 18606: a0 = u64 [a2 + 0x8]\n 18609: a1 = i32 [a2 + 0x10]\n 18612: a2 = u64 [a2]\n 18614: a3 = reverse a0\n 18616: a0 = a3 << 0x20\n 18619: a1 = reverse a1\n 18621: a1 = a1 >> 0x20\n 18624: t0 = a1 | a0\n 18627: a3 = a3 >> 0x20\n 18630: a1 = reverse a2\n 18632: a2 = a1 << 0x20\n 18635: a2 = a2 | a3\n 18638: a1 = a1 >> 0x20\n 18641: a3 = u64 [0x20040]\n 18646: a0 = s1 + 0x7ff\n 18650: a0 = a0 + 0xd9\n 18654: u64 [a0 + 0x200] = a3\n 18658: a3 = u64 [0x20048]\n 18663: a4 = u64 [0x20050]\n 18668: a5 = u64 [0x20058]\n 18673: u64 [a0 + 0x1f8] = a3\n 18677: a3 = a0 + 0x100\n 18681: u64 [a3 + 0xf0] = a4\n 18685: u64 [a0 + 480] = 0\n 18689: u64 [a3 + 0xe8] = a5\n 18693: u64 [a3 + 0xd8] = a1\n 18697: u64 [a3 + 0xd0] = a2\n 18701: a2 = s1 + 0x7ff\n 18705: a2 = a2 + 0x2c1\n 18709: a3 = s1 + 0x7ff\n 18713: a3 = a3 + 0x2a1\n 18717: u64 [a0 + 0x1c8] = t0\n 18721: a0 = 0\n 18723: a1 = 0\n 18725: ra = 576, jump @24\n      : @546 [@dyn 288] (gas: 36)\n 18731: a0 = u64 [s1 + 0xd0]\n 18735: ecalli 3 // 'caller'\n 18737: a1 = u64 [s1 + 0xe0]\n 18741: a0 = u32 [a1 + 0x10]\n 18744: u64 [s1 + 0x150] = a0\n 18748: a0 = u64 [a1 + 0x8]\n 18751: u64 [s1 + 0x148] = a0\n 18755: a0 = u64 [a1]\n 18757: u64 [s1 + 0x158] = a0\n 18761: a0 = u64 [s1 + 0xa8]\n 18765: a1 = s1 + 0x7ff\n 18769: a1 = a1 + 0xd9\n 18773: a2 = a1 + 0x100\n 18777: u64 [a2 + 0x80] = a0\n 18781: a0 = u64 [s1 + 0xb0]\n 18785: u64 [a2 + 0x78] = a0\n 18788: a0 = u64 [s1 + 0xc8]\n 18792: u64 [a2 + 0x70] = a0\n 18795: a0 = u64 [s1 + 0xd8]\n 18799: u64 [a2 + 0x68] = a0\n 18802: a0 = u64 [s1 + 0x170]\n 18806: u64 [a2 + 0xa0] = a0\n 18810: a0 = u64 [s1 + 0x168]\n 18814: u64 [a2 + 0x98] = a0\n 18818: a0 = u64 [s1 + 0x160]\n 18822: u64 [a2 + 0x90] = a0\n 18826: a3 = a1\n 18828: a0 = s1 + 0x7ff\n 18832: a0 = a0 + 0x281\n 18836: a1 = s1 + 0x7ff\n 18840: a1 = a1 + 0x261\n 18844: a2 = s1 + 0x7ff\n 18848: a2 = a2 + 0x241\n 18852: a4 = u64 [s1 + 0x178]\n 18856: u64 [a3 + 0x188] = a4\n 18860: ra = 578, jump @643\n      : @547 [@dyn 289] (gas: 14)\n 18866: a4 = s1 + 0x100\n 18870: a3 = u64 [a4 + 0x60]\n 18873: a2 = a3\n 18875: a0 = u64 [a4 + 0x70]\n 18878: a0 = a0 | a3\n 18881: a3 = u64 [a4 + 0x68]\n 18884: a1 = u64 [a4 + 0x78]\n 18887: a1 = a1 | a3\n 18890: a1 = a1 | a0\n 18893: a1 = a1 >> 0x20\n 18896: a0 = a0 | a3\n 18899: a0 = a0 << 0x20\n 18902: a0 = a0 | a1\n 18905: jump @549 if a0 != 0\n      : @548 (gas: 36)\n 18908: ra = a3\n 18910: t2 = s1 + 0x7ff\n 18914: t2 = t2 + 0xd9\n 18918: a4 = t2 + 0x100\n 18922: a0 = u64 [a4 + 0xb0]\n 18926: a1 = u64 [a4 + 0xc0]\n 18930: u64 [s1 + 0x140] = a1\n 18934: t1 = u64 [t2 + 0x1a8]\n 18938: a3 = u64 [a4 + 0xb8]\n 18942: a4 = a0 ^ a2\n 18945: a5 = a0 <u a2\n 18948: t0 = u64 [s1 + 0x178]\n 18952: a1 = t1 <u t0\n 18955: a5 = a1 if a4 == 0\n 18958: a4 = a3 - ra\n 18961: t2 = a4 - a5\n 18964: a4 = a4 <u a5\n 18967: u64 [s1 + 0x138] = a4\n 18971: a3 = a3 <u ra\n 18974: a5 = u64 [s1 + 0x170]\n 18978: a4 = u64 [s1 + 0x140]\n 18982: a5 = a4 - a5\n 18985: a5 = a5 - a3\n 18988: a3 = u64 [s1 + 0x138]\n 18992: a5 = a5 - a3\n 18995: a0 = a0 - a2\n 18998: a0 = a0 - a1\n 19001: a1 = t1 - t0\n 19004: a0 = a0 | a5\n 19007: a3 = a1 | t2\n 19010: a3 = a3 | a0\n 19013: a0 = a0 | t2\n 19016: a3 = a3 >> 0x20\n 19019: a0 = a0 << 0x20\n 19022: a0 = a0 | a3\n 19025: jump @580 if a0 == 0\n      : @549 (gas: 1)\n 19029: trap\n      : @550 (gas: 4)\n 19030: a1 = 0x20070\n 19035: i32 a1 = a1 + 0\n 19037: a0 = 0x1\n 19040: jump @552\n      : @551 (gas: 6)\n 19042: i32 a1 = a1 + 0\n 19044: a0 = 0x1\n 19047: a2 = 0\n 19049: ecalli 7 // 'seal_return'\n 19051: a1 = 0x20070\n 19056: jump @551\n      : @552 (gas: 4)\n 19058: a2 = 0\n 19060: ecalli 7 // 'seal_return'\n 19062: a1 = 0x20070\n 19067: jump @551\n      : @553 (gas: 2)\n 19069: a1 = 0x20070\n 19074: jump @551\n      : @554 (gas: 2)\n 19076: a1 = 0x20070\n 19081: jump @551\n      : @555 (gas: 2)\n 19083: a1 = 0x20070\n 19088: jump @551\n      : @556 (gas: 2)\n 19090: a1 = 0x20070\n 19095: jump @551\n      : @557 (gas: 2)\n 19097: a1 = 0x20070\n 19102: jump @551\n      : @558 (gas: 2)\n 19104: a1 = 0x20070\n 19109: jump @551\n      : @559 (gas: 2)\n 19111: a1 = 0x20070\n 19116: jump @551\n      : @560 (gas: 2)\n 19118: a1 = 0x20070\n 19123: jump @551\n      : @561 (gas: 6)\n 19125: a1 = 0x20070\n 19130: i32 a1 = a1 + 0\n 19132: a0 = 0x1\n 19135: ecalli 7 // 'seal_return'\n 19137: a1 = 0x20070\n 19142: jump @551\n      : @562 (gas: 2)\n 19144: a1 = 0x20070\n 19149: jump @551\n      : @563 (gas: 2)\n 19151: a1 = 0x20070\n 19156: jump @551\n      : @564 (gas: 8)\n 19158: u64 [a2 + 56] = 0\n 19161: u64 [a2 + 48] = 0\n 19164: u64 [a2 + 40] = 0\n 19167: a0 = 0x4e487b7100000000\n 19177: a1 = s1 + 0x1100\n 19181: u64 [a2 + 0x40] = a0\n 19184: a0 = 0\n 19186: ra = 580, jump @19\n      : @565 [@dyn 290] (gas: 10)\n 19192: a1 = s1 + 0x10d8\n 19196: u64 [a1 + 32] = 0\n 19199: u64 [a1 + 24] = 0\n 19202: u64 [a1 + 8] = 0x41\n 19206: a2 = a1\n 19208: a0 = 0x4\n 19211: a1 = s1 + 0x10e0\n 19215: u64 [a2 + 16] = 0\n 19218: ra = 0x248\n 19222: jump @19\n      : @566 (gas: 8)\n 19225: u64 [a2 + 152] = 0\n 19229: u64 [a2 + 144] = 0\n 19233: u64 [a2 + 136] = 0\n 19237: a0 = 0x4e487b7100000000\n 19247: a1 = s1 + 0x1160\n 19251: u64 [a2 + 0xa0] = a0\n 19255: a0 = 0\n 19257: ra = 582, jump @19\n      : @567 [@dyn 291] (gas: 9)\n 19263: a1 = s1 + 0x10d8\n 19267: u64 [a1 + 128] = 0\n 19271: u64 [a1 + 120] = 0\n 19274: u64 [a1 + 104] = 0x41\n 19278: a2 = a1\n 19280: a0 = 0x4\n 19283: a1 = s1 + 0x1140\n 19287: u64 [a2 + 112] = 0\n 19290: ra = 584, jump @19\n      : @568 [@dyn 292] (gas: 3)\n 19296: a0 = u64 [s1 + 0xb0]\n 19300: a0 = i32 [a0]\n 19302: jump @570 if a0 >u 63\n      : @569 (gas: 3)\n 19306: a1 = u64 [s1 + 0xb0]\n 19310: u32 [a1 + 0] = 0x40\n 19313: fallthrough\n      : @570 (gas: 5)\n 19314: a0 = 0x1\n 19317: a2 = 0x24\n 19320: a1 = u64 [s1 + 0xb8]\n 19324: ecalli 7 // 'seal_return'\n 19326: fallthrough\n      : @571 (gas: 9)\n 19327: u64 [a2 + 88] = 0\n 19330: u64 [a2 + 80] = 0\n 19333: u64 [a2 + 72] = 0\n 19336: a0 = 0x4e487b7100000000\n 19346: a1 = s1 + 0x7ff\n 19350: a1 = a1 + 0x121\n 19354: u64 [a2 + 0x60] = a0\n 19357: a0 = 0\n 19359: ra = 586, jump @19\n      : @572 [@dyn 293] (gas: 12)\n 19365: a1 = s1 + 0x7ff\n 19369: a1 = a1 + 0xd9\n 19373: u64 [a1 + 64] = 0\n 19376: u64 [a1 + 56] = 0\n 19379: u64 [a1 + 40] = 0x41\n 19383: a2 = a1\n 19385: a0 = 0x4\n 19388: a1 = s1 + 0x7ff\n 19392: a1 = a1 + 0x101\n 19396: u64 [a2 + 48] = 0\n 19399: ra = 0x250\n 19403: jump @19\n      : @573 (gas: 9)\n 19406: u64 [a2 + 184] = 0\n 19410: u64 [a2 + 176] = 0\n 19414: u64 [a2 + 168] = 0\n 19418: a0 = 0x4e487b7100000000\n 19428: a1 = s1 + 0x7ff\n 19432: a1 = a1 + 0x181\n 19436: u64 [a2 + 0xc0] = a0\n 19440: a0 = 0\n 19442: ra = 588, jump @19\n      : @574 [@dyn 294] (gas: 12)\n 19448: a1 = s1 + 0x7ff\n 19452: a1 = a1 + 0xd9\n 19456: u64 [a1 + 160] = 0\n 19460: u64 [a1 + 152] = 0\n 19464: u64 [a1 + 136] = 0x41\n 19469: a2 = a1\n 19471: a0 = 0x4\n 19474: a1 = s1 + 0x7ff\n 19478: a1 = a1 + 0x161\n 19482: u64 [a2 + 144] = 0\n 19486: ra = 0x250\n 19490: jump @19\n      : @575 (gas: 9)\n 19493: u64 [t0 + 280] = 0\n 19497: u64 [t0 + 272] = 0\n 19501: u64 [t0 + 264] = 0\n 19505: a0 = 0x4e487b7100000000\n 19515: a1 = s1 + 0x7ff\n 19519: a1 = a1 + 0x1e1\n 19523: u64 [t0 + 0x120] = a0\n 19527: a0 = 0\n 19529: ra = 590, jump @19\n      : @576 [@dyn 295] (gas: 11)\n 19535: a1 = s1 + 0x7ff\n 19539: a1 = a1 + 0xd9\n 19543: u64 [a1 + 256] = 0\n 19547: u64 [a1 + 248] = 0\n 19551: u64 [a1 + 232] = 0x41\n 19556: a2 = a1\n 19558: a0 = 0x4\n 19561: a1 = s1 + 0x7ff\n 19565: a1 = a1 + 0x1c1\n 19569: u64 [a2 + 240] = 0\n 19573: ra = 592, jump @19\n      : @577 [@dyn 296] (gas: 3)\n 19579: a0 = u64 [s1 + 0xb8]\n 19583: a0 = i32 [a0]\n 19585: jump @579 if a0 >u 63\n      : @578 (gas: 3)\n 19589: a1 = u64 [s1 + 0xb8]\n 19593: u32 [a1 + 0] = 0x40\n 19596: fallthrough\n      : @579 (gas: 5)\n 19597: a0 = 0x1\n 19600: a2 = 0x24\n 19603: a1 = u64 [s1 + 0xc0]\n 19607: ecalli 7 // 'seal_return'\n 19609: fallthrough\n      : @580 (gas: 34)\n 19610: a0 = u64 [s1 + 0x148]\n 19614: a2 = reverse a0\n 19616: a0 = a2 << 0x20\n 19619: a3 = u64 [s1 + 0x150]\n 19623: a3 = reverse a3\n 19625: a3 = a3 >> 0x20\n 19628: t0 = a3 | a0\n 19631: a0 = u64 [s1 + 0x158]\n 19635: a3 = reverse a0\n 19637: a4 = a3 << 0x20\n 19640: a2 = a2 >> 0x20\n 19643: a2 = a2 | a4\n 19646: a3 = a3 >> 0x20\n 19649: a4 = u64 [0x20000]\n 19654: t1 = s1 + 0x7ff\n 19658: t1 = t1 + 0xd9\n 19662: u64 [t1 + 0x160] = a4\n 19666: a4 = u64 [0x20008]\n 19671: a5 = u64 [0x20010]\n 19676: a0 = u64 [0x20018]\n 19681: u64 [t1 + 0x158] = a4\n 19685: a4 = t1 + 0x100\n 19689: u64 [a4 + 0x50] = a5\n 19692: u64 [t1 + 320] = 0\n 19696: u64 [a4 + 0x48] = a0\n 19699: u64 [a4 + 0x38] = a3\n 19702: u64 [a4 + 0x30] = a2\n 19705: a2 = s1 + 0x7ff\n 19709: a2 = a2 + 0x221\n 19713: a3 = s1 + 0x7ff\n 19717: a3 = a3 + 0x201\n 19721: u64 [t1 + 0x128] = t0\n 19725: a0 = u64 [s1 + 0x178]\n 19729: ra = 594, jump @24\n      : @581 [@dyn 297] (gas: 3)\n 19735: a0 = 0\n 19737: a1 = u64 [s1 + 0xc0]\n 19741: jump @552\n      : @582 (gas: 33)\n 19744: sp = sp + 0xffffffffffffffa0\n 19747: u64 [sp + 0x58] = ra\n 19750: u64 [sp + 0x50] = s0\n 19753: u64 [sp + 0x48] = s1\n 19756: s0 = sp + 0x60\n 19759: sp = sp & 0xfffffffffffffff0\n 19762: a2 = u64 [a1 + 0x10]\n 19765: a5 = u64 [a1 + 0x8]\n 19768: a4 = u64 [a1]\n 19770: a1 = u64 [a1 + 0x18]\n 19773: t0 = a2 << 0x3f\n 19776: a3 = a5 >> 0x1\n 19779: t0 = a3 | t0\n 19782: a3 = a1 << 0x3f\n 19785: a2 = a2 >> 0x1\n 19788: a3 = a3 | a2\n 19791: a5 = a5 << 0x3f\n 19794: a2 = a4 >> 0x1\n 19797: a5 = a5 | a2\n 19800: t1 = a1 >> 0x1\n 19803: a4 = a4 & 0x1\n 19806: a1 = -a4\n 19808: s1 = a4 <u 0x1\n 19811: a2 = a5 & 0x7f\n 19814: t2 = a1 & a3\n 19817: a3 = a1 & t0\n 19820: a2 = a5 if a4 != 0\n 19823: a4 = a1 & t1\n 19826: a1 = a2 <u 0x20\n 19829: a1 = 0 if a3 != 0\n 19831: a5 = t2 | a4\n 19834: a1 = 0 if a5 != 0\n 19836: jump @585 if s1 != a1\n      : @583 (gas: 5)\n 19839: u64 [a0] = a2\n 19841: u64 [a0 + 0x8] = a3\n 19844: u64 [a0 + 0x10] = t2\n 19847: u64 [a0 + 0x18] = a4\n 19850: t0 = 596, jump @746\n      : @584 [@dyn 298] (gas: 1)\n 19856: ret\n      : @585 (gas: 1)\n 19858: t0 = 598, jump @739\n      : @586 [@dyn 299] (gas: 1)\n 19864: ra = 600, jump @19\n      : @587 [@dyn 300] (gas: 7)\n 19870: u64 [sp + 24] = 0\n 19873: u64 [sp + 16] = 0\n 19876: u64 [sp + 0] = 0x22\n 19879: a0 = 0x4\n 19882: a1 = sp\n 19884: u64 [sp + 8] = 0\n 19887: ra = 602, jump @19\n      : @588 [@dyn 301] (gas: 2)\n 19893: a1 = i32 [0x20064]\n 19898: jump @590 if a1 >u 63\n      : @589 (gas: 2)\n 19902: u32 [0x20064] = 0x40\n 19908: fallthrough\n      : @590 (gas: 7)\n 19909: a1 = 0x20070\n 19914: i32 a1 = a1 + 0\n 19916: a0 = 0x1\n 19919: a2 = 0x24\n 19922: ra = 0x25c\n 19926: ecalli 7 // 'seal_return'\n 19928: fallthrough\n      : @591 [@dyn 302] (gas: 31)\n 19929: sp = sp + 0xfffffffffffffe20\n 19933: u64 [sp + 0x1d8] = ra\n 19937: u64 [sp + 0x1d0] = s0\n 19941: u64 [sp + 0x1c8] = s1\n 19945: s0 = sp + 0x1e0\n 19949: sp = sp & 0xffffffffffffffe0\n 19952: s1 = sp\n 19954: u64 [s1 + 0x10] = a0\n 19957: a0 = u64 [a2 + 0x10]\n 19960: u64 [s1 + 0x98] = a0\n 19964: a0 = u64 [a2]\n 19966: u64 [s1 + 0x80] = a0\n 19970: a0 = u64 [a2 + 0x18]\n 19973: u64 [s1 + 0x90] = a0\n 19977: a0 = u64 [a2 + 0x8]\n 19980: u64 [s1 + 0x88] = a0\n 19984: a0 = u64 [a1 + 0x18]\n 19987: a2 = u64 [a1 + 0x10]\n 19990: a3 = u64 [a1 + 0x8]\n 19993: a1 = u64 [a1]\n 19995: u64 [s1 + 0x70] = a0\n 19998: u64 [s1 + 0x1b8] = a0\n 20002: u64 [s1 + 0x68] = a2\n 20005: u64 [s1 + 0x1b0] = a2\n 20009: u64 [s1 + 0x60] = a3\n 20012: u64 [s1 + 0x1a8] = a3\n 20016: u64 [s1 + 0x38] = a1\n 20019: u64 [s1 + 0x1a0] = a1\n 20023: a0 = s1 + 0x180\n 20027: a1 = s1 + 0x1a0\n 20031: ra = 606, jump @21\n      : @592 [@dyn 303] (gas: 16)\n 20037: a4 = s1 + 0x100\n 20041: a0 = u64 [a4 + 0x98]\n 20045: a1 = u64 [a4 + 0x90]\n 20049: a2 = u64 [a4 + 0x88]\n 20053: a3 = u64 [a4 + 0x80]\n 20057: u64 [s1 + 0x30] = a0\n 20060: u64 [a4 + 0x58] = a0\n 20063: u64 [s1 + 0x28] = a1\n 20066: u64 [a4 + 0x50] = a1\n 20069: u64 [s1 + 0x20] = a2\n 20072: u64 [a4 + 0x48] = a2\n 20075: a0 = s1 + 0x160\n 20079: a1 = s1 + 0x140\n 20083: u64 [s1 + 0x78] = a3\n 20086: u64 [a4 + 0x40] = a3\n 20089: ra = 608, jump @582\n      : @593 [@dyn 304] (gas: 12)\n 20095: a0 = u64 [s1 + 0x80]\n 20099: a1 = u64 [s1 + 0x90]\n 20103: a2 = u64 [s1 + 0x88]\n 20107: a2 = a2 | a1\n 20110: a3 = u64 [s1 + 0x98]\n 20114: a1 = a0 | a3\n 20117: a1 = a1 | a2\n 20120: a1 = a1 >> 0x20\n 20123: a2 = a2 | a3\n 20126: a2 = a2 << 0x20\n 20129: a1 = a1 | a2\n 20132: jump @610 if a1 != 0\n      : @594 (gas: 15)\n 20136: a5 = s1 + 0x100\n 20140: a4 = u64 [a5 + 0x78]\n 20143: a2 = u64 [a5 + 0x70]\n 20146: a1 = u64 [a5 + 0x68]\n 20149: a3 = u64 [a5 + 0x60]\n 20152: u64 [s1 + 0x40] = a3\n 20155: u64 [a5 + 0x20] = a3\n 20158: u64 [s1 + 0x50] = a1\n 20161: u64 [a5 + 0x28] = a1\n 20164: u64 [s1 + 0x48] = a2\n 20167: u64 [a5 + 0x30] = a2\n 20170: a1 = s1 + 0x120\n 20174: u64 [s1 + 0x58] = a4\n 20177: u64 [a5 + 0x38] = a4\n 20180: ra = 610, jump @19\n      : @595 [@dyn 305] (gas: 3)\n 20186: a3 = u64 [s1 + 0x78]\n 20189: a0 = a3 & 0x1\n 20192: jump @599 if a0 != 0\n      : @596 (gas: 10)\n 20196: a0 = u64 [s1 + 0x90]\n 20200: a1 = u64 [s1 + 0x98]\n 20204: a0 = a0 | a1\n 20207: a1 = 0xffffffe0\n 20217: a4 = u64 [s1 + 0x80]\n 20221: a1 = a4 <u a1\n 20224: a2 = u64 [s1 + 0x88]\n 20228: a1 = 0 if a2 != 0\n 20230: a1 = 0 if a0 != 0\n 20232: jump @610 if a1 == 0\n      : @597 (gas: 11)\n 20236: a1 = a3 & 0xffffffffffffff00\n 20240: i32 a0 = a4 + 0x20\n 20243: a3 = u64 [s1 + 0x20]\n 20246: u64 [s1 + 0xa8] = a3\n 20250: u64 [s1 + 0xa0] = a1\n 20254: a1 = u64 [s1 + 0x28]\n 20257: u64 [s1 + 0xb0] = a1\n 20261: a1 = s1 + 0xa0\n 20265: a3 = u64 [s1 + 0x30]\n 20268: u64 [s1 + 0xb8] = a3\n 20272: ra = 612, jump @19\n      : @598 [@dyn 306] (gas: 26)\n 20278: ra = 0\n 20280: t1 = 0\n 20282: t0 = 0\n 20284: a0 = u64 [s1 + 0x48]\n 20287: a1 = u64 [s1 + 0x40]\n 20290: a0 = a0 | a1\n 20293: a1 = u64 [s1 + 0x58]\n 20296: a2 = u64 [s1 + 0x50]\n 20299: a1 = a1 | a2\n 20302: a0 = a0 | a1\n 20305: a1 = u64 [s1 + 0x80]\n 20309: a3 = a1 + 0x20\n 20312: a1 = a3 <u a1\n 20315: a2 = u64 [s1 + 0x88]\n 20319: a4 = a2 + a1\n 20322: a2 = a4 <u a2\n 20325: a2 = a1 if a1 == 0\n 20328: a1 = u64 [s1 + 0x98]\n 20332: a5 = a1 + a2\n 20335: a1 = a5 <u a1\n 20338: a2 = u64 [s1 + 0x90]\n 20342: a1 = a1 + a2\n 20345: u64 [s1 + 0x38] = a1\n 20348: a0 = a0 >u 0\n 20350: t2 = a0 << 0x5\n 20353: jump @609\n      : @599 (gas: 12)\n 20356: a0 = u64 [s1 + 0x38]\n 20359: a2 = s1 + 0x100\n 20363: u64 [a2] = a0\n 20365: a0 = u64 [s1 + 0x60]\n 20368: u64 [a2 + 0x8] = a0\n 20371: a0 = u64 [s1 + 0x68]\n 20374: u64 [a2 + 0x10] = a0\n 20377: a1 = s1 + 0x100\n 20381: a0 = u64 [s1 + 0x70]\n 20384: u64 [a2 + 0x18] = a0\n 20387: a0 = 0\n 20389: ra = 614, jump @19\n      : @600 [@dyn 307] (gas: 6)\n 20395: a0 = sp + 0xffffffffffffffe0\n 20398: a0 = a0 & 0xffffffffffffffe0\n 20401: u64 [s1 + 0x30] = a0\n 20404: sp = a0\n 20406: a1 = i32 [0x20064]\n 20411: jump @602 if a1 >u 31\n      : @601 (gas: 2)\n 20415: u32 [0x20064] = 0x20\n 20421: fallthrough\n      : @602 (gas: 49)\n 20422: a0 = sp + 0xffffffffffffffe0\n 20425: a2 = a0 & 0xffffffffffffffe0\n 20428: u64 [s1 + 0x78] = a2\n 20431: sp = a2\n 20433: a0 = 0x20070\n 20438: i32 a0 = a0 + 0\n 20440: i32 a2 = a2 + 0\n 20442: a1 = 0x20\n 20445: ecalli 6 // 'hash_keccak_256'\n 20447: a5 = 0\n 20449: ra = 0\n 20451: t1 = 0\n 20453: t0 = 0\n 20455: a0 = u64 [s1 + 0x80]\n 20459: a1 = a0 + 0x20\n 20462: u64 [s1 + 0x28] = a1\n 20465: a0 = a1 <u a0\n 20468: a1 = u64 [s1 + 0x88]\n 20472: a2 = a1 + a0\n 20475: u64 [s1 + 0x20] = a2\n 20478: a1 = a2 <u a1\n 20481: a1 = a0 if a0 == 0\n 20484: a0 = u64 [s1 + 0x98]\n 20488: a1 = a1 + a0\n 20491: u64 [s1 + 0x18] = a1\n 20494: a0 = a1 <u a0\n 20497: a1 = u64 [s1 + 0x90]\n 20501: a0 = a0 + a1\n 20504: u64 [s1 + 0x38] = a0\n 20507: a3 = u64 [s1 + 0x78]\n 20510: a0 = u64 [a3 + 0x18]\n 20513: a1 = u64 [a3 + 0x10]\n 20516: a2 = u64 [a3 + 0x8]\n 20519: a3 = u64 [a3]\n 20521: a0 = reverse a0\n 20523: a4 = reverse a1\n 20525: t2 = reverse a2\n 20527: a2 = reverse a3\n 20529: a1 = u64 [s1 + 0x30]\n 20532: a3 = a2\n 20534: u64 [a1 + 0x18] = a2\n 20537: a2 = t2\n 20539: u64 [s1 + 0x60] = a2\n 20542: u64 [a1 + 0x10] = a2\n 20545: u64 [s1 + 0x70] = a4\n 20548: u64 [a1 + 0x8] = a4\n 20551: a2 = a0\n 20553: u64 [a1] = a0\n 20555: fallthrough\n      : @603 (gas: 19)\n 20556: u64 [s1 + 0x68] = a3\n 20559: u64 [s1 + 0x78] = a2\n 20562: a0 = u64 [s1 + 0x40]\n 20565: a0 = a5 <u a0\n 20568: a2 = u64 [s1 + 0x50]\n 20571: a3 = ra ^ a2\n 20574: a2 = ra <u a2\n 20577: a2 = a0 if a3 == 0\n 20580: a4 = u64 [s1 + 0x48]\n 20583: a0 = t1 <u a4\n 20586: a3 = u64 [s1 + 0x58]\n 20589: t2 = a5\n 20591: a5 = t0 ^ a3\n 20594: a3 = t0 <u a3\n 20597: a3 = a0 if a5 == 0\n 20600: a0 = t1 ^ a4\n 20603: a0 = a0 | a5\n 20606: a3 = a2 if a0 == 0\n 20609: jump @608 if a3 == 0\n      : @604 (gas: 6)\n 20613: a0 = s1 + 0xe0\n 20617: u64 [s1 + 0x98] = t0\n 20621: u64 [s1 + 0x90] = t1\n 20625: u64 [s1 + 0x88] = ra\n 20629: u64 [s1 + 0x80] = t2\n 20633: ra = 616, jump @21\n      : @605 [@dyn 308] (gas: 30)\n 20639: a1 = u64 [s1 + 0x28]\n 20642: a0 = u64 [s1 + 0x80]\n 20646: a0 = a0 + a1\n 20649: a1 = a0 <u a1\n 20652: a4 = u64 [s1 + 0x20]\n 20655: a2 = u64 [s1 + 0x88]\n 20659: a2 = a2 + a4\n 20662: a2 = a2 + a1\n 20665: a3 = a2 ^ a4\n 20668: a4 = a2 <u a4\n 20671: a4 = a1 if a3 == 0\n 20674: a3 = u64 [s1 + 0x18]\n 20677: a1 = u64 [s1 + 0x90]\n 20681: a1 = a1 + a3\n 20684: t0 = a1 <u a3\n 20687: a5 = u64 [s1 + 0x38]\n 20690: a3 = u64 [s1 + 0x98]\n 20694: a5 = a5 + a3\n 20697: a3 = a5 + t0\n 20700: a4 = a4 + a1\n 20703: a1 = a4 <u a1\n 20706: a1 = a1 + a3\n 20709: a1 = a1 | a2\n 20712: a2 = a0 | a4\n 20715: a2 = a2 | a1\n 20718: a1 = a1 | a4\n 20721: a2 = a2 >> 0x20\n 20724: a1 = a1 << 0x20\n 20727: a1 = a1 | a2\n 20730: jump @610 if a1 != 0\n      : @606 (gas: 10)\n 20734: a2 = u64 [s1 + 0xf8]\n 20738: a1 = u64 [s1 + 0xf0]\n 20742: a3 = u64 [s1 + 0xe8]\n 20746: a4 = u64 [s1 + 0xe0]\n 20750: u64 [s1 + 0xc0] = a4\n 20754: u64 [s1 + 0xc8] = a3\n 20758: u64 [s1 + 0xd0] = a1\n 20762: a1 = s1 + 0xc0\n 20766: u64 [s1 + 0xd8] = a2\n 20770: ra = 618, jump @19\n      : @607 [@dyn 309] (gas: 37)\n 20776: a5 = u64 [s1 + 0x78]\n 20779: a5 = a5 + 0x1\n 20782: a0 = a5 <u 0x1\n 20785: a3 = u64 [s1 + 0x70]\n 20788: a3 = a3 + a0\n 20791: a0 = a5 | a3\n 20794: a0 = a0 <u 0x1\n 20797: a1 = u64 [s1 + 0x60]\n 20800: t1 = a1 + a0\n 20803: a1 = t1 <u a1\n 20806: a0 = u64 [s1 + 0x68]\n 20809: a0 = a0 + a1\n 20812: a1 = u64 [s1 + 0x80]\n 20816: t2 = a1 + 0x20\n 20819: a2 = t2 <u a1\n 20822: a1 = u64 [s1 + 0x88]\n 20826: ra = a1 + a2\n 20829: a4 = ra <u a1\n 20832: a4 = a2 if a2 == 0\n 20835: a1 = u64 [s1 + 0x90]\n 20839: a4 = a4 + a1\n 20842: a2 = a4 <u a1\n 20845: t0 = u64 [s1 + 0x98]\n 20849: t0 = t0 + a2\n 20852: u64 [s1 + 0x70] = a3\n 20855: a1 = u64 [s1 + 0x30]\n 20858: u64 [a1 + 0x8] = a3\n 20861: a2 = a5\n 20863: u64 [a1] = a5\n 20865: a5 = t1\n 20867: u64 [a1 + 0x10] = a5\n 20870: a3 = a0\n 20872: u64 [a1 + 0x18] = a0\n 20875: u64 [s1 + 0x60] = a5\n 20878: a5 = t2\n 20880: t1 = a4\n 20882: jump @603\n      : @608 (gas: 4)\n 20885: a3 = u64 [s1 + 0x28]\n 20888: a4 = u64 [s1 + 0x20]\n 20891: a5 = u64 [s1 + 0x18]\n 20894: fallthrough\n      : @609 (gas: 26)\n 20895: a0 = a3 + t2\n 20898: a1 = a0 <u a3\n 20901: a2 = a4 + ra\n 20904: a2 = a2 + a1\n 20907: a3 = a2 ^ a4\n 20910: a4 = a2 <u a4\n 20913: a4 = a1 if a3 == 0\n 20916: a1 = a5 + t1\n 20919: a4 = a4 + a1\n 20922: a3 = a4 <u a1\n 20925: a1 = a1 <u a5\n 20928: a5 = u64 [s1 + 0x38]\n 20931: a5 = a5 + t0\n 20934: a1 = a1 + a5\n 20937: a1 = a1 + a3\n 20940: a3 = u64 [s1 + 0x10]\n 20943: u64 [a3] = a0\n 20945: u64 [a3 + 0x8] = a2\n 20948: u64 [a3 + 0x10] = a4\n 20951: u64 [a3 + 0x18] = a1\n 20954: sp = s0 + 0xfffffffffffffe20\n 20958: ra = u64 [sp + 0x1d8]\n 20962: s0 = u64 [sp + 0x1d0]\n 20966: s1 = u64 [sp + 0x1c8]\n 20970: sp = sp + 0x1e0\n 20974: ret\n      : @610 (gas: 1)\n 20976: trap\n      : @611 (gas: 19)\n 20977: sp = sp + 0xffffffffffffff90\n 20980: u64 [sp + 0x68] = ra\n 20983: u64 [sp + 0x60] = s0\n 20986: s0 = sp + 0x70\n 20989: sp = sp & 0xfffffffffffffff0\n 20992: a3 = u64 [a0 + 0x18]\n 20995: a2 = u64 [a0 + 0x10]\n 20998: t1 = u64 [a0]\n 21000: a0 = u64 [a0 + 0x8]\n 21003: a4 = a3 >u 0\n 21005: a5 = a2 >u 0\n 21007: a5 = a4 if a3 != 0\n 21010: t0 = a0 >u 0\n 21012: a4 = t1 <u 0xffffffffffffffa0\n 21015: a4 = a4 ^ 0x1\n 21018: a4 = t0 if a0 != 0\n 21021: a1 = a2 | a3\n 21024: a4 = a5 if a1 != 0\n 21027: jump @614 if a4 != 0\n      : @612 (gas: 15)\n 21030: a1 = t1 + 0x60\n 21033: a4 = a1 <u t1\n 21036: a5 = a0 + a4\n 21039: a0 = a5 <u a0\n 21042: a0 = a4 if a4 == 0\n 21045: a0 = a0 + a2\n 21048: a2 = a0 <u a2\n 21051: a2 = a2 + a3\n 21054: u64 [sp + 0x40] = a1\n 21057: u64 [sp + 0x48] = a5\n 21060: u64 [sp + 0x50] = a0\n 21063: a0 = 0x40\n 21066: a1 = sp + a0\n 21069: u64 [sp + 0x58] = a2\n 21072: ra = 620, jump @19\n      : @613 [@dyn 310] (gas: 5)\n 21078: sp = s0 + 0xffffffffffffff90\n 21081: ra = u64 [sp + 0x68]\n 21084: s0 = u64 [sp + 0x60]\n 21087: sp = sp + 0x70\n 21090: ret\n      : @614 (gas: 1)\n 21092: t0 = 622, jump @739\n      : @615 [@dyn 311] (gas: 1)\n 21098: ra = 624, jump @19\n      : @616 [@dyn 312] (gas: 7)\n 21104: u64 [sp + 24] = 0\n 21107: u64 [sp + 16] = 0\n 21110: u64 [sp + 0] = 0x41\n 21113: a0 = 0x4\n 21116: a1 = sp\n 21118: u64 [sp + 8] = 0\n 21121: ra = 626, jump @19\n      : @617 [@dyn 313] (gas: 2)\n 21127: a1 = i32 [0x20064]\n 21132: jump @619 if a1 >u 63\n      : @618 (gas: 2)\n 21136: u32 [0x20064] = 0x40\n 21142: fallthrough\n      : @619 (gas: 7)\n 21143: a1 = 0x20070\n 21148: i32 a1 = a1 + 0\n 21150: a0 = 0x1\n 21153: a2 = 0x24\n 21156: ra = 0x274\n 21160: ecalli 7 // 'seal_return'\n 21162: fallthrough\n      : @620 [@dyn 314] (gas: 46)\n 21163: sp = sp + 0xffffffffffffff70\n 21167: u64 [sp + 0x88] = ra\n 21171: u64 [sp + 0x80] = s0\n 21175: u64 [sp + 0x78] = s1\n 21178: s0 = sp + 0x90\n 21182: sp = sp & 0xfffffffffffffff0\n 21185: t0 = a0\n 21187: a2 = u64 [a1]\n 21189: t2 = u64 [a0 + 0x8]\n 21192: a5 = u64 [a1 + 0x8]\n 21195: t1 = u64 [a0]\n 21197: a3 = a2 + 0x1f\n 21200: ra = a3 <u a2\n 21203: a2 = a5 + ra\n 21206: a3 = a3 & 0xffffffffffffffe0\n 21209: u64 [sp + 0x8] = t1\n 21212: t1 = t1 + a3\n 21215: a4 = t1 <u a3\n 21218: a3 = a2 + t2\n 21221: a3 = a3 + a4\n 21224: s1 = a3 ^ a2\n 21227: a0 = a3 <u a2\n 21230: a0 = a4 if s1 == 0\n 21233: a4 = u64 [t0 + 0x18]\n 21236: a5 = a2 <u a5\n 21239: s1 = u64 [a1 + 0x10]\n 21242: t0 = u64 [t0 + 0x10]\n 21245: a1 = u64 [a1 + 0x18]\n 21248: a5 = ra if ra == 0\n 21251: a5 = a5 + s1\n 21254: s1 = a5 <u s1\n 21257: a2 = a5 + t0\n 21260: a0 = a0 + a2\n 21263: a5 = a2 <u a5\n 21266: a2 = a0 <u a2\n 21269: a1 = a1 + a4\n 21272: a1 = a1 + s1\n 21275: a1 = a1 + a5\n 21278: a5 = a1 + a2\n 21281: a1 = a5 >u 0\n 21283: a2 = a0 >u 0\n 21285: a2 = a1 if a5 != 0\n 21288: a1 = a0 | a5\n 21291: s1 = a3 >u 0\n 21293: s1 = a2 if a1 != 0\n 21296: jump @624 if s1 != 0\n      : @621 (gas: 13)\n 21299: a1 = u64 [sp + 0x8]\n 21302: a1 = t1 <u a1\n 21305: a2 = a3 ^ t2\n 21308: s1 = a3 <u t2\n 21311: s1 = a1 if a2 == 0\n 21314: a1 = a0 <u t0\n 21317: a2 = a5 ^ a4\n 21320: a4 = a5 <u a4\n 21323: a4 = a1 if a2 == 0\n 21326: a1 = a0 ^ t0\n 21329: a1 = a1 | a2\n 21332: a4 = s1 if a1 == 0\n 21335: jump @624 if a4 != 0\n      : @622 (gas: 7)\n 21338: u64 [sp + 0x50] = t1\n 21341: u64 [sp + 0x58] = a3\n 21344: u64 [sp + 0x60] = a0\n 21347: a0 = 0x40\n 21350: a1 = sp + 0x50\n 21353: u64 [sp + 0x68] = a5\n 21356: ra = 630, jump @19\n      : @623 [@dyn 315] (gas: 6)\n 21362: sp = s0 + 0xffffffffffffff70\n 21366: ra = u64 [sp + 0x88]\n 21370: s0 = u64 [sp + 0x80]\n 21374: s1 = u64 [sp + 0x78]\n 21377: sp = sp + 0x90\n 21381: ret\n      : @624 (gas: 8)\n 21383: u64 [sp + 64] = 0\n 21386: u64 [sp + 56] = 0\n 21389: u64 [sp + 48] = 0\n 21392: a0 = 0x4e487b7100000000\n 21402: a1 = sp + 0x30\n 21405: u64 [sp + 0x48] = a0\n 21408: a0 = 0\n 21410: ra = 632, jump @19\n      : @625 [@dyn 316] (gas: 7)\n 21416: u64 [sp + 40] = 0\n 21419: u64 [sp + 32] = 0\n 21422: u64 [sp + 16] = 0x41\n 21426: a0 = 0x4\n 21429: a1 = sp + 0x10\n 21432: u64 [sp + 24] = 0\n 21435: ra = 634, jump @19\n      : @626 [@dyn 317] (gas: 2)\n 21441: a1 = i32 [0x20064]\n 21446: jump @628 if a1 >u 63\n      : @627 (gas: 2)\n 21450: u32 [0x20064] = 0x40\n 21456: fallthrough\n      : @628 (gas: 7)\n 21457: a1 = 0x20070\n 21462: i32 a1 = a1 + 0\n 21464: a0 = 0x1\n 21467: a2 = 0x24\n 21470: ra = 0x27c\n 21474: ecalli 7 // 'seal_return'\n 21476: fallthrough\n      : @629 [@dyn 318] (gas: 21)\n 21477: sp = sp + 0xffffffffffffff10\n 21481: u64 [sp + 0xe8] = ra\n 21485: u64 [sp + 0xe0] = s0\n 21489: u64 [sp + 0xd8] = s1\n 21493: s0 = sp + 0xf0\n 21497: sp = sp & 0xfffffffffffffff0\n 21500: a5 = u64 [a1 + 0x10]\n 21503: a4 = u64 [a1 + 0x18]\n 21506: a3 = u64 [a1 + 0x8]\n 21509: a1 = u64 [a1]\n 21511: u64 [sp + 0x28] = a3\n 21514: u64 [sp + 0x18] = a4\n 21517: a4 = a4 | a3\n 21520: a3 = a1 | a5\n 21523: a3 = a3 | a4\n 21526: a3 = a3 >> 0x20\n 21529: u64 [sp + 0x20] = a5\n 21532: a4 = a4 | a5\n 21535: a4 = a4 << 0x20\n 21538: a3 = a3 | a4\n 21541: jump @642 if a3 != 0\n      : @630 (gas: 11)\n 21545: u64 [sp + 0x8] = a0\n 21548: a0 = u64 [a2 + 0x18]\n 21551: u64 [sp + 0x68] = a0\n 21554: s1 = u64 [a2 + 0x10]\n 21557: a0 = u64 [a2 + 0x8]\n 21560: u64 [sp + 0x60] = a0\n 21563: a0 = u64 [a2]\n 21565: u64 [sp + 0x58] = a0\n 21568: a0 = sp + 0xb0\n 21572: u64 [sp + 0x10] = a1\n 21575: ra = 638, jump @17\n      : @631 [@dyn 319] (gas: 12)\n 21581: a0 = u64 [sp + 0x58]\n 21584: a2 = a0 | s1\n 21587: a1 = u64 [sp + 0x68]\n 21590: a3 = u64 [sp + 0x60]\n 21593: a1 = a1 | a3\n 21596: a2 = a2 | a1\n 21599: a2 = a2 >> 0x20\n 21602: u64 [sp + 0x50] = s1\n 21605: a1 = a1 | s1\n 21608: a1 = a1 << 0x20\n 21611: a1 = a1 | a2\n 21614: jump @642 if a1 != 0\n      : @632 (gas: 15)\n 21618: a2 = u64 [sp + 0xc8]\n 21622: a3 = u64 [sp + 0xc0]\n 21626: a4 = u64 [sp + 0xb8]\n 21630: a1 = u64 [sp + 0xb0]\n 21634: u64 [sp + 0x30] = a1\n 21637: u64 [sp + 0x90] = a1\n 21641: u64 [sp + 0x38] = a4\n 21644: u64 [sp + 0x98] = a4\n 21648: u64 [sp + 0x40] = a3\n 21651: u64 [sp + 0xa0] = a3\n 21655: a1 = sp + 0x90\n 21659: u64 [sp + 0x48] = a2\n 21662: u64 [sp + 0xa8] = a2\n 21666: s1 = a0\n 21668: ra = 640, jump @19\n      : @633 [@dyn 320] (gas: 9)\n 21674: a0 = u64 [sp + 0x68]\n 21677: a1 = u64 [sp + 0x50]\n 21680: a1 = a1 | a0\n 21683: a0 = 0xffffffe0\n 21693: a2 = s1 <u a0\n 21696: a3 = u64 [sp + 0x60]\n 21699: a2 = 0 if a3 != 0\n 21701: a2 = 0 if a1 != 0\n 21703: jump @642 if a2 == 0\n      : @634 (gas: 9)\n 21707: a1 = u64 [sp + 0x20]\n 21710: a2 = u64 [sp + 0x18]\n 21713: a1 = a1 | a2\n 21716: a2 = u64 [sp + 0x10]\n 21719: a0 = a2 <u a0\n 21722: a3 = u64 [sp + 0x28]\n 21725: a0 = 0 if a3 != 0\n 21727: a0 = 0 if a1 != 0\n 21729: jump @642 if a0 == 0\n      : @635 (gas: 13)\n 21733: a5 = s1\n 21735: s1 = u64 [sp + 0x30]\n 21738: a3 = u64 [sp + 0x40]\n 21741: a0 = s1 | a3\n 21744: a1 = u64 [sp + 0x48]\n 21747: a4 = u64 [sp + 0x38]\n 21750: a1 = a1 | a4\n 21753: a0 = a0 | a1\n 21756: a0 = a0 >> 0x20\n 21759: a1 = a1 | a3\n 21762: a1 = a1 << 0x20\n 21765: a0 = a0 | a1\n 21768: jump @642 if a0 != 0\n      : @636 (gas: 5)\n 21772: i32 a0 = a5 + 0x20\n 21775: i32 a1 = a2 + 0x20\n 21778: u64 [sp + 0x28] = a1\n 21781: a1 = s1\n 21783: ra = 642, jump @26\n      : @637 [@dyn 321] (gas: 4)\n 21789: u64 [sp + 0x20] = a0\n 21792: a0 = u64 [sp + 0x28]\n 21795: a1 = s1\n 21797: ra = 644, jump @26\n      : @638 [@dyn 322] (gas: 4)\n 21803: a1 = a0\n 21805: a0 = u64 [sp + 0x20]\n 21808: a2 = s1\n 21810: ra = 646, jump @0\n      : @639 [@dyn 323] (gas: 27)\n 21816: a0 = u64 [sp + 0x58]\n 21819: a0 = a0 + s1\n 21822: a1 = a0 <u s1\n 21825: a2 = u64 [sp + 0x60]\n 21828: a4 = u64 [sp + 0x38]\n 21831: a2 = a2 + a4\n 21834: a2 = a2 + a1\n 21837: a3 = a2 ^ a4\n 21840: a4 = a2 <u a4\n 21843: a4 = a1 if a3 == 0\n 21846: a1 = u64 [sp + 0x50]\n 21849: a3 = u64 [sp + 0x40]\n 21852: a1 = a1 + a3\n 21855: a3 = a1 <u a3\n 21858: a5 = u64 [sp + 0x68]\n 21861: s1 = u64 [sp + 0x48]\n 21864: a5 = a5 + s1\n 21867: a3 = a3 + a5\n 21870: a4 = a4 + a1\n 21873: a1 = a4 <u a1\n 21876: a1 = a1 + a3\n 21879: a1 = a1 | a4\n 21882: a3 = 0xffffffe0\n 21892: a3 = a0 <u a3\n 21895: a3 = 0 if a2 != 0\n 21897: a3 = 0 if a1 != 0\n 21899: jump @642 if a3 == 0\n      : @640 (gas: 7)\n 21903: i32 a0 = a0 + 0x20\n 21906: u64 [sp + 136] = 0\n 21910: u64 [sp + 128] = 0\n 21914: u64 [sp + 120] = 0\n 21917: a1 = sp + 0x70\n 21920: u64 [sp + 112] = 0\n 21923: ra = 648, jump @19\n      : @641 [@dyn 324] (gas: 35)\n 21929: s1 = u64 [sp + 0x30]\n 21932: s1 = s1 + 0x1f\n 21935: a0 = 0x1ffffffe0\n 21945: a0 = a0 & s1\n 21948: a1 = u64 [sp + 0x58]\n 21951: a0 = a0 + a1\n 21954: a1 = a0 <u a1\n 21957: a3 = u64 [sp + 0x60]\n 21960: a2 = a3 + a1\n 21963: a3 = a2 <u a3\n 21966: a3 = a1 if a1 == 0\n 21969: a1 = u64 [sp + 0x50]\n 21972: a3 = a3 + a1\n 21975: a1 = a3 <u a1\n 21978: a4 = u64 [sp + 0x68]\n 21981: a1 = a1 + a4\n 21984: a4 = a0 + 0x20\n 21987: a0 = a4 <u a0\n 21990: a5 = a2 + a0\n 21993: a2 = a5 <u a2\n 21996: a2 = a0 if a0 == 0\n 21999: a2 = a2 + a3\n 22002: a0 = a2 <u a3\n 22005: a0 = a0 + a1\n 22008: a1 = u64 [sp + 0x8]\n 22011: u64 [a1] = a4\n 22013: u64 [a1 + 0x8] = a5\n 22016: u64 [a1 + 0x10] = a2\n 22019: u64 [a1 + 0x18] = a0\n 22022: sp = s0 + 0xffffffffffffff10\n 22026: ra = u64 [sp + 0xe8]\n 22030: s0 = u64 [sp + 0xe0]\n 22034: s1 = u64 [sp + 0xd8]\n 22038: sp = sp + 0xf0\n 22042: ret\n      : @642 (gas: 1)\n 22044: trap\n      : @643 (gas: 22)\n 22045: sp = sp + 0xfffffffffffffdd0\n 22049: a3 = sp + 0x200\n 22053: u64 [a3 + 0x28] = ra\n 22056: u64 [a3 + 0x20] = s0\n 22059: u64 [a3 + 0x18] = s1\n 22062: s0 = sp + 0x230\n 22066: sp = sp & 0xfffffffffffffff0\n 22069: s1 = u64 [a1 + 0x10]\n 22072: a3 = u64 [a1 + 0x18]\n 22075: a5 = u64 [a1 + 0x8]\n 22078: a4 = u64 [a1]\n 22080: u64 [sp + 0x48] = a3\n 22083: u64 [sp + 0x68] = a5\n 22086: a1 = a5 | a3\n 22089: a3 = a4 | s1\n 22092: a3 = a3 | a1\n 22095: a3 = a3 >> 0x20\n 22098: u64 [sp + 0x38] = s1\n 22101: a1 = a1 | s1\n 22104: a1 = a1 << 0x20\n 22107: a1 = a1 | a3\n 22110: jump @660 if a1 != 0\n      : @644 (gas: 16)\n 22114: u64 [sp + 0x18] = a0\n 22117: a0 = u64 [a2 + 0x18]\n 22120: u64 [sp + 0x40] = a0\n 22123: s1 = u64 [a2 + 0x10]\n 22126: a0 = u64 [a2 + 0x8]\n 22129: u64 [sp + 0x58] = a0\n 22132: a0 = u64 [a2]\n 22134: u64 [sp + 0x60] = a0\n 22137: u64 [sp + 520] = 0\n 22141: u64 [sp + 512] = 0\n 22145: u64 [sp + 504] = 0\n 22149: a1 = sp + 0x1f0\n 22153: u64 [sp + 496] = 0x20\n 22158: u64 [sp + 0x50] = a4\n 22161: a0 = a4\n 22163: ra = 650, jump @19\n      : @645 [@dyn 325] (gas: 12)\n 22169: a1 = u64 [sp + 0x60]\n 22172: a0 = a1 | s1\n 22175: a2 = u64 [sp + 0x40]\n 22178: a3 = u64 [sp + 0x58]\n 22181: a2 = a2 | a3\n 22184: a0 = a0 | a2\n 22187: a0 = a0 >> 0x20\n 22190: u64 [sp + 0x28] = s1\n 22193: a2 = a2 | s1\n 22196: a2 = a2 << 0x20\n 22199: a0 = a0 | a2\n 22202: jump @660 if a0 != 0\n      : @646 (gas: 2)\n 22206: a0 = sp + 0x1d0\n 22210: ra = 652, jump @17\n      : @647 [@dyn 326] (gas: 11)\n 22216: a0 = u64 [sp + 0x48]\n 22219: a2 = u64 [sp + 0x38]\n 22222: a2 = a2 | a0\n 22225: s1 = 0xffffffe0\n 22235: a4 = u64 [sp + 0x50]\n 22238: a0 = a4 <u s1\n 22241: a1 = u64 [sp + 0x68]\n 22244: a0 = 0 if a1 != 0\n 22246: u64 [sp + 0x30] = a2\n 22249: a0 = 0 if a2 != 0\n 22251: jump @660 if a0 == 0\n      : @648 (gas: 12)\n 22255: a0 = u64 [sp + 0x1e0]\n 22259: a1 = u64 [sp + 0x1d8]\n 22263: a2 = u64 [sp + 0x1d0]\n 22267: a0 = a0 << 0x20\n 22270: a3 = a0 >> 0x20\n 22273: i32 a0 = a4 + 0x20\n 22276: u64 [sp + 456] = 0\n 22280: u64 [sp + 0x1b0] = a2\n 22284: u64 [sp + 0x1b8] = a1\n 22288: a1 = sp + 0x1b0\n 22292: u64 [sp + 0x1c0] = a3\n 22296: ra = 654, jump @19\n      : @649 [@dyn 327] (gas: 10)\n 22302: a0 = u64 [sp + 0x40]\n 22305: a3 = u64 [sp + 0x28]\n 22308: a3 = a3 | a0\n 22311: a1 = u64 [sp + 0x60]\n 22314: a0 = a1 <u s1\n 22317: a2 = u64 [sp + 0x58]\n 22320: a0 = 0 if a2 != 0\n 22322: u64 [sp + 0x40] = a3\n 22325: a0 = 0 if a3 != 0\n 22327: jump @660 if a0 == 0\n      : @650 (gas: 3)\n 22331: i32 a1 = a1 + 0x20\n 22334: a0 = sp + 0x190\n 22338: ra = 656, jump @17\n      : @651 [@dyn 328] (gas: 9)\n 22344: a0 = 0xffffffc0\n 22354: a2 = u64 [sp + 0x50]\n 22357: u64 [sp + 0x28] = a0\n 22360: a0 = a2 <u a0\n 22363: a1 = u64 [sp + 0x68]\n 22366: a0 = 0 if a1 != 0\n 22368: a1 = u64 [sp + 0x30]\n 22371: a0 = 0 if a1 != 0\n 22373: jump @660 if a0 == 0\n      : @652 (gas: 16)\n 22377: a0 = u64 [sp + 0x1a8]\n 22381: u64 [sp] = a0\n 22383: a0 = u64 [sp + 0x1a0]\n 22387: u64 [sp + 0x8] = a0\n 22390: a0 = u64 [sp + 0x198]\n 22394: u64 [sp + 0x10] = a0\n 22397: a0 = u64 [sp + 0x190]\n 22401: u64 [sp + 0x20] = a0\n 22404: i32 a0 = a2 + 0x40\n 22407: u64 [sp + 392] = 0\n 22411: u64 [sp + 384] = 0\n 22415: u64 [sp + 368] = 0x60\n 22420: a1 = sp + 0x170\n 22424: u64 [sp + 376] = 0\n 22428: s1 = a2\n 22430: ra = 658, jump @19\n      : @653 [@dyn 329] (gas: 27)\n 22436: a0 = s1 + 0x80\n 22440: a1 = a0 <u s1\n 22443: a3 = u64 [sp + 0x68]\n 22446: a2 = a3 + a1\n 22449: a3 = a2 <u a3\n 22452: a3 = a1 if a1 == 0\n 22455: s1 = u64 [sp + 0x38]\n 22458: a3 = a3 + s1\n 22461: a1 = a3 <u s1\n 22464: a4 = u64 [sp + 0x48]\n 22467: a4 = a4 + a1\n 22470: u64 [sp + 0x118] = a2\n 22474: u64 [sp + 0x110] = a0\n 22478: a0 = u64 [sp]\n 22480: u64 [sp + 0x148] = a0\n 22484: a0 = u64 [sp + 0x8]\n 22487: u64 [sp + 0x140] = a0\n 22491: a0 = u64 [sp + 0x10]\n 22494: u64 [sp + 0x138] = a0\n 22498: a0 = u64 [sp + 0x20]\n 22501: u64 [sp + 0x130] = a0\n 22505: u64 [sp + 0x120] = a3\n 22509: a0 = sp + 0x150\n 22513: a1 = sp + 0x130\n 22517: a2 = sp + 0x110\n 22521: u64 [sp + 0x128] = a4\n 22525: ra = 660, jump @629\n      : @654 [@dyn 330] (gas: 8)\n 22531: a1 = u64 [sp + 0x60]\n 22534: a0 = u64 [sp + 0x28]\n 22537: a0 = a1 <u a0\n 22540: a2 = u64 [sp + 0x58]\n 22543: a0 = 0 if a2 != 0\n 22545: a2 = u64 [sp + 0x40]\n 22548: a0 = 0 if a2 != 0\n 22550: jump @660 if a0 == 0\n      : @655 (gas: 11)\n 22554: a0 = u64 [sp + 0x168]\n 22558: u64 [sp + 0x20] = a0\n 22561: a0 = u64 [sp + 0x160]\n 22565: u64 [sp + 0x28] = a0\n 22568: a0 = u64 [sp + 0x158]\n 22572: u64 [sp + 0x40] = a0\n 22575: a0 = u64 [sp + 0x150]\n 22579: u64 [sp + 0x58] = a0\n 22582: i32 a1 = a1 + 0x40\n 22585: a0 = sp + 0xf0\n 22589: ra = 662, jump @17\n      : @656 [@dyn 331] (gas: 8)\n 22595: a0 = 0xffffffa0\n 22605: t0 = u64 [sp + 0x50]\n 22608: a0 = t0 <u a0\n 22611: a3 = u64 [sp + 0x68]\n 22614: a0 = 0 if a3 != 0\n 22616: a1 = u64 [sp + 0x30]\n 22619: a0 = 0 if a1 != 0\n 22621: jump @660 if a0 == 0\n      : @657 (gas: 48)\n 22625: a0 = u64 [sp + 0x108]\n 22629: u64 [sp + 0x60] = a0\n 22632: a0 = u64 [sp + 0x58]\n 22635: a1 = a0 <u t0\n 22638: a4 = a0\n 22640: a5 = u64 [sp + 0x40]\n 22643: a2 = a5 ^ a3\n 22646: a0 = a5 <u a3\n 22649: a0 = a1 if a2 == 0\n 22652: a2 = a5 - a3\n 22655: a3 = a2 - a1\n 22658: a2 = a4 - t0\n 22661: t1 = a2 + 0xffffffffffffffe0\n 22664: a4 = t1 <u a2\n 22667: a2 = a3 + a4\n 22670: a2 = a2 + 0xffffffffffffffff\n 22673: a5 = a2 ^ a3\n 22676: a3 = a2 <u a3\n 22679: a3 = a4 if a5 == 0\n 22682: a4 = u64 [sp + 0x100]\n 22686: u64 [sp + 0x68] = a4\n 22689: a4 = u64 [sp + 0x28]\n 22692: a1 = a4 - s1\n 22695: a5 = a4 <u s1\n 22698: s1 = u64 [sp + 0x48]\n 22701: a4 = u64 [sp + 0x20]\n 22704: s1 = a4 - s1\n 22707: s1 = s1 - a5\n 22710: a5 = a1 <u a0\n 22713: s1 = s1 - a5\n 22716: a4 = u64 [sp + 0xf8]\n 22720: u64 [sp + 0x38] = a4\n 22723: a4 = a1 - a0\n 22726: a0 = a4 <u 0x1\n 22729: s1 = s1 - a0\n 22732: a0 = u64 [sp + 0xf0]\n 22736: u64 [sp + 0x48] = a0\n 22739: a4 = a4 + 0xffffffffffffffff\n 22742: a3 = a3 + a4\n 22745: a0 = a3 <u a4\n 22748: s1 = s1 + a0\n 22751: i32 a0 = t0 + 0x60\n 22754: u64 [sp + 0xd0] = t1\n 22758: u64 [sp + 0xd8] = a2\n 22762: u64 [sp + 0xe0] = a3\n 22766: a1 = sp + 0xd0\n 22770: u64 [sp + 0xe8] = s1\n 22774: ra = 664, jump @19\n      : @658 [@dyn 332] (gas: 20)\n 22780: a0 = u64 [sp + 0x20]\n 22783: u64 [sp + 0x88] = a0\n 22787: a0 = u64 [sp + 0x28]\n 22790: u64 [sp + 0x80] = a0\n 22794: a0 = u64 [sp + 0x40]\n 22797: u64 [sp + 0x78] = a0\n 22800: a0 = u64 [sp + 0x58]\n 22803: u64 [sp + 0x70] = a0\n 22806: a0 = u64 [sp + 0x60]\n 22809: u64 [sp + 0xa8] = a0\n 22813: a0 = u64 [sp + 0x68]\n 22816: u64 [sp + 0xa0] = a0\n 22820: a0 = u64 [sp + 0x38]\n 22823: u64 [sp + 0x98] = a0\n 22827: a0 = sp + 0xb0\n 22831: a1 = sp + 0x90\n 22835: a2 = sp + 0x70\n 22838: a3 = u64 [sp + 0x48]\n 22841: u64 [sp + 0x90] = a3\n 22845: ra = 666, jump @629\n      : @659 [@dyn 333] (gas: 16)\n 22851: a0 = u64 [sp + 0xc0]\n 22855: a1 = u64 [sp + 0xc8]\n 22859: a2 = u64 [sp + 0xb0]\n 22863: a3 = u64 [sp + 0xb8]\n 22867: a4 = u64 [sp + 0x18]\n 22870: u64 [a4 + 0x10] = a0\n 22873: u64 [a4 + 0x18] = a1\n 22876: u64 [a4] = a2\n 22878: u64 [a4 + 0x8] = a3\n 22881: sp = s0 + 0xfffffffffffffdd0\n 22885: a0 = sp + 0x200\n 22889: ra = u64 [a0 + 0x28]\n 22892: s0 = u64 [a0 + 0x20]\n 22895: s1 = u64 [a0 + 0x18]\n 22898: sp = sp + 0x230\n 22902: ret\n      : @660 (gas: 1)\n 22904: trap\n      : @661 (gas: 23)\n 22905: sp = sp + 0xffffffffffffff00\n 22909: u64 [sp + 0xf8] = ra\n 22913: u64 [sp + 0xf0] = s0\n 22917: u64 [sp + 0xe8] = s1\n 22921: s0 = sp + 0x100\n 22925: sp = sp & 0xffffffffffffffe0\n 22928: s1 = sp\n 22930: u64 [s1 + 0x18] = a0\n 22933: a0 = u64 [a1]\n 22935: u64 [s1 + 0x28] = a0\n 22938: a0 = u64 [a1 + 0x8]\n 22941: u64 [s1 + 0x20] = a0\n 22944: a0 = u64 [a1 + 0x10]\n 22947: u64 [s1 + 0x30] = a0\n 22950: a0 = u64 [a1 + 0x18]\n 22953: u64 [s1 + 0x38] = a0\n 22956: u64 [s1 + 216] = 0\n 22960: u64 [s1 + 208] = 0\n 22964: u64 [s1 + 200] = 0\n 22968: u64 [s1 + 192] = 0x1\n 22973: a0 = s1 + 0xa0\n 22977: a1 = s1 + 0xc0\n 22981: ra = 668, jump @21\n      : @662 [@dyn 334] (gas: 20)\n 22987: a0 = u64 [s1 + 0xb8]\n 22991: t0 = u64 [s1 + 0xa0]\n 22995: a2 = u64 [s1 + 0xb0]\n 22999: a3 = u64 [s1 + 0xa8]\n 23003: a1 = u64 [s1 + 0x38]\n 23006: a4 = a0 ^ a1\n 23009: a1 = a1 <u a0\n 23012: a0 = u64 [s1 + 0x30]\n 23015: a5 = a0 <u a2\n 23018: a5 = a1 if a4 != 0\n 23021: a1 = u64 [s1 + 0x20]\n 23024: t1 = a3 ^ a1\n 23027: a3 = a1 <u a3\n 23030: a1 = u64 [s1 + 0x28]\n 23033: a1 = a1 <u t0\n 23036: a1 = a3 if t1 != 0\n 23039: a0 = a0 ^ a2\n 23042: a0 = a0 | a4\n 23045: a1 = a5 if a0 != 0\n 23048: jump @667 if a1 == 0\n      : @663 (gas: 7)\n 23052: u64 [s1 + 88] = 0\n 23055: u64 [s1 + 80] = 0\n 23058: u64 [s1 + 72] = 0\n 23061: a1 = s1 + 0x40\n 23064: u64 [s1 + 64] = 0x1\n 23068: a0 = 0\n 23070: ra = 670, jump @19\n      : @664 [@dyn 335] (gas: 2)\n 23076: a1 = i32 [0x20064]\n 23081: jump @666 if a1 >u 31\n      : @665 (gas: 2)\n 23085: u32 [0x20064] = 0x20\n 23091: fallthrough\n      : @666 (gas: 52)\n 23092: a0 = sp + 0xffffffffffffffe0\n 23095: a2 = a0 & 0xffffffffffffffe0\n 23098: u64 [s1 + 0x10] = a2\n 23101: sp = a2\n 23103: a0 = 0x20070\n 23108: i32 a0 = a0 + 0\n 23110: i32 a2 = a2 + 0\n 23112: a1 = 0x20\n 23115: ecalli 6 // 'hash_keccak_256'\n 23117: a3 = u64 [s1 + 0x10]\n 23120: a0 = u64 [a3]\n 23122: a1 = u64 [a3 + 0x8]\n 23125: a2 = u64 [a3 + 0x18]\n 23128: a3 = u64 [a3 + 0x10]\n 23131: t0 = reverse a0\n 23133: a1 = reverse a1\n 23135: a2 = reverse a2\n 23137: a3 = reverse a3\n 23139: a4 = u64 [s1 + 0x20]\n 23142: a4 = a4 + a3\n 23145: t1 = u64 [s1 + 0x28]\n 23148: t1 = t1 + a2\n 23151: a2 = t1 <u a2\n 23154: a4 = a4 + a2\n 23157: a0 = a4 ^ a3\n 23160: a3 = a4 <u a3\n 23163: a3 = a2 if a0 == 0\n 23166: a0 = u64 [s1 + 0x30]\n 23169: a0 = a0 + a1\n 23172: a3 = a3 + a0\n 23175: a2 = a3 <u a0\n 23178: a5 = u64 [s1 + 0x38]\n 23181: t0 = t0 + a5\n 23184: a0 = a0 <u a1\n 23187: a0 = a0 + t0\n 23190: a0 = a0 + a2\n 23193: a1 = u64 [s1 + 0x18]\n 23196: a2 = 0\n 23198: u64 [a1 + 56] = 0\n 23201: u64 [a1 + 48] = 0\n 23204: u64 [a1 + 40] = 0\n 23207: u64 [a1 + 32] = 0\n 23210: u64 [a1] = t1\n 23212: u64 [a1 + 0x8] = a4\n 23215: u64 [a1 + 0x10] = a3\n 23218: u64 [a1 + 0x18] = a0\n 23221: sp = s0 + 0xffffffffffffff00\n 23225: ra = u64 [sp + 0xf8]\n 23229: s0 = u64 [sp + 0xf0]\n 23233: s1 = u64 [sp + 0xe8]\n 23237: sp = sp + 0x100\n 23241: ret\n      : @667 (gas: 8)\n 23243: u64 [s1 + 144] = 0\n 23247: u64 [s1 + 136] = 0\n 23251: u64 [s1 + 128] = 0\n 23255: a0 = 0x4e487b7100000000\n 23265: a1 = s1 + 0x80\n 23269: u64 [s1 + 0x98] = a0\n 23273: a0 = 0\n 23275: ra = 672, jump @19\n      : @668 [@dyn 336] (gas: 7)\n 23281: u64 [s1 + 120] = 0\n 23284: u64 [s1 + 112] = 0\n 23287: u64 [s1 + 96] = 0x32\n 23291: a0 = 0x4\n 23294: a1 = s1 + 0x60\n 23297: u64 [s1 + 104] = 0\n 23300: ra = 674, jump @19\n      : @669 [@dyn 337] (gas: 2)\n 23306: a1 = i32 [0x20064]\n 23311: jump @671 if a1 >u 63\n      : @670 (gas: 2)\n 23315: u32 [0x20064] = 0x40\n 23321: fallthrough\n      : @671 (gas: 7)\n 23322: a1 = 0x20070\n 23327: i32 a1 = a1 + 0\n 23329: a0 = 0x1\n 23332: a2 = 0x24\n 23335: ra = 0x2a4\n 23339: ecalli 7 // 'seal_return'\n 23341: fallthrough\n      : @672 [@dyn 338] (gas: 37)\n 23342: sp = sp + 0xfffffffffffffe40\n 23346: u64 [sp + 0x1b8] = ra\n 23350: u64 [sp + 0x1b0] = s0\n 23354: u64 [sp + 0x1a8] = s1\n 23358: s0 = sp + 0x1c0\n 23362: sp = sp & 0xffffffffffffffe0\n 23365: ra = u64 [a1]\n 23367: a4 = u64 [a2 + 0x8]\n 23370: t2 = u64 [a1 + 0x8]\n 23373: s1 = u64 [a2]\n 23375: a3 = ra + 0x1f\n 23378: t0 = a3 <u ra\n 23381: a5 = t2 + t0\n 23384: u64 [sp + 0x30] = s1\n 23387: t1 = a3 <u s1\n 23390: a3 = a5 ^ a4\n 23393: u64 [sp + 0x40] = a4\n 23396: a4 = a5 <u a4\n 23399: a4 = t1 if a3 == 0\n 23402: s1 = u64 [a1 + 0x10]\n 23405: a3 = a5 <u t2\n 23408: a3 = t0 if t0 == 0\n 23411: a5 = u64 [a2 + 0x18]\n 23414: t0 = u64 [a1 + 0x18]\n 23417: t1 = u64 [a2 + 0x10]\n 23420: a3 = a3 + s1\n 23423: a1 = a3 <u s1\n 23426: a1 = a1 + t0\n 23429: a2 = a1 ^ a5\n 23432: u64 [sp + 0x20] = a5\n 23435: a1 = a1 <s a5\n 23438: a5 = a3 <u t1\n 23441: a1 = a5 if a2 == 0\n 23444: a3 = a3 ^ t1\n 23447: a2 = a2 | a3\n 23450: a4 = a1 if a2 != 0\n 23453: jump @690 if a4 == 0\n      : @673 (gas: 13)\n 23457: u64 [sp + 0x18] = a0\n 23460: u64 [sp + 0x28] = t1\n 23463: a0 = ra | s1\n 23466: u64 [sp + 0x50] = t2\n 23469: u64 [sp + 0x38] = t0\n 23472: a1 = t2 | t0\n 23475: a0 = a0 | a1\n 23478: a0 = a0 >> 0x20\n 23481: u64 [sp + 0x48] = s1\n 23484: a1 = a1 | s1\n 23487: a1 = a1 << 0x20\n 23490: a0 = a0 | a1\n 23493: jump @689 if a0 != 0\n      : @674 (gas: 6)\n 23497: u64 [sp + 0x60] = ra\n 23500: i32 a1 = ra + 0\n 23502: i32 a0 = sp + 0x180\n 23506: u64 [sp + 0x10] = a1\n 23509: ecalli 1 // 'call_data_load'\n 23511: fallthrough\n      : @675 (gas: 13)\n 23512: a2 = u64 [sp + 0x198]\n 23516: a3 = u64 [sp + 0x190]\n 23520: a4 = u64 [sp + 0x188]\n 23524: a0 = a2 >u 0\n 23526: a1 = a3 >u 0\n 23528: a1 = a0 if a2 != 0\n 23531: u64 [sp + 0x90] = a2\n 23535: u64 [sp + 0x88] = a3\n 23539: a0 = a3 | a2\n 23542: u64 [sp + 0x98] = a4\n 23546: a2 = a4 >u 0\n 23548: a2 = a1 if a0 != 0\n 23551: jump @691 if a2 != 0\n      : @676 (gas: 4)\n 23555: s1 = u64 [sp + 0x180]\n 23559: a0 = sp + 0x160\n 23563: a1 = 0x40\n 23566: ra = 678, jump @17\n      : @677 [@dyn 339] (gas: 31)\n 23572: t0 = u64 [sp + 0x178]\n 23576: a5 = u64 [sp + 0x170]\n 23580: u64 [sp + 0x78] = a5\n 23583: t1 = u64 [sp + 0x168]\n 23587: u64 [sp + 0x80] = t1\n 23591: t2 = u64 [sp + 0x160]\n 23595: u64 [sp + 0x70] = t2\n 23598: a0 = s1 + 0x1f\n 23601: u64 [sp + 0x58] = s1\n 23604: a1 = a0 <u s1\n 23607: a2 = u64 [sp + 0x98]\n 23611: a1 = a1 + a2\n 23614: a1 = a1 & 0x1\n 23617: a0 = a0 & 0xffffffffffffffe0\n 23620: a2 = a0 + 0x20\n 23623: a0 = a2 <u a0\n 23626: a3 = a1 + a0\n 23629: a4 = a3 <u a1\n 23632: a4 = a0 if a0 == 0\n 23635: u64 [sp + 312] = 0\n 23639: u64 [sp + 0x120] = a2\n 23643: s1 = t0\n 23645: u64 [sp + 0x158] = t0\n 23649: u64 [sp + 0x150] = a5\n 23653: u64 [sp + 0x148] = t1\n 23657: u64 [sp + 0x140] = t2\n 23661: u64 [sp + 0x128] = a3\n 23665: a0 = sp + 0x140\n 23669: a1 = sp + 0x120\n 23673: u64 [sp + 0x130] = a4\n 23677: ra = 680, jump @620\n      : @678 [@dyn 340] (gas: 12)\n 23683: a2 = u64 [sp + 0x70]\n 23686: u64 [sp + 0x68] = s1\n 23689: a1 = u64 [sp + 0x80]\n 23693: a0 = a1 | s1\n 23696: a3 = u64 [sp + 0x78]\n 23699: a1 = a2 | a3\n 23702: a1 = a1 | a0\n 23705: a1 = a1 >> 0x20\n 23708: a0 = a0 | a3\n 23711: a0 = a0 << 0x20\n 23714: a0 = a0 | a1\n 23717: jump @689 if a0 != 0\n      : @679 (gas: 11)\n 23721: s1 = u64 [sp + 0x58]\n 23724: u64 [sp + 0x100] = s1\n 23728: a0 = u64 [sp + 0x98]\n 23732: u64 [sp + 0x108] = a0\n 23736: a0 = u64 [sp + 0x88]\n 23740: u64 [sp + 0x110] = a0\n 23744: a1 = sp + 0x100\n 23748: a0 = u64 [sp + 0x90]\n 23752: u64 [sp + 0x118] = a0\n 23756: a0 = a2\n 23758: ra = 682, jump @19\n      : @680 [@dyn 341] (gas: 46)\n 23764: a0 = u64 [sp + 0x60]\n 23767: a3 = a0 + s1\n 23770: a2 = a3 <u a0\n 23773: t2 = u64 [sp + 0x50]\n 23776: a0 = u64 [sp + 0x98]\n 23780: a0 = a0 + t2\n 23783: a0 = a0 + a2\n 23786: a4 = a0 ^ t2\n 23789: a1 = a0 <u t2\n 23792: a1 = a2 if a4 == 0\n 23795: ra = u64 [sp + 0x48]\n 23798: a2 = u64 [sp + 0x88]\n 23802: a2 = a2 + ra\n 23805: a5 = a3 + 0x20\n 23808: t0 = a5 <u a3\n 23811: a4 = a0 + t0\n 23814: a3 = u64 [sp + 0x30]\n 23817: a5 = a3 <u a5\n 23820: a3 = u64 [sp + 0x40]\n 23823: s1 = a4 ^ a3\n 23826: a3 = a3 <u a4\n 23829: a5 = a3 if s1 != 0\n 23832: a3 = a2 <u ra\n 23835: t1 = u64 [sp + 0x38]\n 23838: s1 = u64 [sp + 0x90]\n 23842: s1 = s1 + t1\n 23845: a3 = a3 + s1\n 23848: a1 = a1 + a2\n 23851: a2 = a1 <u a2\n 23854: a2 = a2 + a3\n 23857: a0 = a4 <u a0\n 23860: a0 = t0 if t0 == 0\n 23863: a0 = a0 + a1\n 23866: a1 = a0 <u a1\n 23869: a1 = a1 + a2\n 23872: a3 = u64 [sp + 0x20]\n 23875: a2 = a1 ^ a3\n 23878: a1 = a3 <u a1\n 23881: a4 = u64 [sp + 0x28]\n 23884: a3 = a4 <u a0\n 23887: a1 = a3 if a2 == 0\n 23890: a0 = a0 ^ a4\n 23893: a0 = a0 | a2\n 23896: a5 = a1 if a0 != 0\n 23899: a3 = u64 [sp + 0x98]\n 23903: jump @696 if a5 != 0\n      : @681 (gas: 7)\n 23907: a0 = ra | t1\n 23910: a1 = 0xffffffe0\n 23920: a2 = u64 [sp + 0x60]\n 23923: a1 = a2 <u a1\n 23926: a1 = 0 if t2 != 0\n 23928: a1 = 0 if a0 != 0\n 23930: jump @689 if a1 == 0\n      : @682 (gas: 15)\n 23934: a2 = u64 [sp + 0x88]\n 23938: a5 = u64 [sp + 0x58]\n 23941: a0 = a5 | a2\n 23944: a1 = u64 [sp + 0x90]\n 23948: a1 = a1 | a3\n 23951: a0 = a0 | a1\n 23954: a0 = a0 >> 0x20\n 23957: a1 = a1 | a2\n 23960: a1 = a1 << 0x20\n 23963: a0 = a0 | a1\n 23966: s1 = u64 [sp + 0x70]\n 23969: a2 = u64 [sp + 0x80]\n 23973: a3 = u64 [sp + 0x78]\n 23976: a4 = u64 [sp + 0x68]\n 23979: jump @689 if a0 != 0\n      : @683 (gas: 7)\n 23983: a0 = a3 | a4\n 23986: a1 = 0xffffffe0\n 23996: u64 [sp + 0x60] = a1\n 23999: a1 = s1 <u a1\n 24002: a1 = 0 if a2 != 0\n 24004: a1 = 0 if a0 != 0\n 24006: jump @689 if a1 == 0\n      : @684 (gas: 7)\n 24010: a0 = u64 [sp + 0x10]\n 24013: i32 a0 = a0 + 0x20\n 24016: u64 [sp + 0x50] = a0\n 24019: i32 a0 = s1 + 0x20\n 24022: a1 = a5\n 24024: s1 = a5\n 24026: ra = 684, jump @26\n      : @685 [@dyn 342] (gas: 5)\n 24032: i32 a0 = a0 + 0\n 24034: i32 a1 = s1 + 0\n 24036: a2 = u64 [sp + 0x50]\n 24039: ecalli 0 // 'call_data_copy'\n 24040: fallthrough\n      : @686 (gas: 27)\n 24041: t0 = u64 [sp + 0x70]\n 24044: a0 = t0 + s1\n 24047: a1 = a0 <u t0\n 24050: a2 = u64 [sp + 0x98]\n 24054: a4 = u64 [sp + 0x80]\n 24058: a2 = a2 + a4\n 24061: a2 = a2 + a1\n 24064: a3 = a2 ^ a4\n 24067: a4 = a2 <u a4\n 24070: a4 = a1 if a3 == 0\n 24073: a1 = u64 [sp + 0x88]\n 24077: a3 = u64 [sp + 0x78]\n 24080: a1 = a1 + a3\n 24083: a3 = a1 <u a3\n 24086: a5 = u64 [sp + 0x90]\n 24090: s1 = u64 [sp + 0x68]\n 24093: a5 = a5 + s1\n 24096: a3 = a3 + a5\n 24099: a4 = a4 + a1\n 24102: a1 = a4 <u a1\n 24105: a1 = a1 + a3\n 24108: a1 = a1 | a4\n 24111: a3 = u64 [sp + 0x60]\n 24114: a3 = a0 <u a3\n 24117: a3 = 0 if a2 != 0\n 24119: a3 = 0 if a1 != 0\n 24121: jump @689 if a3 == 0\n      : @687 (gas: 8)\n 24124: s1 = t0\n 24126: i32 a0 = a0 + 0x20\n 24129: u64 [sp + 248] = 0\n 24133: u64 [sp + 240] = 0\n 24137: u64 [sp + 232] = 0\n 24141: a1 = sp + 0xe0\n 24145: u64 [sp + 224] = 0\n 24149: ra = 686, jump @19\n      : @688 [@dyn 343] (gas: 14)\n 24155: a0 = u64 [sp + 0x18]\n 24158: a1 = u64 [sp + 0x68]\n 24161: u64 [a0 + 0x18] = a1\n 24164: a1 = u64 [sp + 0x78]\n 24167: u64 [a0 + 0x10] = a1\n 24170: a1 = u64 [sp + 0x80]\n 24174: u64 [a0 + 0x8] = a1\n 24177: u64 [a0] = s1\n 24179: sp = s0 + 0xfffffffffffffe40\n 24183: ra = u64 [sp + 0x1b8]\n 24187: s0 = u64 [sp + 0x1b0]\n 24191: s1 = u64 [sp + 0x1a8]\n 24195: sp = sp + 0x1c0\n 24199: ret\n      : @689 (gas: 1)\n 24201: trap\n      : @690 (gas: 2)\n 24202: a1 = 0x20070\n 24207: jump @697\n      : @691 (gas: 8)\n 24209: u64 [sp + 208] = 0\n 24213: u64 [sp + 200] = 0\n 24217: u64 [sp + 192] = 0\n 24221: a0 = 0x4e487b7100000000\n 24231: a1 = sp + 0xc0\n 24235: u64 [sp + 0xd8] = a0\n 24239: a0 = 0\n 24241: ra = 688, jump @19\n      : @692 [@dyn 344] (gas: 7)\n 24247: u64 [sp + 184] = 0\n 24251: u64 [sp + 176] = 0\n 24255: u64 [sp + 160] = 0x41\n 24260: a0 = 0x4\n 24263: a1 = sp + 0xa0\n 24267: u64 [sp + 168] = 0\n 24271: ra = 690, jump @19\n      : @693 [@dyn 345] (gas: 2)\n 24277: a1 = i32 [0x20064]\n 24282: jump @695 if a1 >u 63\n      : @694 (gas: 2)\n 24286: u32 [0x20064] = 0x40\n 24292: fallthrough\n      : @695 (gas: 7)\n 24293: a1 = 0x20070\n 24298: i32 a1 = a1 + 0\n 24300: a0 = 0x1\n 24303: a2 = 0x24\n 24306: ecalli 7 // 'seal_return'\n 24308: a1 = 0x20070\n 24313: jump @697\n      : @696 (gas: 2)\n 24315: a1 = 0x20070\n 24320: fallthrough\n      : @697 (gas: 6)\n 24321: i32 a1 = a1 + 0\n 24323: a0 = 0x1\n 24326: a2 = 0\n 24328: ra = 0x2b4\n 24332: ecalli 7 // 'seal_return'\n 24334: fallthrough\n      : @698 [@dyn 346] (gas: 37)\n 24335: sp = sp + 0xfffffffffffffea0\n 24339: u64 [sp + 0x158] = ra\n 24343: u64 [sp + 0x150] = s0\n 24347: u64 [sp + 0x148] = s1\n 24351: s0 = sp + 0x160\n 24355: sp = sp & 0xffffffffffffffe0\n 24358: a2 = u64 [a1]\n 24360: s1 = u64 [a1 + 0x18]\n 24363: a5 = u64 [a1 + 0x8]\n 24366: a1 = u64 [a1 + 0x10]\n 24369: t0 = a2 + 0xfffffffffffffffc\n 24372: u64 [sp + 0x30] = a2\n 24375: a2 = t0 <u a2\n 24378: a3 = a5 + a2\n 24381: a3 = a3 + 0xffffffffffffffff\n 24384: a4 = a3 ^ a5\n 24387: u64 [sp + 0x20] = a5\n 24390: a5 = a3 <u a5\n 24393: a5 = a2 if a4 == 0\n 24396: a2 = a1 + 0xffffffffffffffff\n 24399: a5 = a5 + a2\n 24402: a2 = a5 <u a2\n 24405: u64 [sp + 0x28] = a1\n 24408: a4 = a1 <u 0x1\n 24411: u64 [sp + 0x38] = s1\n 24414: a4 = s1 - a4\n 24417: a2 = a2 + a4\n 24420: a4 = a2 >s 0\n 24422: s1 = a5 >u 0\n 24424: s1 = a4 if a2 != 0\n 24427: a2 = a2 | a5\n 24430: a4 = a3 >u 0\n 24432: a1 = t0 <u 0x40\n 24435: a1 = a1 ^ 0x1\n 24438: a1 = a4 if a3 != 0\n 24441: a1 = s1 if a2 != 0\n 24444: jump @708 if a1 == 0\n      : @699 (gas: 6)\n 24448: s1 = a0\n 24450: i32 a0 = sp + 0x100\n 24454: a1 = 0x4\n 24457: ra = 0x2b6\n 24461: ecalli 1 // 'call_data_load'\n 24463: fallthrough\n      : @700 [@dyn 347] (gas: 7)\n 24464: a0 = u64 [sp + 0x118]\n 24468: a1 = u64 [sp + 0x110]\n 24472: a2 = u64 [sp + 0x108]\n 24476: a3 = a1 | a0\n 24479: a4 = a2 <u 0x1\n 24482: a4 = 0 if a3 != 0\n 24484: jump @709 if a4 == 0\n      : @701 (gas: 2)\n 24488: a3 = u64 [sp + 0x100]\n 24492: t0 = 696, jump @729\n      : @702 [@dyn 348] (gas: 15)\n 24498: u64 [sp + 0xa0] = a0\n 24502: a0 = u64 [sp + 0x20]\n 24505: u64 [sp + 0xa8] = a0\n 24509: u64 [sp + 0xc0] = a4\n 24513: a0 = u64 [sp + 0x28]\n 24516: u64 [sp + 0xb0] = a0\n 24520: a0 = u64 [sp + 0x38]\n 24523: u64 [sp + 0xb8] = a0\n 24527: u64 [sp + 0xc8] = a5\n 24531: u64 [sp + 0xd0] = a2\n 24535: a0 = sp + 0xe0\n 24539: a1 = sp + 0xc0\n 24543: a2 = sp + 0xa0\n 24547: u64 [sp + 0xd8] = a3\n 24551: ra = 698, jump @672\n      : @703 [@dyn 349] (gas: 13)\n 24557: a0 = u64 [sp + 0xf8]\n 24561: u64 [sp + 0x10] = a0\n 24564: a0 = u64 [sp + 0xf0]\n 24568: u64 [sp] = a0\n 24570: a0 = u64 [sp + 0xe8]\n 24574: u64 [sp + 0x18] = a0\n 24577: a0 = u64 [sp + 0xe0]\n 24581: u64 [sp + 0x8] = a0\n 24584: i32 a0 = sp + 0x120\n 24588: a1 = 0x24\n 24591: ra = 0x2bc\n 24595: ecalli 1 // 'call_data_load'\n 24597: fallthrough\n      : @704 [@dyn 350] (gas: 7)\n 24598: a0 = u64 [sp + 0x138]\n 24602: a1 = u64 [sp + 0x130]\n 24606: a2 = u64 [sp + 0x128]\n 24610: a3 = a1 | a0\n 24613: a4 = a2 <u 0x1\n 24616: a4 = 0 if a3 != 0\n 24618: jump @710 if a4 == 0\n      : @705 (gas: 2)\n 24622: a3 = u64 [sp + 0x120]\n 24626: t0 = 702, jump @729\n      : @706 [@dyn 351] (gas: 15)\n 24632: u64 [sp + 0x40] = a0\n 24635: a0 = u64 [sp + 0x20]\n 24638: u64 [sp + 0x48] = a0\n 24641: u64 [sp + 0x60] = a4\n 24644: a0 = u64 [sp + 0x28]\n 24647: u64 [sp + 0x50] = a0\n 24650: a0 = u64 [sp + 0x38]\n 24653: u64 [sp + 0x58] = a0\n 24656: u64 [sp + 0x68] = a5\n 24659: u64 [sp + 0x70] = a2\n 24662: a0 = sp + 0x80\n 24666: a1 = sp + 0x60\n 24669: a2 = sp + 0x40\n 24672: u64 [sp + 0x78] = a3\n 24675: ra = 704, jump @672\n      : @707 [@dyn 352] (gas: 22)\n 24681: a0 = u64 [sp + 0x90]\n 24685: a1 = u64 [sp + 0x98]\n 24689: a2 = u64 [sp + 0x80]\n 24693: a3 = u64 [sp + 0x88]\n 24697: u64 [s1 + 0x30] = a0\n 24700: u64 [s1 + 0x38] = a1\n 24703: u64 [s1 + 0x20] = a2\n 24706: u64 [s1 + 0x28] = a3\n 24709: a0 = u64 [sp]\n 24711: u64 [s1 + 0x10] = a0\n 24714: a0 = u64 [sp + 0x10]\n 24717: u64 [s1 + 0x18] = a0\n 24720: a0 = u64 [sp + 0x8]\n 24723: u64 [s1] = a0\n 24725: a0 = u64 [sp + 0x18]\n 24728: u64 [s1 + 0x8] = a0\n 24731: sp = s0 + 0xfffffffffffffea0\n 24735: ra = u64 [sp + 0x158]\n 24739: s0 = u64 [sp + 0x150]\n 24743: s1 = u64 [sp + 0x148]\n 24747: sp = sp + 0x160\n 24751: ret\n      : @708 (gas: 2)\n 24753: a1 = 0x20070\n 24758: jump @711\n      : @709 (gas: 2)\n 24760: a1 = 0x20070\n 24765: jump @711\n      : @710 (gas: 2)\n 24767: a1 = 0x20070\n 24772: fallthrough\n      : @711 (gas: 7)\n 24773: i32 a1 = a1 + 0\n 24775: a0 = 0x1\n 24778: a2 = 0\n 24780: ecalli 7 // 'seal_return'\n 24782: a0 = 0\n 24784: ra = 0x2c2\n 24788: jump @32\n      : @712 [export #0: 'call'] (gas: 2)\n 24791: a0 = 0\n 24793: ra = 706, jump @32\n      : @713 [@dyn 353] [export #1: 'deploy'] (gas: 2)\n 24799: a0 = 0x1\n 24802: ra = 708, jump @32\n      : @714 [@dyn 354] (gas: 32)\n 24808: a4 = u64 [s1 + 0x178]\n 24812: a2 = a4 <u 0x80\n 24816: a3 = u64 [s1 + 0x118]\n 24820: a0 = a3 if a2 != 0\n 24823: a5 = u64 [s1 + 0x120]\n 24827: a3 = u64 [s1 + 0x130]\n 24831: a3 = a3 | a5\n 24834: a3 = a1 if a2 == 0\n 24837: a0 = 0xffffffffffffffff if a4 == 0\n 24840: a3 = 0xffffffffffffffff if a4 == 0\n 24843: a5 = 0 if a2 == 0\n 24845: a4 = u64 [s1 + 0x128]\n 24849: a4 = 0 if a2 == 0\n 24851: a1 = u64 [s1 + 0x158]\n 24855: a1 = a1 & ~a3\n 24858: a2 = u64 [s1 + 0x160]\n 24862: a0 = a2 & ~a0\n 24865: a2 = u64 [s1 + 0x168]\n 24869: a2 = a2 & ~a4\n 24872: a3 = u64 [s1 + 0x170]\n 24876: a3 = a3 & ~a5\n 24879: a5 = s1 + 0x100\n 24883: a4 = u64 [a5 + 0x38]\n 24886: a0 = a0 | a4\n 24889: a4 = u64 [a5 + 0x40]\n 24892: a1 = a1 | a4\n 24895: a4 = u64 [a5 + 0x48]\n 24898: a3 = a3 | a4\n 24901: a4 = u64 [a5 + 0x50]\n 24904: a2 = a2 | a4\n 24907: a4 = s1 + 0x18d8\n 24911: jump [t0]\n      : @715 (gas: 14)\n 24913: a3 = a3 + a4\n 24916: u64 [s1 + 0x148] = a3\n 24920: a3 = a3 << 0x3b\n 24923: a4 = a2 >> 0x5\n 24926: a4 = a4 | a3\n 24929: a0 = u64 [s1 + 0x168]\n 24933: t1 = u64 [a0 + 0x18]\n 24936: a2 = a2 << 0x3b\n 24939: a3 = u64 [a0 + 0x10]\n 24942: a1 = a1 >> 0x5\n 24945: a0 = a1 | a2\n 24948: t2 = reverse t1\n 24950: a2 = reverse a3\n 24952: jump [t0]\n      : @716 (gas: 22)\n 24954: a4 = u64 [s1 + 0x178]\n 24958: a2 = a4 <u 0x80\n 24962: a3 = u64 [s1 + 0x130]\n 24966: a1 = a3 if a2 != 0\n 24969: a5 = u64 [s1 + 0x138]\n 24973: a3 = u64 [s1 + 0x148]\n 24977: a3 = a3 | a5\n 24980: a3 = a0 if a2 == 0\n 24983: a1 = 0xffffffffffffffff if a4 == 0\n 24986: a3 = 0xffffffffffffffff if a4 == 0\n 24989: a4 = u64 [s1 + 0x140]\n 24993: a4 = 0 if a2 == 0\n 24995: a5 = 0 if a2 == 0\n 24997: a0 = u64 [s1 + 0x150]\n 25001: a0 = a0 & ~a3\n 25004: a2 = u64 [s1 + 0x160]\n 25008: a1 = a2 & ~a1\n 25011: a2 = u64 [s1 + 0x168]\n 25015: a2 = a2 & ~a5\n 25018: a3 = u64 [s1 + 0x170]\n 25022: a3 = a3 & ~a4\n 25025: jump [t0]\n      : @717 (gas: 22)\n 25027: a4 = u64 [s1 + 0x178]\n 25031: a2 = a4 <u 0x80\n 25035: a3 = u64 [s1 + 0x120]\n 25039: a0 = a3 if a2 != 0\n 25042: a5 = u64 [s1 + 0x128]\n 25046: a3 = u64 [s1 + 0x138]\n 25050: a3 = a3 | a5\n 25053: a3 = a1 if a2 == 0\n 25056: a0 = 0xffffffffffffffff if a4 == 0\n 25059: a3 = 0xffffffffffffffff if a4 == 0\n 25062: a5 = 0 if a2 == 0\n 25064: a4 = u64 [s1 + 0x130]\n 25068: a4 = 0 if a2 == 0\n 25070: a1 = u64 [s1 + 0x158]\n 25074: a1 = a1 & ~a3\n 25077: a2 = u64 [s1 + 0x160]\n 25081: a0 = a2 & ~a0\n 25084: a2 = u64 [s1 + 0x168]\n 25088: a2 = a2 & ~a4\n 25091: a3 = u64 [s1 + 0x170]\n 25095: a3 = a3 & ~a5\n 25098: jump [t0]\n      : @718 (gas: 17)\n 25100: a2 = u64 [s1 + 0xe0]\n 25104: a0 = u64 [a2 + 0x8]\n 25107: a1 = i32 [a2 + 0x10]\n 25110: a2 = u64 [a2]\n 25112: a0 = reverse a0\n 25114: a3 = a0 << 0x20\n 25117: a1 = reverse a1\n 25119: a1 = a1 >> 0x20\n 25122: a3 = a3 | a1\n 25125: a0 = a0 >> 0x20\n 25128: a1 = reverse a2\n 25130: a2 = a1 << 0x20\n 25133: a0 = a0 | a2\n 25136: a1 = a1 >> 0x20\n 25139: a2 = s1 + 0x7ff\n 25143: a2 = a2 + 0xd9\n 25147: jump [t0]\n      : @719 (gas: 10)\n 25149: u64 [s1 + 0x138] = a0\n 25153: u64 [s1 + 0x140] = a1\n 25157: a0 = u64 [s1 + 0x130]\n 25161: a0 = a0 | a1\n 25164: u64 [s1 + 0x130] = a0\n 25168: a0 = u64 [s1 + 0x178]\n 25172: a2 = a0 + 0xffffffffffffff80\n 25175: a0 = 0xffffffffffffffff\n 25178: a1 = 0xffffffffffffffff\n 25181: jump [t0]\n      : @720 (gas: 8)\n 25183: a4 = a2 + a0\n 25186: a4 = a4 + a3\n 25189: a3 = a4 ^ a2\n 25192: u64 [s1 + 0x150] = a4\n 25196: a2 = a4 <u a2\n 25199: a2 = a0 if a3 == 0\n 25202: a4 = u64 [s1 + 0x148]\n 25206: jump [t0]\n      : @721 (gas: 7)\n 25208: a0 = a0 << 0x3b\n 25211: a1 = a0 >> 0x38\n 25214: u64 [s1 + 0x178] = a1\n 25218: a2 = 0x80 - a1\n 25222: a0 = 0xffffffffffffffff\n 25225: a1 = 0xffffffffffffffff\n 25228: jump [t0]\n      : @722 (gas: 7)\n 25230: a1 = a2 & ~a1\n 25233: a2 = u64 [s1 + 0x168]\n 25237: a2 = a2 & ~a5\n 25240: a3 = u64 [s1 + 0x170]\n 25244: a3 = a3 & ~a4\n 25247: a4 = s1 + 0x18d8\n 25251: jump [t0]\n      : @723 (gas: 16)\n 25253: a2 = u64 [s1 + 0xc0]\n 25257: a0 = u64 [a2 + 0x8]\n 25260: a1 = i32 [a2 + 0x10]\n 25263: a2 = u64 [a2]\n 25265: a0 = reverse a0\n 25267: a3 = a0 << 0x20\n 25270: a1 = reverse a1\n 25272: a1 = a1 >> 0x20\n 25275: a3 = a3 | a1\n 25278: a0 = a0 >> 0x20\n 25281: a1 = reverse a2\n 25283: a2 = a1 << 0x20\n 25286: a0 = a0 | a2\n 25289: a1 = a1 >> 0x20\n 25292: a2 = s1 + 0x10d8\n 25296: jump [t0]\n      : @724 (gas: 8)\n 25298: a0 = a0 + a4\n 25301: a3 = a3 + a1\n 25304: a5 = a3 <u a1\n 25307: a0 = a0 + a5\n 25310: ra = u64 [s1 + 0x140]\n 25314: ra = ra + a3\n 25317: a3 = ra <u a3\n 25320: jump [t0]\n      : @725 (gas: 15)\n 25322: a5 = a5 + a2\n 25325: a4 = a5 <u a2\n 25328: a0 = u64 [s1 + 0x170]\n 25332: a2 = a2 <u a0\n 25335: a0 = t2 + a2\n 25338: a0 = a0 + a4\n 25341: a2 = a1 | a5\n 25344: a0 = a0 | a3\n 25347: a2 = a2 | a0\n 25350: a2 = a2 >> 0x20\n 25353: a0 = a0 | a5\n 25356: a0 = a0 << 0x20\n 25359: a0 = a0 | a2\n 25362: u64 [s1 + 0x128] = t1\n 25366: jump [t0]\n      : @726 (gas: 14)\n 25368: a5 = a5 + a2\n 25371: a4 = a5 <u a2\n 25374: a0 = u64 [s1 + 0x170]\n 25378: a2 = a2 <u a0\n 25381: a0 = t2 + a2\n 25384: a0 = a0 + a4\n 25387: a2 = a1 | a5\n 25390: a0 = a0 | a3\n 25393: a2 = a2 | a0\n 25396: a2 = a2 >> 0x20\n 25399: a0 = a0 | a5\n 25402: a0 = a0 << 0x20\n 25405: a0 = a0 | a2\n 25408: jump [t0]\n      : @727 (gas: 5)\n 25410: u64 [s1 + 352] = 0\n 25414: u64 [s1 + 344] = 0\n 25418: u64 [s1 + 360] = 0\n 25422: u64 [s1 + 368] = 0\n 25426: jump [t0]\n      : @728 (gas: 6)\n 25428: a0 = a0 + a3\n 25431: a3 = a4 >> 0x5\n 25434: a4 = a0 << 0x3b\n 25437: a3 = a3 | a4\n 25440: a4 = u64 [s1 + 0x168]\n 25444: jump [t0]\n      : @729 (gas: 10)\n 25446: a4 = a3 + 0x4\n 25449: a3 = a4 <u a3\n 25452: a5 = a2 + a3\n 25455: a2 = a5 <u a2\n 25458: a2 = a3 if a3 == 0\n 25461: a2 = a2 + a1\n 25464: a1 = a2 <u a1\n 25467: a3 = a0 + a1\n 25470: a0 = u64 [sp + 0x30]\n 25473: jump [t0]\n      : @730 (gas: 13)\n 25475: a5 = a5 + a2\n 25478: a3 = a5 <u a2\n 25481: a2 = a2 <u t2\n 25484: a0 = t1 + a2\n 25487: a0 = a0 + a3\n 25490: a2 = a1 | a5\n 25493: a0 = a0 | a4\n 25496: a2 = a2 | a0\n 25499: a2 = a2 >> 0x20\n 25502: a0 = a0 | a5\n 25505: a0 = a0 << 0x20\n 25508: a0 = a0 | a2\n 25511: jump [t0]\n      : @731 (gas: 6)\n 25513: u64 [s1 + 0x148] = a0\n 25517: u64 [s1 + 0x130] = a1\n 25521: a0 = 0xffffffffffffffff\n 25524: a1 = 0xffffffffffffffff\n 25527: a2 = u64 [s1 + 0x178]\n 25531: jump [t0]\n      : @732 (gas: 10)\n 25533: u64 [s1 + 0x130] = a0\n 25537: u64 [s1 + 0x128] = a1\n 25541: a1 = u64 [s1 + 0x120]\n 25545: a0 = a0 | a1\n 25548: u64 [s1 + 0x120] = a0\n 25552: a0 = u64 [s1 + 0x178]\n 25556: i32 a2 = a0 + 0xffffffffffffff80\n 25559: a0 = 0xffffffffffffffff\n 25562: a1 = 0xffffffffffffffff\n 25565: jump [t0]\n      : @733 (gas: 10)\n 25567: u64 [s1 + 0x128] = a0\n 25571: u64 [s1 + 0x120] = a1\n 25575: a1 = u64 [s1 + 0x118]\n 25579: a0 = a0 | a1\n 25582: u64 [s1 + 0x118] = a0\n 25586: a0 = u64 [s1 + 0x178]\n 25590: i32 a2 = a0 + 0xffffffffffffff80\n 25593: a0 = 0xffffffffffffffff\n 25596: a1 = 0xffffffffffffffff\n 25599: jump [t0]\n      : @734 (gas: 12)\n 25601: a5 = s1 + 0x100\n 25605: u64 [a5 + 0x10] = a2\n 25608: u64 [a5 + 0x8] = a3\n 25611: a0 = a2 | a3\n 25614: a2 = a1 | a4\n 25617: a2 = a2 | a0\n 25620: a2 = a2 >> 0x20\n 25623: u64 [a5] = a4\n 25625: a0 = a0 | a4\n 25628: a0 = a0 << 0x20\n 25631: a0 = a0 | a2\n 25634: jump [t0]\n      : @735 (gas: 10)\n 25636: a3 = u64 [s1 + 0x178]\n 25640: a0 = u64 [a3 + 0x18]\n 25643: a1 = u64 [a3 + 0x10]\n 25646: a2 = u64 [a3 + 0x8]\n 25649: a3 = u64 [a3]\n 25651: a0 = reverse a0\n 25653: a1 = reverse a1\n 25655: a2 = reverse a2\n 25657: a3 = reverse a3\n 25659: jump [t0]\n      : @736 (gas: 9)\n 25661: a3 = t2\n 25663: u64 [a5] = t2\n 25665: u64 [a5 + 0x10] = t1\n 25668: t2 = a0\n 25670: u64 [a5 + 0x18] = a0\n 25673: u64 [s1 + 0x148] = t1\n 25677: a0 = u64 [s1 + 0x140]\n 25681: u64 [s1 + 0x178] = a0\n 25685: jump [t0]\n      : @737 (gas: 5)\n 25687: a0 = sp + 0xffffffffffffffe0\n 25690: a2 = a0 & 0xffffffffffffffe0\n 25693: u64 [s1 + 0x178] = a2\n 25697: sp = a2\n 25699: jump [t0]\n      : @738 (gas: 5)\n 25701: u64 [s1 + 0x178] = a1\n 25705: i32 a2 = 0x80 - a1\n 25709: a0 = 0xffffffffffffffff\n 25712: a1 = 0xffffffffffffffff\n 25715: jump [t0]\n      : @739 (gas: 8)\n 25717: u64 [sp + 48] = 0\n 25720: u64 [sp + 40] = 0\n 25723: u64 [sp + 32] = 0\n 25726: a0 = 0x4e487b7100000000\n 25736: a1 = sp + 0x20\n 25739: u64 [sp + 0x38] = a0\n 25742: a0 = 0\n 25744: jump [t0]\n      : @740 (gas: 8)\n 25746: a1 = sp + 0xffffffffffffffe0\n 25749: a1 = a1 & 0xffffffffffffffe0\n 25752: u64 [s1 + 0x150] = a1\n 25756: sp = a1\n 25758: i32 a0 = a0 + 0\n 25760: i32 a2 = a1 + 0\n 25762: a1 = 0x20\n 25765: jump [t0]\n      : @741 (gas: 7)\n 25767: a1 = a0 + 0x1f\n 25770: a0 = a1 <u a0\n 25773: a5 = u64 [s1 + 0xf0]\n 25777: a2 = a5 + a0\n 25780: a3 = a2 <u a5\n 25783: a3 = a0 if a0 == 0\n 25786: jump [t0]\n      : @742 (gas: 8)\n 25788: u64 [s1 + 0x158] = a5\n 25792: a5 = s1 + 0x100\n 25796: u64 [a5 + 0x70] = a4\n 25799: u64 [a5 + 0x60] = a3\n 25802: a0 = s1 + 0x7ff\n 25806: a0 = a0 + 0xd9\n 25810: a1 = u64 [a5 + 0x30]\n 25813: jump [t0]\n      : @743 (gas: 8)\n 25815: a0 = sp + 0xffffffffffffffe0\n 25818: a0 = a0 & 0xffffffffffffffe0\n 25821: u64 [s1 + 0x168] = a0\n 25825: sp = a0\n 25827: i32 a2 = a0 + 0\n 25829: a1 = 0x20\n 25832: a0 = u64 [s1 + 0xc0]\n 25836: jump [t0]\n      : @744 (gas: 8)\n 25838: a0 = sp + 0xffffffffffffffe0\n 25841: a0 = a0 & 0xffffffffffffffe0\n 25844: u64 [s1 + 0x168] = a0\n 25848: sp = a0\n 25850: i32 a2 = a0 + 0\n 25852: a1 = 0x20\n 25855: a0 = u64 [s1 + 0xb8]\n 25859: jump [t0]\n      : @745 (gas: 4)\n 25861: a0 = 0x10d8\n 25865: a3 = s1 + a0\n 25868: a4 = a3 + 0x600\n 25872: jump [t0]\n      : @746 (gas: 6)\n 25874: sp = s0 + 0xffffffffffffffa0\n 25877: ra = u64 [sp + 0x58]\n 25880: s0 = u64 [sp + 0x50]\n 25883: s1 = u64 [sp + 0x48]\n 25886: sp = sp + 0x60\n 25889: jump [t0]\n      : @747 (gas: 4)\n 25891: a1 = 0 if a3 != 0\n 25893: a4 = 0 if a1 != 0\n 25895: a0 = 0 if a1 != 0\n 25897: jump [t0]\n      : @748 (gas: 2)\n 25899: a3 = a2 & 0x40\n 25902: jump @752 if a3 != 0\n      : @749 (gas: 1)\n 25905: jump @751 if a2 == 0\n      : @750 (gas: 6)\n 25908: i32 a3 = 0x40 - a2\n 25911: a3 = a1 << a3\n 25914: a1 = a1 >> a2\n 25917: a0 = a0 >> a2\n 25920: a0 = a0 | a3\n 25923: ret\n      : @751 (gas: 1)\n 25925: ret\n      : @752 (gas: 4)\n 25927: a0 = a2 + 0xffffffffffffffc0\n 25930: a0 = a1 >> a0\n 25933: a1 = 0\n 25935: ret\n      : @753 (gas: 2)\n 25937: a3 = a2 & 0x40\n 25940: jump @757 if a3 != 0\n      : @754 (gas: 1)\n 25943: jump @756 if a2 == 0\n      : @755 (gas: 6)\n 25946: i32 a3 = 0x40 - a2\n 25949: a3 = a0 >> a3\n 25952: a0 = a0 << a2\n 25955: a1 = a1 << a2\n 25958: a1 = a1 | a3\n 25961: ret\n      : @756 (gas: 1)\n 25963: ret\n      : @757 (gas: 4)\n 25965: a1 = a2 + 0xffffffffffffffc0\n 25968: a1 = a0 << a1\n 25971: a0 = 0\n 25973: ret\n","bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{"consumerList(uint256)":"15baa8c0","consumers(address)":"0bf53668","getConsumerProfile(address)":"13214d1e","registerAsConsumer(string,string)":"4d70a913","updateConsumerProfile(string,string)":"a8d4ea14"}},"irOptimized":"/// @use-src 0:\"contracts/UserRegistry.sol\"\nobject \"ConsumerRegistry_330\" {\n    code {\n        {\n            /// @src 0:1762:3063  \"contract ConsumerRegistry {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"ConsumerRegistry_330_deployed\")\n            codecopy(_1, dataoffset(\"ConsumerRegistry_330_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"contracts/UserRegistry.sol\"\n    object \"ConsumerRegistry_330_deployed\" {\n        code {\n            {\n                /// @src 0:1762:3063  \"contract ConsumerRegistry {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x0bf53668 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _2 := and(value, sub(shl(160, 1), 1))\n                        if iszero(eq(value, _2)) { revert(0, 0) }\n                        mstore(0, _2)\n                        mstore(32, 0)\n                        let dataSlot := keccak256(0, 64)\n                        let cleaned := and(sload(/** @src 0:1900:1952  \"mapping(address => ConsumerProfile) public consumers\" */ dataSlot), /** @src 0:1762:3063  \"contract ConsumerRegistry {...\" */ sub(shl(160, 1), 1))\n                        finalize_allocation(_1, sub(abi_encode_string_storage(/** @src 0:1900:1952  \"mapping(address => ConsumerProfile) public consumers\" */ add(dataSlot, 1), /** @src 0:1762:3063  \"contract ConsumerRegistry {...\" */ _1), _1))\n                        let memPtr := mload(64)\n                        finalize_allocation(memPtr, sub(abi_encode_string_storage(/** @src 0:1900:1952  \"mapping(address => ConsumerProfile) public consumers\" */ add(dataSlot, 2), /** @src 0:1762:3063  \"contract ConsumerRegistry {...\" */ memPtr), memPtr))\n                        let memPos := mload(64)\n                        mstore(memPos, cleaned)\n                        mstore(add(memPos, 32), 96)\n                        let tail := abi_encode_string(_1, add(memPos, 96))\n                        mstore(add(memPos, 64), sub(tail, memPos))\n                        return(memPos, sub(abi_encode_string(memPtr, tail), memPos))\n                    }\n                    case 0x13214d1e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_1 := calldataload(4)\n                        let _3 := and(value_1, sub(shl(160, 1), 1))\n                        if iszero(eq(value_1, _3)) { revert(0, 0) }\n                        let memPtr_1 := mload(64)\n                        finalize_allocation_6877(memPtr_1)\n                        mstore(memPtr_1, 0)\n                        mstore(add(memPtr_1, 32), 96)\n                        mstore(add(memPtr_1, 64), 96)\n                        mstore(0, _3)\n                        mstore(32, 0)\n                        let dataSlot_1 := keccak256(0, 64)\n                        let memPtr_2 := mload(64)\n                        finalize_allocation_6877(memPtr_2)\n                        mstore(memPtr_2, and(sload(dataSlot_1), sub(shl(160, 1), 1)))\n                        let memPtr_3 := mload(64)\n                        finalize_allocation(memPtr_3, sub(abi_encode_string_storage(add(dataSlot_1, 1), memPtr_3), memPtr_3))\n                        mstore(add(memPtr_2, 32), memPtr_3)\n                        let memPtr_4 := mload(64)\n                        finalize_allocation(memPtr_4, sub(abi_encode_string_storage(add(dataSlot_1, 2), memPtr_4), memPtr_4))\n                        mstore(add(memPtr_2, 64), memPtr_4)\n                        let memPos_1 := mload(64)\n                        return(memPos_1, sub(abi_encode_struct_ConsumerProfile(memPos_1, memPtr_2), memPos_1))\n                    }\n                    case 0x15baa8c0 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_2 := calldataload(4)\n                        /// @src 0:1958:1987  \"address[] public consumerList\"\n                        if iszero(lt(value_2, /** @src 0:1762:3063  \"contract ConsumerRegistry {...\" */ sload(1)))\n                        /// @src 0:1958:1987  \"address[] public consumerList\"\n                        {\n                            revert(/** @src 0:1762:3063  \"contract ConsumerRegistry {...\" */ 0, 0)\n                        }\n                        /// @src 0:1958:1987  \"address[] public consumerList\"\n                        let slot, offset := storage_array_index_access_address_dyn(value_2)\n                        /// @src 0:1762:3063  \"contract ConsumerRegistry {...\"\n                        let value_3 := and(shr(shl(3, offset), sload(/** @src 0:1958:1987  \"address[] public consumerList\" */ slot)), /** @src 0:1762:3063  \"contract ConsumerRegistry {...\" */ sub(shl(160, 1), 1))\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, value_3)\n                        return(memPos_2, 32)\n                    }\n                    case 0x4d70a913 {\n                        if callvalue() { revert(0, 0) }\n                        let param, param_1 := abi_decode_stringt_string(calldatasize())\n                        mstore(0, /** @src 0:2235:2245  \"msg.sender\" */ caller())\n                        /// @src 0:1762:3063  \"contract ConsumerRegistry {...\"\n                        mstore(0x20, 0)\n                        if iszero(/** @src 0:2225:2269  \"consumers[msg.sender].consumer == address(0)\" */ iszero(/** @src 0:1762:3063  \"contract ConsumerRegistry {...\" */ and(sload(keccak256(0, 64)), sub(shl(160, 1), 1))))\n                        {\n                            let memPtr_5 := mload(64)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, 4), 0x20)\n                            mstore(add(memPtr_5, 36), 18)\n                            mstore(add(memPtr_5, 68), \"Already registered\")\n                            revert(memPtr_5, 100)\n                        }\n                        let memPtr_6 := mload(64)\n                        finalize_allocation_6877(memPtr_6)\n                        mstore(memPtr_6, /** @src 0:2235:2245  \"msg.sender\" */ caller())\n                        /// @src 0:2335:2376  \"ConsumerProfile(msg.sender, name, avatar)\"\n                        let _4 := add(memPtr_6, /** @src 0:1762:3063  \"contract ConsumerRegistry {...\" */ 0x20)\n                        mstore(_4, param)\n                        /// @src 0:2335:2376  \"ConsumerProfile(msg.sender, name, avatar)\"\n                        let _5 := add(memPtr_6, /** @src 0:1762:3063  \"contract ConsumerRegistry {...\" */ 64)\n                        mstore(_5, param_1)\n                        mstore(0, /** @src 0:2235:2245  \"msg.sender\" */ caller())\n                        /// @src 0:1762:3063  \"contract ConsumerRegistry {...\"\n                        mstore(0x20, 0)\n                        let dataSlot_2 := keccak256(0, 64)\n                        sstore(dataSlot_2, or(and(sload(dataSlot_2), shl(160, 0xffffffffffffffffffffffff)), and(mload(memPtr_6), sub(shl(160, 1), 1))))\n                        let memberSlot := add(dataSlot_2, 1)\n                        let _6 := mload(_4)\n                        let newLen := mload(_6)\n                        if gt(newLen, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        let _7 := extract_byte_array_length(sload(memberSlot))\n                        if gt(_7, 31)\n                        {\n                            mstore(0, memberSlot)\n                            let data := keccak256(0, 0x20)\n                            let deleteStart := add(data, shr(5, add(newLen, 31)))\n                            if lt(newLen, 0x20) { deleteStart := data }\n                            let _8 := add(data, shr(5, add(_7, 31)))\n                            let start := deleteStart\n                            for { } lt(start, _8) { start := add(start, 1) }\n                            { sstore(start, 0) }\n                        }\n                        let srcOffset := 0\n                        srcOffset := 0x20\n                        switch gt(newLen, 31)\n                        case 1 {\n                            let loopEnd := and(newLen, not(31))\n                            mstore(0, memberSlot)\n                            let dstPtr := keccak256(0, srcOffset)\n                            let i := 0\n                            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n                            {\n                                sstore(dstPtr, mload(add(_6, srcOffset)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, 0x20)\n                            }\n                            if lt(loopEnd, newLen)\n                            {\n                                let lastValue := mload(add(_6, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                            }\n                            sstore(memberSlot, add(shl(1, newLen), 1))\n                        }\n                        default {\n                            let value_4 := 0\n                            if newLen\n                            {\n                                value_4 := mload(add(_6, srcOffset))\n                            }\n                            sstore(memberSlot, or(and(value_4, not(shr(shl(3, newLen), not(0)))), shl(1, newLen)))\n                        }\n                        let memberSlot_1 := add(dataSlot_2, 2)\n                        let _9 := mload(_5)\n                        let newLen_1 := mload(_9)\n                        if gt(newLen_1, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        let _10 := extract_byte_array_length(sload(memberSlot_1))\n                        if gt(_10, 31)\n                        {\n                            mstore(0, memberSlot_1)\n                            let data_1 := keccak256(0, 0x20)\n                            let deleteStart_1 := add(data_1, shr(5, add(newLen_1, 31)))\n                            if lt(newLen_1, 0x20) { deleteStart_1 := data_1 }\n                            let _11 := add(data_1, shr(5, add(_10, 31)))\n                            let start_1 := deleteStart_1\n                            for { } lt(start_1, _11) { start_1 := add(start_1, 1) }\n                            { sstore(start_1, 0) }\n                        }\n                        let srcOffset_1 := 0\n                        srcOffset_1 := 0x20\n                        switch gt(newLen_1, 31)\n                        case 1 {\n                            let loopEnd_1 := and(newLen_1, not(31))\n                            mstore(0, memberSlot_1)\n                            let dstPtr_1 := keccak256(0, srcOffset_1)\n                            let i_1 := 0\n                            for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, 0x20) }\n                            {\n                                sstore(dstPtr_1, mload(add(_9, srcOffset_1)))\n                                dstPtr_1 := add(dstPtr_1, 1)\n                                srcOffset_1 := add(srcOffset_1, 0x20)\n                            }\n                            if lt(loopEnd_1, newLen_1)\n                            {\n                                let lastValue_1 := mload(add(_9, srcOffset_1))\n                                sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                            }\n                            sstore(memberSlot_1, add(shl(1, newLen_1), 1))\n                        }\n                        default {\n                            let value_5 := 0\n                            if newLen_1\n                            {\n                                value_5 := mload(add(_9, srcOffset_1))\n                            }\n                            sstore(memberSlot_1, or(and(value_5, not(shr(shl(3, newLen_1), not(0)))), shl(1, newLen_1)))\n                        }\n                        let oldLen := sload(1)\n                        if iszero(lt(oldLen, 18446744073709551616))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        sstore(1, add(oldLen, 1))\n                        let slot_1, offset_1 := storage_array_index_access_address_dyn(oldLen)\n                        let _12 := sload(slot_1)\n                        let shiftBits := shl(3, offset_1)\n                        sstore(slot_1, or(and(_12, not(shl(shiftBits, sub(shl(160, 1), 1)))), shl(shiftBits, /** @src 0:2235:2245  \"msg.sender\" */ caller())))\n                        /// @src 0:2471:2493  \"Registered(msg.sender)\"\n                        let _13 := /** @src 0:1762:3063  \"contract ConsumerRegistry {...\" */ mload(64)\n                        /// @src 0:2471:2493  \"Registered(msg.sender)\"\n                        log2(/** @src 0:1762:3063  \"contract ConsumerRegistry {...\" */ 0, 0, /** @src 0:2471:2493  \"Registered(msg.sender)\" */ 0x2d3734a8e47ac8316e500ac231c90a6e1848ca2285f40d07eaa52005e4b3a0e9, /** @src 0:2235:2245  \"msg.sender\" */ caller())\n                        /// @src 0:2508:2551  \"ConsumerProfileUpdated(msg.sender, profile)\"\n                        log2(_13, sub(abi_encode_struct_ConsumerProfile(_13, memPtr_6), _13), 0x621f4b2580428affb3127c56e7fc436870163f961b82cc2b6d5471522b4a8ac3, /** @src 0:2235:2245  \"msg.sender\" */ caller())\n                        /// @src 0:1762:3063  \"contract ConsumerRegistry {...\"\n                        return(0, 0)\n                    }\n                    case 0xa8d4ea14 {\n                        if callvalue() { revert(0, 0) }\n                        let param_2, param_3 := abi_decode_stringt_string(calldatasize())\n                        mstore(0, /** @src 0:2674:2684  \"msg.sender\" */ caller())\n                        /// @src 0:1762:3063  \"contract ConsumerRegistry {...\"\n                        mstore(0x20, 0)\n                        if /** @src 0:2664:2708  \"consumers[msg.sender].consumer != address(0)\" */ iszero(/** @src 0:1762:3063  \"contract ConsumerRegistry {...\" */ and(sload(keccak256(0, 64)), sub(shl(160, 1), 1)))\n                        {\n                            let memPtr_7 := mload(64)\n                            mstore(memPtr_7, shl(229, 4594637))\n                            mstore(add(memPtr_7, 4), 0x20)\n                            mstore(add(memPtr_7, 36), 14)\n                            mstore(add(memPtr_7, 68), \"Not a consumer\")\n                            revert(memPtr_7, 100)\n                        }\n                        mstore(0, /** @src 0:2674:2684  \"msg.sender\" */ caller())\n                        /// @src 0:1762:3063  \"contract ConsumerRegistry {...\"\n                        mstore(0x20, 0)\n                        let dataSlot_3 := keccak256(0, 64)\n                        /// @src 0:2802:2814  \"profile.name\"\n                        let _14 := add(dataSlot_3, 1)\n                        /// @src 0:1762:3063  \"contract ConsumerRegistry {...\"\n                        let newLen_2 := mload(param_2)\n                        if gt(newLen_2, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        let _15 := extract_byte_array_length(sload(_14))\n                        if gt(_15, 31)\n                        {\n                            mstore(0, _14)\n                            let data_2 := keccak256(0, 0x20)\n                            let deleteStart_2 := add(data_2, shr(5, add(newLen_2, 31)))\n                            if lt(newLen_2, 0x20) { deleteStart_2 := data_2 }\n                            let _16 := add(data_2, shr(5, add(_15, 31)))\n                            let start_2 := deleteStart_2\n                            for { }\n                            lt(start_2, _16)\n                            {\n                                start_2 := add(start_2, /** @src 0:2802:2814  \"profile.name\" */ 1)\n                            }\n                            /// @src 0:1762:3063  \"contract ConsumerRegistry {...\"\n                            { sstore(start_2, 0) }\n                        }\n                        let srcOffset_2 := 0\n                        srcOffset_2 := 0x20\n                        switch gt(newLen_2, 31)\n                        case 1 {\n                            let loopEnd_2 := and(newLen_2, not(31))\n                            mstore(0, _14)\n                            let dstPtr_2 := keccak256(0, srcOffset_2)\n                            let i_2 := 0\n                            for { } lt(i_2, loopEnd_2) { i_2 := add(i_2, 0x20) }\n                            {\n                                sstore(dstPtr_2, mload(add(param_2, srcOffset_2)))\n                                dstPtr_2 := add(dstPtr_2, /** @src 0:2802:2814  \"profile.name\" */ 1)\n                                /// @src 0:1762:3063  \"contract ConsumerRegistry {...\"\n                                srcOffset_2 := add(srcOffset_2, 0x20)\n                            }\n                            if lt(loopEnd_2, newLen_2)\n                            {\n                                let lastValue_2 := mload(add(param_2, srcOffset_2))\n                                sstore(dstPtr_2, and(lastValue_2, not(shr(and(shl(3, newLen_2), 248), not(0)))))\n                            }\n                            sstore(_14, add(shl(/** @src 0:2802:2814  \"profile.name\" */ 1, /** @src 0:1762:3063  \"contract ConsumerRegistry {...\" */ newLen_2), /** @src 0:2802:2814  \"profile.name\" */ 1))\n                        }\n                        default /// @src 0:1762:3063  \"contract ConsumerRegistry {...\"\n                        {\n                            let value_6 := 0\n                            if newLen_2\n                            {\n                                value_6 := mload(add(param_2, srcOffset_2))\n                            }\n                            sstore(_14, or(and(value_6, not(shr(shl(3, newLen_2), not(0)))), shl(/** @src 0:2802:2814  \"profile.name\" */ 1, /** @src 0:1762:3063  \"contract ConsumerRegistry {...\" */ newLen_2)))\n                        }\n                        /// @src 0:2831:2845  \"profile.avatar\"\n                        let _17 := add(dataSlot_3, 2)\n                        /// @src 0:1762:3063  \"contract ConsumerRegistry {...\"\n                        let newLen_3 := mload(param_3)\n                        if gt(newLen_3, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        let _18 := extract_byte_array_length(sload(_17))\n                        if gt(_18, 31)\n                        {\n                            mstore(0, _17)\n                            let data_3 := keccak256(0, 0x20)\n                            let deleteStart_3 := add(data_3, shr(5, add(newLen_3, 31)))\n                            if lt(newLen_3, 0x20) { deleteStart_3 := data_3 }\n                            let _19 := add(data_3, shr(5, add(_18, 31)))\n                            let start_3 := deleteStart_3\n                            for { }\n                            lt(start_3, _19)\n                            {\n                                start_3 := add(start_3, /** @src 0:2802:2814  \"profile.name\" */ 1)\n                            }\n                            /// @src 0:1762:3063  \"contract ConsumerRegistry {...\"\n                            { sstore(start_3, 0) }\n                        }\n                        let srcOffset_3 := 0\n                        srcOffset_3 := 0x20\n                        switch gt(newLen_3, 31)\n                        case 1 {\n                            let loopEnd_3 := and(newLen_3, not(31))\n                            mstore(0, _17)\n                            let dstPtr_3 := keccak256(0, srcOffset_3)\n                            let i_3 := 0\n                            for { } lt(i_3, loopEnd_3) { i_3 := add(i_3, 0x20) }\n                            {\n                                sstore(dstPtr_3, mload(add(param_3, srcOffset_3)))\n                                dstPtr_3 := add(dstPtr_3, /** @src 0:2802:2814  \"profile.name\" */ 1)\n                                /// @src 0:1762:3063  \"contract ConsumerRegistry {...\"\n                                srcOffset_3 := add(srcOffset_3, 0x20)\n                            }\n                            if lt(loopEnd_3, newLen_3)\n                            {\n                                let lastValue_3 := mload(add(param_3, srcOffset_3))\n                                sstore(dstPtr_3, and(lastValue_3, not(shr(and(shl(3, newLen_3), 248), not(0)))))\n                            }\n                            sstore(_17, add(shl(/** @src 0:2802:2814  \"profile.name\" */ 1, /** @src 0:1762:3063  \"contract ConsumerRegistry {...\" */ newLen_3), /** @src 0:2802:2814  \"profile.name\" */ 1))\n                        }\n                        default /// @src 0:1762:3063  \"contract ConsumerRegistry {...\"\n                        {\n                            let value_7 := 0\n                            if newLen_3\n                            {\n                                value_7 := mload(add(param_3, srcOffset_3))\n                            }\n                            sstore(_17, or(and(value_7, not(shr(shl(3, newLen_3), not(0)))), shl(/** @src 0:2802:2814  \"profile.name\" */ 1, /** @src 0:1762:3063  \"contract ConsumerRegistry {...\" */ newLen_3)))\n                        }\n                        /// @src 0:2869:2912  \"ConsumerProfileUpdated(msg.sender, profile)\"\n                        let _20 := /** @src 0:1762:3063  \"contract ConsumerRegistry {...\" */ mload(64)\n                        mstore(_20, 0x20)\n                        mstore(add(_20, 0x20), and(sload(dataSlot_3), sub(shl(160, 1), 1)))\n                        mstore(add(_20, 64), 0x60)\n                        let tail_1 := abi_encode_string_storage(_14, add(_20, 128))\n                        mstore(add(_20, 0x60), add(sub(tail_1, _20), not(31)))\n                        /// @src 0:2869:2912  \"ConsumerProfileUpdated(msg.sender, profile)\"\n                        log2(_20, sub(/** @src 0:1762:3063  \"contract ConsumerRegistry {...\" */ abi_encode_string_storage(_17, tail_1), /** @src 0:2869:2912  \"ConsumerProfileUpdated(msg.sender, profile)\" */ _20), 0x621f4b2580428affb3127c56e7fc436870163f961b82cc2b6d5471522b4a8ac3, /** @src 0:2674:2684  \"msg.sender\" */ caller())\n                        /// @src 0:1762:3063  \"contract ConsumerRegistry {...\"\n                        return(0, 0)\n                    }\n                }\n                revert(0, 0)\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function abi_encode_string_storage(value, pos) -> ret\n            {\n                let slotValue := sload(value)\n                let length := extract_byte_array_length(slotValue)\n                mstore(pos, length)\n                switch and(slotValue, 1)\n                case 0 {\n                    mstore(add(pos, 0x20), and(slotValue, not(255)))\n                    ret := add(add(pos, shl(5, iszero(iszero(length)))), 0x20)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:1762:3063  \"contract ConsumerRegistry {...\" */ value)\n                    let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:1762:3063  \"contract ConsumerRegistry {...\" */ 0x20)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 0:1762:3063  \"contract ConsumerRegistry {...\"\n                    for { } lt(i, length) { i := add(i, 0x20) }\n                    {\n                        mstore(add(add(pos, i), 0x20), sload(dataPos))\n                        dataPos := add(dataPos, 1)\n                    }\n                    ret := add(add(pos, i), 0x20)\n                }\n            }\n            function finalize_allocation_6877(memPtr)\n            {\n                let newFreePtr := add(memPtr, 96)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:1762:3063  \"contract ConsumerRegistry {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:1762:3063  \"contract ConsumerRegistry {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:1762:3063  \"contract ConsumerRegistry {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:1762:3063  \"contract ConsumerRegistry {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                mcopy(add(pos, 0x20), add(value, 0x20), length)\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 0:1762:3063  \"contract ConsumerRegistry {...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_struct_ConsumerProfile(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), and(mload(value0), sub(shl(160, 1), 1)))\n                let memberValue0 := mload(add(value0, 32))\n                mstore(add(headStart, 64), 0x60)\n                let tail_1 := abi_encode_string(memberValue0, add(headStart, 128))\n                let memberValue0_1 := mload(add(value0, 64))\n                mstore(add(headStart, 0x60), add(sub(tail_1, headStart), not(31)))\n                tail := abi_encode_string(memberValue0_1, tail_1)\n            }\n            function storage_array_index_access_address_dyn(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(/** @src 0:1958:1987  \"address[] public consumerList\" */ 1)))\n                /// @src 0:1762:3063  \"contract ConsumerRegistry {...\"\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:1958:1987  \"address[] public consumerList\" */ 1)\n                /// @src 0:1762:3063  \"contract ConsumerRegistry {...\"\n                slot := add(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:1762:3063  \"contract ConsumerRegistry {...\" */ 0x20), index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 0:1762:3063  \"contract ConsumerRegistry {...\"\n            function abi_decode_string(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:1762:3063  \"contract ConsumerRegistry {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:1762:3063  \"contract ConsumerRegistry {...\" */ 0x24)\n                }\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, add(and(add(length, 0x1f), not(31)), 0x20))\n                mstore(memPtr, length)\n                if gt(add(add(offset, length), 0x20), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:1762:3063  \"contract ConsumerRegistry {...\"\n                calldatacopy(add(memPtr, 0x20), add(offset, 0x20), length)\n                mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 0:1762:3063  \"contract ConsumerRegistry {...\"\n                array := memPtr\n            }\n            function abi_decode_stringt_string(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let offset := calldataload(4)\n                if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                value0 := abi_decode_string(add(4, offset), dataEnd)\n                let offset_1 := calldataload(36)\n                if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n                value1 := abi_decode_string(add(4, offset_1), dataEnd)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212205d7047723fd543a2f64d1b9ffbb846c2ecac2458b40b0f49d145e4c98e3cc9f864736f6c634300081c0033\"\n    }\n}\n","hash":"982da4e55a21a926ed01a0bb450a415076ffac8c538589c5b08f3dedcdb58434","factoryDependencies":{}}}}}}